(self.webpackChunkawg_app=self.webpackChunkawg_app||[]).push([[884],{9884:(d,v,i)=>{"use strict";i.r(v),i.d(v,{EditionSheetsModule:()=>W});var l=i(1316),t=i(4496),c=i(5096),K=i(4208);var ee=i(3508),te=i.n(ee),x=i(8384),N=i(7128);let b=class{constructor(e){this.utils=e,this.navigateToReportFragmentRequest=new t._w7,this.openModalRequest=new t._w7,this.selectSvgSheetRequest=new t._w7,this.faChevronRight=x.wj6,this.faChevronUp=x.QrJ,this.showTextcritics=!1,this.ref=this}navigateToReportFragment(e){e&&this.navigateToReportFragmentRequest.emit(e)}openModal(e){e&&this.openModalRequest.emit(e)}selectSvgSheet(e){e?.sheetId&&this.selectSvgSheetRequest.emit(e)}toggleTextcritics(){this.showTextcritics=!this.showTextcritics}static#e=this.ctorParameters=()=>[{type:N.UZ}];static#t=this.propDecorators={selectedTextcriticalComments:[{type:t.EFl}],selectedTextcritics:[{type:t.EFl}],showTkA:[{type:t.EFl}],navigateToReportFragmentRequest:[{type:t.C_D}],openModalRequest:[{type:t.C_D}],selectSvgSheetRequest:[{type:t.C_D}]}};b=(0,l.UN)([(0,t.YlN)({selector:"awg-edition-svg-sheet-footer",template:'<div class="awg-edition-svg-sheet-footer mt-4">\n    <div class="awg-edition-svg-sheet-footer-evaluation">\n        <p (click)="toggleTextcritics()" style="cursor: pointer">\n            @if (selectedTextcritics.description && utils.isNotEmptyArray(selectedTextcritics.description)) {\n                <span>\n                    <fa-icon [icon]="showTextcritics ? faChevronUp : faChevronRight"></fa-icon>\n                    &nbsp;\n                </span>\n            }\n            <span class="caps">Skizzenkommentar:</span>\n            @if (selectedTextcritics.description && !utils.isNotEmptyArray(selectedTextcritics.description)) {\n                <span>&nbsp;---</span>\n            }\n        </p>\n        @if (\n            showTextcritics && selectedTextcritics.description && utils.isNotEmptyArray(selectedTextcritics.description)\n        ) {\n            <awg-edition-tka-description\n                [textcriticalDescriptions]="selectedTextcritics.description"\n                (navigateToReportFragmentRequest)="navigateToReportFragment($event)"\n                (openModalRequest)="openModal($event)"\n                (selectSvgSheetRequest)="selectSvgSheet($event)">\n            </awg-edition-tka-description>\n        }\n    </div>\n    @if (showTkA) {\n        <div class="awg-edition-svg-sheet-footer-textcritics">\n            <p class="caps">Textkritischer Kommentar:</p>\n            <awg-edition-tka-table\n                [textcriticalComments]="selectedTextcriticalComments"\n                [isRowTable]="selectedTextcritics.rowtable"\n                (navigateToReportFragmentRequest)="navigateToReportFragment($event)"\n                (openModalRequest)="openModal($event)"\n                (selectSvgSheetRequest)="selectSvgSheet($event)">\n            </awg-edition-tka-table>\n        </div>\n    }\n</div>\n',changeDetection:t.isP.OnPush,styles:[te()]})],b);let q=class{};q=(0,l.UN)([(0,t.S0t)({imports:[c.k,K.s],declarations:[b],exports:[b]})],q);var ie=i(3944),ne=i.n(ie);let O=class{constructor(e){this.utils=e,this.selectSvgSheetRequest=new t._w7}isSelectedSvgSheet(e,s){let n=e,a=this.selectedSvgSheet.id;return s&&this.selectedSvgSheet.content?.[0]?.partial&&(n+=s,a+=this.selectedSvgSheet.content[0].partial),n===a}selectSvgSheet(e,s){s&&this.selectSvgSheetRequest.emit({complexId:e,sheetId:s})}static#e=this.ctorParameters=()=>[{type:N.UZ}];static#t=this.propDecorators={navItemLabel:[{type:t.EFl}],svgSheets:[{type:t.EFl}],selectedSvgSheet:[{type:t.EFl}],selectSvgSheetRequest:[{type:t.C_D}]}};O=(0,l.UN)([(0,t.YlN)({selector:"awg-edition-svg-sheet-nav-item",template:'<h6 class="card-title">\n    {{ navItemLabel }}:\n    @if (!utils.isNotEmptyArray(svgSheets)) {\n        <span>---</span>\n    }\n</h6>\n@for (svgSheet of svgSheets; track svgSheet) {\n    @if (svgSheet.content.length === 1) {\n        <a\n            class="btn btn-default w-100 awg-svg-sheet-nav-link card-text text-start"\n            [ngClass]="{ active: isSelectedSvgSheet(svgSheet.id), \'text-muted\': !isSelectedSvgSheet(svgSheet.id) }"\n            (click)="selectSvgSheet(\'\', svgSheet.id)">\n            {{ svgSheet.label }}\n        </a>\n    }\n    @if (svgSheet.content.length > 1) {\n        <div class="awg-svg-sheet-nav-link-dropdown" ngbDropdown>\n            <a\n                class="btn card-text"\n                id="dropDownSheetNav"\n                ngbDropdownToggle\n                [ngClass]="{ active: isSelectedSvgSheet(svgSheet.id), \'text-muted\': !isSelectedSvgSheet(svgSheet.id) }">\n                <span\n                    >{{ svgSheet.label }} <span class="badge bg-secondary">{{ svgSheet.content.length }}</span></span\n                >\n            </a>\n            <div ngbDropdownMenu aria-labelledby="dropdownSheetNav">\n                @for (svgSheetContent of svgSheet.content; track svgSheetContent; let i = $index) {\n                    <div>\n                        <a\n                            class="dropdown-item"\n                            [ngClass]="{\n                                active: isSelectedSvgSheet(svgSheet.id, svgSheetContent.partial),\n                                \'text-muted\': !isSelectedSvgSheet(svgSheet.id, svgSheetContent.partial)\n                            }"\n                            (click)="selectSvgSheet(\'\', svgSheet.id + svgSheetContent.partial)"\n                            >{{ svgSheet.label }}\n                            <span class="text-muted">[{{ i + 1 }}/{{ svgSheet.content.length }}]</span></a\n                        >\n                    </div>\n                }\n            </div>\n        </div>\n    }\n}\n',styles:[ne()]})],O);var ae=i(3240),le=i.n(ae);let k=class{constructor(){this.selectSvgSheetRequest=new t._w7}selectSvgSheet(e){e?.sheetId&&this.selectSvgSheetRequest.emit(e)}static#e=this.propDecorators={svgSheetsData:[{type:t.EFl}],selectedSvgSheet:[{type:t.EFl}],selectSvgSheetRequest:[{type:t.C_D}]}};k=(0,l.UN)([(0,t.YlN)({selector:"awg-edition-svg-sheet-nav",template:'@if (svgSheetsData) {\n    <div class="awg-svg-sheet-nav card">\n        <div class="card-body">\n            <awg-edition-svg-sheet-nav-item\n                [navItemLabel]="\'Werkeditionen\'"\n                [svgSheets]="svgSheetsData.sheets.workEditions"\n                [selectedSvgSheet]="selectedSvgSheet"\n                (selectSvgSheetRequest)="selectSvgSheet($event)"></awg-edition-svg-sheet-nav-item>\n            <hr />\n            <awg-edition-svg-sheet-nav-item\n                [navItemLabel]="\'Texteditionen\'"\n                [svgSheets]="svgSheetsData.sheets.textEditions"\n                [selectedSvgSheet]="selectedSvgSheet"\n                (selectSvgSheetRequest)="selectSvgSheet($event)"></awg-edition-svg-sheet-nav-item>\n            <hr />\n            <awg-edition-svg-sheet-nav-item\n                [navItemLabel]="\'Skizzeneditionen\'"\n                [svgSheets]="svgSheetsData.sheets.sketchEditions"\n                [selectedSvgSheet]="selectedSvgSheet"\n                (selectSvgSheetRequest)="selectSvgSheet($event)"></awg-edition-svg-sheet-nav-item>\n        </div>\n    </div>\n}\n',changeDetection:t.isP.OnPush,styles:[le()]})],k);let G=class{};G=(0,l.UN)([(0,t.S0t)({imports:[c.k],declarations:[k,O],exports:[k,O]})],G);var ce=i(1172),de=i.n(ce);let T=class{constructor(){this.toggleSuppliedClassesOpacityRequest=new t._w7,this.toggleTkkClassesHighlightRequest=new t._w7,this.allClassesVisible=!0,this.tkkHighlightingVisible=!0}ngOnChanges(e){e.suppliedClasses&&!e.suppliedClasses.isFirstChange()&&(this.allClassesVisible=!0,this.tkkHighlightingVisible=!0)}toggleSingleSuppliedClassOpacity(e){const s=this.suppliedClasses.get(e)||!1;this._onSuppliedClassesOpacityToggle(e,s),this.suppliedClasses.set(e,!s);const n=Array.from(this.suppliedClasses.values());n.every(a=>a===n[0])&&(this.allClassesVisible=n[0])}toggleAllClassesOpacity(){this._onSuppliedClassesOpacityToggle(void 0,this.allClassesVisible),this.allClassesVisible=!this.allClassesVisible,this.suppliedClasses.forEach((e,s)=>{this.suppliedClasses.set(s,this.allClassesVisible)}),this.toggleTkkClassesHighlight(this.allClassesVisible)}toggleTkkClassesHighlight(e){this.tkkHighlightingVisible=void 0!==e?e:!this.tkkHighlightingVisible,this.toggleTkkClassesHighlightRequest.emit(this.tkkHighlightingVisible),this._updateAllClassesVisibility()}_onSuppliedClassesOpacityToggle(e,s){this.toggleSuppliedClassesOpacityRequest.emit({className:e,isCurrentlyVisible:s})}_updateAllClassesVisibility(){const e=[...Array.from(this.suppliedClasses.values()),this.tkkHighlightingVisible],s=e.every(a=>a),n=e.every(a=>!a);(s||n)&&(this.allClassesVisible=e[0])}static#e=this.propDecorators={suppliedClasses:[{type:t.EFl}],hasAvailableTkaOverlays:[{type:t.EFl}],toggleSuppliedClassesOpacityRequest:[{type:t.C_D}],toggleTkkClassesHighlightRequest:[{type:t.C_D}]}};T=(0,l.UN)([(0,t.YlN)({selector:"awg-edition-svg-sheet-viewer-switch",template:'<div class="card awg-edition-svg-sheet-viewer-settings float-none my-2">\n    <div class="card-header">\n        <span class="mx-2">Editorische Erg\xe4nzungen</span>\n    </div>\n    <div class="card-body">\n        <div class="row">\n            <div class="col-4">\n                <div class="form-check form-switch">\n                    <input\n                        class="form-check-input"\n                        type="checkbox"\n                        [checked]="allClassesVisible"\n                        value=""\n                        id="all-supplied-classes"\n                        (click)="toggleAllClassesOpacity()" />\n                    <label class="form-check-label" for="all-supplied-classes">\n                        Alle {{ allClassesVisible ? \'aus\' : \'ein\' }}blenden\n                    </label>\n                </div>\n            </div>\n            @for (suppliedClass of suppliedClasses | keyvalue; track suppliedClass; let i = $index) {\n                <div class="col-4">\n                    <div class="form-check form-switch">\n                        <input\n                            class="form-check-input"\n                            type="checkbox"\n                            [checked]="suppliedClass.value"\n                            value=""\n                            [id]="suppliedClass.key"\n                            (click)="toggleSingleSuppliedClassOpacity(suppliedClass.key)" />\n                        <label class="form-check-label" [for]="suppliedClass.key">{{ suppliedClass.key }}</label>\n                    </div>\n                </div>\n                \x3c!-- Add a new row after every third item --\x3e\n                @if ((i + 2) % 3 === 0) {\n                    <div class="w-100"></div>\n                }\n            }\n            @if (hasAvailableTkaOverlays) {\n                <div class="col-4">\n                    <div class="form-check form-switch">\n                        <input\n                            class="form-check-input"\n                            type="checkbox"\n                            [checked]="tkkHighlightingVisible"\n                            value=""\n                            id="tkk"\n                            (click)="toggleTkkClassesHighlight()" />\n                        <label class="form-check-label" for="tkk">Textkritische Kommentare</label>\n                    </div>\n                </div>\n            }\n        </div>\n    </div>\n</div>\n',changeDetection:t.isP.OnPush,styles:[de()]})],T);var he=i(1528);var ve=i(9840),pe=i.n(ve),z=i(5657),Se=i(4680),j=i(3616),ue=i(512),p=i(4868),E=i(6396),me=i(1944);let D=class{constructor(e,s){this.cdr=e,this.svgDrawingService=s,this.browseSvgSheetRequest=new t._w7,this.selectLinkBoxRequest=new t._w7,this.selectOverlaysRequest=new t._w7,this.faCompressArrowsAlt=x._iD,this.hasAvailableTkaOverlays=!1,this.sliderConfig=new ue.G(1,.1,10,.01,1),this.suppliedClasses=new Map,this.svgSheetFilePath="",this._availableTkaOverlays=[],this._selectedTkaOverlays=[],this._isRendered=!1,this._resize$=new z.E,this._destroyed$=new z.E,this.ref=this}onResize(){!this.svgSheetSelection||!this.svgSheetRootGroupSelection||(this._getContainerDimensions(this.svgSheetContainerRef),this._resize$.next(!0))}ngOnChanges(e){e.selectedSvgSheet&&this._isRendered&&this.renderSheet()}ngAfterViewInit(){this._resize$.pipe((0,Se.o)(150),(0,j.a)(this._destroyed$)).subscribe(e=>{this.renderSheet()}),this.renderSheet(),this._isRendered=!0}ngOnDestroy(){this._destroyed$.next(!0),this._destroyed$.complete()}browseSvgSheet(e){e&&this.browseSvgSheetRequest.emit(e)}onSuppliedClassesOpacityToggle(e){const{className:s,isCurrentlyVisible:n}=e;this.svgDrawingService.toggleSuppliedClassOpacity(this.svgSheetRootGroupSelection,s,n)}onTkkClassesHighlightToggle(e){this.svgDrawingService.getGroupsBySelector(this.svgSheetRootGroupSelection,"tkk").nodes().forEach(a=>{const[o,r]=this._getOverlayAndSelection(a.id,"tkk"),g=e?p.wH.fill:p.wH.transparent;this.svgDrawingService.updateTkkOverlayColor(o,r,g)})}onZoomChange(e){this.sliderConfig.value=e,this._rescaleZoom()}renderSheet(){this._clearSvg(),this._availableTkaOverlays=[],this._selectedTkaOverlays=[],this.svgSheetFilePath=this.selectedSvgSheet?.content?.[0].svg,this.svgSheetFilePath&&this._createSvg().then(()=>{this.resetZoom(),this._createSvgOverlays(),this.cdr.detectChanges()})}resetZoom(){!this.svgSheetSelection||!this.sliderConfig||(this.onZoomChange(this.sliderConfig.initial),this._resetZoomTranslation())}_clearSvg(){this.svgSheetRootGroupSelection?.selectAll("*").remove(),this.svgSheetSelection?.selectAll("*").remove()}_createSvg(){var e=this;return(0,he.c)(function*(){e.svgSheetContainerRef?(e.svgSheetSelection=yield e.svgDrawingService.createSvg(e.svgSheetFilePath,e.svgSheetElementRef?.nativeElement,e.svgSheetRootGroupRef?.nativeElement),e.svgSheetRootGroupSelection=e.svgSheetSelection.select("#awg-edition-svg-sheet-root-group"),e._getContainerDimensions(e.svgSheetContainerRef),e._zoomHandler(e.svgSheetRootGroupSelection,e.svgSheetSelection)):console.warn("No svg sheet container ref")})()}_createSvgOverlays(){this.svgSheetRootGroupSelection&&(this._createOverlays("link-box",this._createLinkBoxOverlay.bind(this)),this._createOverlays("tkk",this._createTkaOverlay.bind(this)),this.hasAvailableTkaOverlays=!!this._availableTkaOverlays&&this._availableTkaOverlays.length>0,this._getSuppliedClasses())}_createOverlays(e,s){const n=this.svgDrawingService.getGroupsBySelector(this.svgSheetRootGroupSelection,e);n&&n.nodes().forEach(a=>{s(a,e)})}_createLinkBoxOverlay(e,s){const n=e.id,a=this.svgDrawingService.getD3SelectionById(this.svgSheetRootGroupSelection,n),o=a.select("path");o.style("fill",this.svgDrawingService.linkBoxFillColor),a.on("mouseover",()=>{const r=this.svgDrawingService.linkBoxHoverFillColor;this.svgDrawingService.fillD3SelectionWithColor(o,r),a.style("cursor","pointer")}).on("mouseout",()=>{const r=this.svgDrawingService.linkBoxFillColor;this.svgDrawingService.fillD3SelectionWithColor(o,r)}).on("click",()=>{this._onLinkBoxSelect(n)})}_createTkaOverlay(e,s){const n=e.id,a=e.getBBox();this._availableTkaOverlays.push(new p.Gc(p._g.tka,n,!1));const o=this.svgDrawingService.createOverlayGroup(this.svgSheetRootGroupSelection,n,a,s),[r,g]=this._getOverlayAndSelection(n,s);o.on("mouseover",()=>{this.svgDrawingService.updateTkkOverlayColor(r,g,p.wH.hover),g.style("cursor","pointer")}).on("mouseout",()=>{this.svgDrawingService.updateTkkOverlayColor(r,g,p.wH.fill)}).on("click",()=>{r&&(r.isSelected=!r.isSelected),this.svgDrawingService.updateTkkOverlayColor(r,g,p.wH.hover),this._selectedTkaOverlays=this._getSelectedOverlays(this._availableTkaOverlays),this._onOverlaySelect(this._selectedTkaOverlays)})}_getContainerDimensions(e){const s=this.svgDrawingService.getContainerDimensions(e);this._divWidth=this._divWidth?this._divWidth:s.width,this._divHeight=this._divHeight?this._divHeight:s.height}_getOverlayById(e,s){return e.find(n=>n.id===s)}_getOverlayAndSelection(e,s){return[this._getOverlayById(this._availableTkaOverlays,e),this.svgDrawingService.getOverlayGroupRectSelection(this.svgSheetRootGroupSelection,e,s)]}_getSelectedOverlays(e){return e.filter(s=>s.isSelected)}_getSuppliedClasses(){this.suppliedClasses=this.svgDrawingService.getSuppliedClasses(this.svgSheetRootGroupSelection)}_onLinkBoxSelect(e){e&&this.selectLinkBoxRequest.emit(e)}_onOverlaySelect(e){e&&this.selectOverlaysRequest.emit(e)}_rescaleZoom(){!this.svgSheetSelection||!this.sliderConfig.value||this._zoomBehaviour.scaleTo(this.svgSheetSelection,this.sliderConfig.value)}_resetZoomTranslation(){!this.svgSheetSelection||!this.svgSheetRootGroupSelection||this.svgSheetRootGroupSelection.attr("transform","translate(0,0)")}_roundToScaleStepDecimalPrecision(e){const s=this.sliderConfig.stepSize;return((o,r)=>+(Math.round(+(o+"e"+r))+"e-"+r))(e,(o=s,Math.floor(o)===o?0:o.toString().split(".")[1].length));var o}_zoomHandler(e,s){this._zoomBehaviour=me.AT().scaleExtent([this.sliderConfig.min,this.sliderConfig.max]).on("zoom",a=>{const o=a.transform,r=this._roundToScaleStepDecimalPrecision(o.k);e.attr("transform",o),this.sliderInput?.nativeElement&&(this.sliderInput.nativeElement.value=r,this.sliderConfig.value=r),this.sliderInputLabel?.nativeElement&&(this.sliderInputLabel.nativeElement.innerText=r+"x")}),s.call(this._zoomBehaviour)}static#e=this.ctorParameters=()=>[{type:t.kD9},{type:E.cV}];static#t=this.propDecorators={svgSheetContainerRef:[{type:t._io,args:["svgSheetContainer"]}],svgSheetElementRef:[{type:t._io,args:["svgSheetElement"]}],svgSheetRootGroupRef:[{type:t._io,args:["svgSheetRootGroup"]}],sliderInput:[{type:t._io,args:["sliderInput"]}],sliderInputLabel:[{type:t._io,args:["sliderInputLabel"]}],selectedSvgSheet:[{type:t.EFl}],browseSvgSheetRequest:[{type:t.C_D}],selectLinkBoxRequest:[{type:t.C_D}],selectOverlaysRequest:[{type:t.C_D}],onResize:[{type:t.kH7,args:["window:resize"]}]}};D=(0,l.UN)([(0,t.YlN)({selector:"awg-edition-svg-sheet-viewer",template:'@if (selectedSvgSheet) {\n    <div id="awg-edition-svg-container">\n        <div class="awg-edition-svg-sheet-viewer">\n            <div class="awg-edition-svg-icon-bar">\n                \x3c!-- Slider --\x3e\n                <div class="input-group input-group-sm awg-edition-svg-zoom-slider-container float-start mx-2r my-2">\n                    <span #sliderInputLabel class="input-group-text" id="slider-label">{{ sliderConfig.value }}x</span>\n                    <input\n                        type="range"\n                        #sliderInput\n                        class="awg-edition-svg-zoom-slider"\n                        id="awg-edition-svg-zoom-slider"\n                        name="zoomSlider"\n                        aria-label="Zoom slider"\n                        aria-describedby="slider-label"\n                        [min]="sliderConfig.min"\n                        [max]="sliderConfig.max"\n                        [step]="sliderConfig.stepSize"\n                        [(ngModel)]="sliderConfig.value"\n                        (ngModelChange)="onZoomChange($event)" />\n                    <button class="btn btn-sm btn-outline-info" type="submit" title="Reset zoom" (click)="resetZoom()">\n                        <fa-icon [icon]="faCompressArrowsAlt"></fa-icon>\n                    </button>\n                </div>\n            </div>\n            <div #svgSheetContainer class="awg-edition-svg-sheet-container px-2r">\n                <svg #svgSheetElement id="awg-edition-svg-sheet">\n                    <g #svgSheetRootGroup id="awg-edition-svg-sheet-root-group"></g>\n                </svg>\n                <awg-license class="d-flex mt-3 text-center small"></awg-license>\n                @if (hasAvailableTkaOverlays || suppliedClasses.size > 0) {\n                    <awg-edition-svg-sheet-viewer-switch\n                        [suppliedClasses]="suppliedClasses"\n                        [hasAvailableTkaOverlays]="hasAvailableTkaOverlays"\n                        (toggleSuppliedClassesOpacityRequest)="onSuppliedClassesOpacityToggle($event)"\n                        (toggleTkkClassesHighlightRequest)="\n                            onTkkClassesHighlightToggle($event)\n                        "></awg-edition-svg-sheet-viewer-switch>\n                }\n            </div>\n            \x3c!-- Next and previous buttons --\x3e\n            <div class="awg-edition-svg-sheet-viewer-nav">\n                <div class="prev" (click)="browseSvgSheet(-1)">\n                    <span>&#10094;</span>\n                </div>\n                <div class="next" (click)="browseSvgSheet(1)">\n                    <span>&#10095;</span>\n                </div>\n            </div>\n        </div>\n    </div>\n}\n',styles:[pe()]})],D);let B=class{};B=(0,l.UN)([(0,t.S0t)({imports:[c.k],declarations:[D,T],exports:[D,T]})],B);var fe=i(5652),we=i.n(fe);let A=class{constructor(){this.browseSvgSheetRequest=new t._w7,this.navigateToReportFragmentRequest=new t._w7,this.openModalRequest=new t._w7,this.selectLinkBoxRequest=new t._w7,this.selectOverlaysRequest=new t._w7,this.selectSvgSheetRequest=new t._w7}browseSvgSheet(e){e&&this.browseSvgSheetRequest.emit(e)}navigateToReportFragment(e){e&&this.navigateToReportFragmentRequest.emit(e)}openModal(e){e&&this.openModalRequest.emit(e)}selectLinkBox(e){this.selectLinkBoxRequest.emit(e)}selectOverlays(e){this.selectOverlaysRequest.emit(e)}selectSvgSheet(e){e?.sheetId&&this.selectSvgSheetRequest.emit(e)}static#e=this.propDecorators={svgSheetsData:[{type:t.EFl}],selectedSvgSheet:[{type:t.EFl}],selectedTextcriticalComments:[{type:t.EFl}],selectedTextcritics:[{type:t.EFl}],showTkA:[{type:t.EFl}],browseSvgSheetRequest:[{type:t.C_D}],navigateToReportFragmentRequest:[{type:t.C_D}],openModalRequest:[{type:t.C_D}],selectLinkBoxRequest:[{type:t.C_D}],selectOverlaysRequest:[{type:t.C_D}],selectSvgSheetRequest:[{type:t.C_D}]}};A=(0,l.UN)([(0,t.YlN)({selector:"awg-edition-accolade",template:'<div ngbAccordion>\n    <div ngbAccordionItem="awg-accolade-view" [collapsed]="false">\n        <div ngbAccordionHeader class="accordion-button awg-accordion-button-custom-header justify-content-between">\n            <button ngbAccordionToggle class="btn btn-link text-start p-0">Edierte Notentexte</button>\n            <button type="button" class="btn btn-sm btn-outline-info" (click)="openModal(\'HINT_EDITION_SHEETS\')">\n                Hinweise zur Nutzung\n            </button>\n        </div>\n        <div ngbAccordionCollapse>\n            <div ngbAccordionBody>\n                <ng-template>\n                    <div class="row">\n                        <div class="order-2 order-lg-1 col-12 col-lg-4 col-xl-3">\n                            \x3c!-- svg sheet navigation --\x3e\n                            @if (svgSheetsData && selectedSvgSheet) {\n                                <awg-edition-svg-sheet-nav\n                                    [svgSheetsData]="svgSheetsData"\n                                    [selectedSvgSheet]="selectedSvgSheet"\n                                    (selectSvgSheetRequest)="selectSvgSheet($event)">\n                                </awg-edition-svg-sheet-nav>\n                            }\n                        </div>\n                        <div class="order-1 order-lg-2 col-12 col-lg-8 col-xl-9">\n                            \x3c!-- svg sheet --\x3e\n                            @if (selectedSvgSheet) {\n                                <awg-edition-svg-sheet-viewer\n                                    [selectedSvgSheet]="selectedSvgSheet"\n                                    (browseSvgSheetRequest)="browseSvgSheet($event)"\n                                    (selectLinkBoxRequest)="selectLinkBox($event)"\n                                    (selectOverlaysRequest)="selectOverlays($event)">\n                                </awg-edition-svg-sheet-viewer>\n                            }\n\n                            \x3c!-- table for TkA --\x3e\n                            @if (selectedSvgSheet && selectedTextcritics) {\n                                <awg-edition-svg-sheet-footer\n                                    [selectedTextcritics]="selectedTextcritics"\n                                    [selectedTextcriticalComments]="selectedTextcriticalComments"\n                                    [showTkA]="showTkA"\n                                    (navigateToReportFragmentRequest)="navigateToReportFragment($event)"\n                                    (openModalRequest)="openModal($event)"\n                                    (selectSvgSheetRequest)="selectSvgSheet($event)"></awg-edition-svg-sheet-footer>\n                            }\n                        </div>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</div>\n',changeDetection:t.isP.OnPush,styles:[we()]})],A);let $=class{};$=(0,l.UN)([(0,t.S0t)({imports:[c.k,q,G,B],declarations:[A],exports:[A]})],$);var Ce=i(6116),Re=i.n(Ce);let P=class{constructor(){this.openModalRequest=new t._w7,this.selectSvgSheetRequest=new t._w7,this.faSquare=x.mWp,this.folioLegends=[{color:"olivedrab",label:"aktuell ausgew\xe4hlt"},{color:"orange",label:"ausw\xe4hlbar"},{color:"grey",label:"(momentan noch) nicht ausw\xe4hlbar"}]}openModal(e){e&&this.openModalRequest.emit(e)}selectSvgSheet(e){e?.sheetId&&this.selectSvgSheetRequest.emit(e)}static#e=this.propDecorators={selectedConvolute:[{type:t.EFl}],selectedSvgSheet:[{type:t.EFl}],openModalRequest:[{type:t.C_D}],selectSvgSheetRequest:[{type:t.C_D}]}};P=(0,l.UN)([(0,t.YlN)({selector:"awg-edition-convolute",template:'<div ngbAccordion>\n    <div ngbAccordionItem="awg-convolute-view" [collapsed]="false">\n        <div ngbAccordionHeader>\n            <button ngbAccordionButton>Konvolut\xfcbersicht</button>\n        </div>\n        <div ngbAccordionCollapse>\n            <div ngbAccordionBody>\n                <ng-template>\n                    \x3c!-- convolute label --\x3e\n                    <div class="awg-convolute-label">\n                        <p>\n                            <a [routerLink]="[\'../report\']" fragment="source{{ selectedConvolute.convoluteId }}">{{\n                                selectedConvolute.convoluteLabel\n                            }}</a>\n                        </p>\n                    </div>\n\n                    \x3c!-- viewer for convolute folios --\x3e\n                    <awg-edition-folio-viewer\n                        [selectedConvolute]="selectedConvolute"\n                        [selectedSvgSheet]="selectedSvgSheet"\n                        (openModalRequest)="openModal($event)"\n                        (selectSvgSheetRequest)="selectSvgSheet($event)">\n                    </awg-edition-folio-viewer>\n\n                    \x3c!-- convolute legend --\x3e\n                    <div class="awg-convolute-legend col-12">\n                        Legende:&nbsp;\n                        @for (legend of folioLegends; track legend) {\n                            <span class="{{ legend.color }}">\n                                <fa-icon [icon]="faSquare"></fa-icon>\n                                {{ legend.label }}\n                            </span>\n                        }\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</div>\n',changeDetection:t.isP.OnPush,styles:[Re()]})],P);var be=i(1472),Oe=i.n(be);let V=class{constructor(){this._itemsOffsetCorrection=4}getFolioSvgData(e,s){const n=new p.mY(e,s,this._itemsOffsetCorrection);return new p.QV(n)}addViewBoxToSnapSvgCanvas(e,s){e.attr({viewBox:s.viewBox,width:s.svgWidth,height:s.svgHeight,version:"1.1",xmlns:"https://www.w3.org/2000/svg",xlink:"https://www.w3.org/1999/xlink",preserveAspectRatio:"xMinYMin meet"})}addFolioToSnapSvgCanvas(e,s,n,a,o){this.ref=o;const r=e.group();this._addFolioSheetToSnapSvgCanvas(e,r,s,n),this._addFolioSystemsToSnapSvgCanvas(e,r,s,n),this._addFolioItemsToSnapSvgCanvas(e,r,s,a)}_addFolioSheetToSnapSvgCanvas(e,s,n,a){const o=n.sheet.folioId,r=n.sheet.upperLeftCorner.x,g=n.sheet.upperLeftCorner.y,C=n.sheet.lowerRightCorner.x,u=n.sheet.lowerRightCorner.y;s.attr({sheetGroupId:o,class:"sheet-group"});const S=e.rect(r,g,C,u);S.attr({fill:"white",stroke:a,strokeWidth:1});const m=Snap.parse("<title>Bl. "+o+"</title>");s.append(m),s.add(S)}_addFolioSystemsToSnapSvgCanvas(e,s,n,a){n.systems.lineArrays.forEach((o,r)=>{const g=e.group();g.attr({systemLineGroupId:r+1,class:"system-line-group"}),o.forEach(w=>{const y=w.startPoint.x,Z=w.startPoint.y,R=w.endPoint.x,_=w.endPoint.y,F=e.line(y,Z,R,_);F.attr({class:"system-line",stroke:a,strokeWidth:.7}),g.add(F)});const C=n.systems.lineLabelArray[r].x,u=n.systems.lineLabelArray[r].y,S=r+1,m=e.text(C,u,S);m.attr({class:"system-label",dominantBaseline:"hanging",fill:a});const f=e.group(g,m);f.attr({systemsGroupId:r+1,class:"systems-group"}),s.add(f)})}_addFolioItemsToSnapSvgCanvas(e,s,n,a){n.contentItemsArray.forEach(o=>{if(!o)return;const r=o.width/2,g=o.height/2;let u=o.upperLeftCorner.x+r,S=o.upperLeftCorner.y+g-5;o.reversed&&(u=o.cornerPoints.lowerRightCorner.x-r,S=o.cornerPoints.lowerRightCorner.y-g+5);const m=[o.sigle,o.sigleAddendum?` ${o.sigleAddendum}`:""],f=e.text(u,S,m);f.attr({class:"item-label",style:"font: 12px Source Sans Pro, source-sans-pro, sans-serif",dominantBaseline:"middle",textAnchor:"middle"}),o.reversed&&f.transform(`r180,${u},${S}`),f.select("tspan:first-of-type").attr({x:u,y:S,textAnchor:"middle"}),m.length>1&&f.select("tspan:last-of-type").attr({x:u,y:S,textAnchor:"middle",dy:"1.2em"});const w=e.group(),y=[];y.push(o.cornerPoints.upperLeftCorner.x,o.cornerPoints.upperLeftCorner.y),y.push(o.cornerPoints.upperRightCorner.x,o.cornerPoints.upperRightCorner.y),y.push(o.cornerPoints.lowerRightCorner.x,o.cornerPoints.lowerRightCorner.y),y.push(o.cornerPoints.lowerLeftCorner.x,o.cornerPoints.lowerLeftCorner.y),y.push(o.cornerPoints.upperLeftCorner.x,o.cornerPoints.upperLeftCorner.y);const Z=e.polyline(y);w.add(Z),w.attr({class:"item-shape",strokeWidth:2,fill:"#eeeeee"});const R=e.el("a");R.attr({class:"item-link"}),R.add(w),R.add(f);const _=e.group(R);_.attr({itemGroupId:m,itemId:o.sheetId,class:"item-group"});const F=Snap.parse("<title>"+m+"</title>");_.append(F),!1===o.selectable?(_.click(()=>this.ref.openModal(o.linkTo)),_.attr({stroke:"grey",fill:"grey"})):(_.click(()=>this.ref.selectSvgSheet(o.complexId,o.sheetId)),_.attr({stroke:a,fill:a})),s.add(_)})}};V=(0,l.UN)([(0,t._qm)({providedIn:"root"})],V);let M=class{constructor(e){this.folioService=e,this.openModalRequest=new t._w7,this.selectSvgSheetRequest=new t._w7,this.canvasArray=[],this.folioSvgData=[],this.vbArray=[],this.bgColor="#a3a3a3",this.fgColor="orange",this._folioSettings={factor:1.5,formatX:175,formatY:270,initialOffsetX:5,initialOffsetY:5,numberOfFolios:0},this.ref=this}get folioSettings(){return this._folioSettings}set folioSettings(e){this._folioSettings=e}ngOnChanges(e){e.selectedConvolute&&this.prepareFolioSvgOutput()}ngAfterViewChecked(){this.createSVGCanvas()}isSelectedSvgSheet(e){let s="";return this.selectedSvgSheet.content[0].partial&&(s=this.selectedSvgSheet.content[0].partial),e===this.selectedSvgSheet.id+s}prepareFolioSvgOutput(){this.folioSvgData=[],this.selectedConvolute.folios.forEach((e,s)=>{this.folioSettings={factor:this.folioSettings.factor,formatX:+e.format.width,formatY:+e.format.height,initialOffsetX:this.folioSettings.initialOffsetX,initialOffsetY:this.folioSettings.initialOffsetY,numberOfFolios:+this.selectedConvolute.folios.length};const n=(this.folioSettings.formatX+2*this.folioSettings.initialOffsetX)*this.folioSettings.factor,a=(this.folioSettings.formatY+2*this.folioSettings.initialOffsetY)*this.folioSettings.factor;this.vbArray[s]=new p.YR(n,a),this.folioSvgData[s]=this.folioService.getFolioSvgData(this.folioSettings,e)})}createSVGCanvas(){this.canvasArray=[],this.folioSvgData.forEach((e,s)=>{const n="#folio-"+this.selectedSvgSheet.id+"-"+e.sheet.folioId,a=Snap(n);a&&(this.folioService.addViewBoxToSnapSvgCanvas(a,this.vbArray[s]),this.folioService.addFolioToSnapSvgCanvas(a,e,this.bgColor,this.fgColor,this.ref),this.canvasArray.push(a))}),this.toggleActiveClass()}toggleActiveClass(){this.canvasArray&&this.canvasArray.forEach(e=>{e.selectAll(".item-group").forEach(s=>{const n=s.node.attributes.itemId.value;s.toggleClass("active",this.isSelectedSvgSheet(n))})})}openModal(e){this.openModalRequest.emit(e)}selectSvgSheet(e,s){s&&this.selectSvgSheetRequest.emit({complexId:e,sheetId:s})}static#e=this.ctorParameters=()=>[{type:V}];static#t=this.propDecorators={selectedConvolute:[{type:t.EFl}],selectedSvgSheet:[{type:t.EFl}],openModalRequest:[{type:t.C_D}],selectSvgSheetRequest:[{type:t.C_D}]}};M=(0,l.UN)([(0,t.YlN)({selector:"awg-edition-folio-viewer",template:'\x3c!-- embedded svg: EditionSvgSheet Overview --\x3e\n@if (folioSvgData) {\n    <div class="container-fluid svgGrid">\n        <div class="row svgRow">\n            @for (folio of folioSvgData; track folio) {\n                <div class="col-sm-6 col-lg-{{ 12 / folioSvgData?.length }} svgCol">\n                    <span class="text-muted">[{{ folio.sheet.folioId }}]</span>\n                    <svg id="folio-{{ selectedSvgSheet.id }}-{{ folio.sheet.folioId }}"></svg>\n                </div>\n            }\n        </div>\n    </div>\n}\n',changeDetection:t.isP.OnPush,styles:[Oe()]})],M);let H=class{};H=(0,l.UN)([(0,t.S0t)({imports:[c.k],declarations:[M],exports:[M]})],H);let U=class{};U=(0,l.UN)([(0,t.S0t)({imports:[c.k,H],declarations:[P],exports:[P]})],U);var L=i(3516);var Te=i(4392),Ee=i.n(Te),De=i(6040),Q=i(7368),Y=i(9212),Ae=i(5336);let I=class{constructor(e,s,n,a,o,r){this.editionDataService=e,this.editionSheetsService=s,this.editionService=n,this.utils=a,this.route=o,this.router=r,this.errorMessage=void 0,this.showTkA=!1,this._destroyed$=new z.E}get editionRouteConstants(){return Ae.Ws}ngOnInit(){this.getEditionSheetsData()}getEditionSheetsData(){(0,De.E)([this.route.paramMap,this.route.queryParamMap]).pipe((0,Q.G)(([e,s])=>this._fetchEditionComplexData(s)),(0,j.a)(this._destroyed$)).subscribe({next:()=>{},error:e=>{console.error(e),this.errorMessage=e}})}onLinkBoxSelect(e){if(!this.selectedSvgSheet||!this.selectedTextcritics?.linkBoxes)return;const s=this.selectedTextcritics.linkBoxes.find(n=>n.svgGroupId===e);if(s){const n=s.linkTo;this.onSvgSheetSelect(n)}}onNavigateToReportFragment(e){e||(e="");const s={fragment:e};this.router.navigate([this.editionComplex.baseRoute,this.editionRouteConstants.EDITION_REPORT.route],s)}onOverlaySelect(e){this.selectedTextcriticalComments=this.editionSheetsService.getTextcriticalCommentsForOverlays(this.selectedTextcritics.comments,e),this.showTkA=this.utils.isNotEmptyArray(this.selectedTextcriticalComments)}onBrowseSvgSheet(e){const s=this.editionSheetsService.getCurrentEditionType(this.selectedSvgSheet,this.svgSheetsData.sheets);if(!s)return;const n=this.svgSheetsData.sheets[s],a=this.editionSheetsService.getNextSheetId(e,this.selectedSvgSheet,n);this.onSvgSheetSelect({complexId:"",sheetId:a})}onSvgSheetSelect(e){const s=e.complexId?`/edition/complex/${e.complexId}/`:this.editionComplex.baseRoute,n={queryParams:{id:e.sheetId},queryParamsHandling:"merge"};this.router.navigate([s,this.editionRouteConstants.EDITION_SHEETS.route],n)}ngOnDestroy(){this._destroyed$.next(!0),this._destroyed$.complete()}_assignData(e){this.folioConvoluteData=e[0],this.svgSheetsData=e[1],this.textcriticsData=e[2]}_fetchEditionComplexData(e){return this.editionService.getEditionComplex().pipe((0,Y.y)(s=>this.editionComplex=s),(0,Q.G)(s=>this.editionDataService.getEditionSheetsData(s)),(0,Y.y)(s=>this._assignData(s)),(0,Y.y)(()=>this._handleQueryParams(e)))}_getDefaultSheetId(){const e=this.svgSheetsData?.sheets?.sketchEditions?.[0];let s=e?.id;if(e?.content?.length>1){const n=e.content[0];s+=n?.partial}return s||""}_handleQueryParams(e){const s=e?.get("id");s?this.svgSheetsData&&this._selectSvgSheet(s):this.onSvgSheetSelect({complexId:"",sheetId:this._getDefaultSheetId()})}_selectSvgSheet(e){e&&(this.selectedSvgSheet=this.editionSheetsService.selectSvgSheetById(this.svgSheetsData.sheets,e),this.selectedConvolute=this.editionSheetsService.selectConvolute(this.folioConvoluteData.convolutes,this.svgSheetsData.sheets,this.selectedSvgSheet),this.selectedTextcritics=this.editionSheetsService.findTextcritics(this.textcriticsData.textcritics,this.selectedSvgSheet),this.onOverlaySelect([]),this.utils.isNotEmptyObject(this.selectedTextcritics)&&this.utils.isNotEmptyArray(this.selectedTextcritics.comments)&&(this.selectedTextcriticalComments=this.selectedTextcritics.comments))}static#e=this.ctorParameters=()=>[{type:E.gh},{type:E.Kq},{type:E.Ki},{type:N.UZ},{type:L.gV},{type:L.E5}];static#t=this.propDecorators={modal:[{type:t._io,args:["modal",{static:!0}]}]}};I=(0,l.UN)([(0,t.YlN)({selector:"awg-edition-sheets",template:'\x3c!-- content: edition detail --\x3e\n<div>\n    \x3c!-- modal --\x3e\n    <awg-modal #modal></awg-modal>\n\n    \x3c!-- body with embedded svg\'s --\x3e\n    \x3c!-- accolade view --\x3e\n    @if (svgSheetsData && selectedSvgSheet) {\n        <awg-edition-accolade\n            [svgSheetsData]="svgSheetsData"\n            [selectedSvgSheet]="selectedSvgSheet"\n            [selectedTextcritics]="selectedTextcritics"\n            [selectedTextcriticalComments]="selectedTextcriticalComments"\n            [showTkA]="showTkA"\n            (browseSvgSheetRequest)="onBrowseSvgSheet($event)"\n            (navigateToReportFragmentRequest)="onNavigateToReportFragment($event)"\n            (openModalRequest)="modal.open($event)"\n            (selectLinkBoxRequest)="onLinkBoxSelect($event)"\n            (selectOverlaysRequest)="onOverlaySelect($event)"\n            (selectSvgSheetRequest)="onSvgSheetSelect($event)">\n        </awg-edition-accolade>\n    }\n\n    \x3c!-- convolute view --\x3e\n    @if (selectedConvolute && selectedSvgSheet) {\n        <awg-edition-convolute\n            [selectedConvolute]="selectedConvolute"\n            [selectedSvgSheet]="selectedSvgSheet"\n            (openModalRequest)="modal.open($event)"\n            (selectSvgSheetRequest)="onSvgSheetSelect($event)">\n        </awg-edition-convolute>\n    }\n</div>\n',styles:[Ee()]})],I);const Pe=[{path:"",component:I,data:{title:"AWG Online Edition \u2013 Sheets"}}],Me=[I];let X=class{};X=(0,l.UN)([(0,t.S0t)({imports:[L.qQ.forChild(Pe)],exports:[L.qQ]})],X);let W=class{};W=(0,l.UN)([(0,t.S0t)({imports:[c.k,$,U,X],declarations:[Me]})],W)},5652:(d,v,i)=>{var l=i(4420),c=i(964)(l);c.push([d.id,"",""]),d.exports=c.toString()},3508:(d,v,i)=>{var l=i(4420),c=i(964)(l);c.push([d.id,"",""]),d.exports=c.toString()},3944:(d,v,i)=>{var l=i(4420),c=i(964)(l);c.push([d.id,"a#dropDownSheetNav.btn {\n  border: none !important;\n}\na#dropDownSheetNav.active, a#dropDownSheetNav:active {\n  color: #149b9e !important;\n}\na#dropDownSheetNav:hover {\n  color: rgb(51, 51, 51) !important;\n}\na#dropDownSheetNav > span {\n  display: inline-block;\n  white-space: break-spaces;\n  text-align: start;\n}",""]),d.exports=c.toString()},3240:(d,v,i)=>{var l=i(4420),c=i(964)(l);c.push([d.id,"",""]),d.exports=c.toString()},1172:(d,v,i)=>{var l=i(4420),c=i(964)(l);c.push([d.id,"",""]),d.exports=c.toString()},9840:(d,v,i)=>{var l=i(4420),c=i(964)(l);c.push([d.id,'#awg-edition-svg-container {\n  position: relative;\n  width: 100%;\n  /* Next & previous buttons */\n}\n#awg-edition-svg-container .awg-edition-svg-icon-bar {\n  position: relative;\n  width: 100%;\n}\n#awg-edition-svg-container .awg-edition-svg-sheet-container {\n  position: inherit;\n  height: 100%;\n  box-shadow: 5px 5px 6px rgb(204, 204, 204); /* rgba converted HEX #cccccc */\n  border: 1px solid #e7e7e7;\n}\n#awg-edition-svg-container .awg-edition-svg-sheet-viewer-nav {\n  /* Position the "next button" to the right */\n}\n#awg-edition-svg-container .awg-edition-svg-sheet-viewer-nav > .prev,\n#awg-edition-svg-container .awg-edition-svg-sheet-viewer-nav .next {\n  cursor: pointer;\n  position: absolute;\n  height: 100%;\n  top: 0;\n  width: auto;\n  padding: 8px;\n  -webkit-user-select: none;\n          user-select: none;\n  /* On hover, add a black background color with a little bit see-through */\n}\n#awg-edition-svg-container .awg-edition-svg-sheet-viewer-nav > .prev:hover,\n#awg-edition-svg-container .awg-edition-svg-sheet-viewer-nav .next:hover {\n  background-color: #dddddd;\n}\n#awg-edition-svg-container .awg-edition-svg-sheet-viewer-nav > .prev span,\n#awg-edition-svg-container .awg-edition-svg-sheet-viewer-nav .next span {\n  position: relative;\n  top: 45%;\n  font-weight: bold;\n  font-size: 18px;\n  transition: 0.6s ease;\n  color: #149b9e;\n}\n#awg-edition-svg-container .awg-edition-svg-sheet-viewer-nav > .prev {\n  border-right: 1px solid #dddddd;\n}\n#awg-edition-svg-container .awg-edition-svg-sheet-viewer-nav > .next {\n  right: 0;\n  border-left: 1px solid #dddddd;\n}\n\n/* slider */\n.input-group.awg-edition-svg-zoom-slider-container {\n  flex-wrap: nowrap;\n  width: auto;\n  margin-left: 2rem !important;\n}\n.input-group.awg-edition-svg-zoom-slider-container > :not(:first-child) {\n  margin-left: 0px !important;\n}\n\n#slider-label.input-group-text {\n  min-width: 50px;\n  color: #149b9e;\n}\n\n/* slider input */\ninput[type=range].awg-edition-svg-zoom-slider {\n  width: 100%;\n  background-color: transparent;\n  -webkit-appearance: none;\n}\ninput[type=range].awg-edition-svg-zoom-slider:focus {\n  outline: none;\n}\ninput[type=range].awg-edition-svg-zoom-slider:focus::-ms-fill-lower {\n  background: rgba(221, 221, 221, 0.78);\n}\ninput[type=range].awg-edition-svg-zoom-slider:focus::-ms-fill-upper {\n  background: #e5e5e5;\n}\ninput[type=range].awg-edition-svg-zoom-slider:focus::-webkit-slider-runnable-track {\n  background: #e5e5e5;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-webkit-slider-runnable-track {\n  background: rgba(221, 221, 221, 0.78);\n  border: 0.2px solid #dddddd;\n  border-radius: 1.3px;\n  width: 100%;\n  height: 31px;\n  cursor: pointer;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-webkit-slider-thumb {\n  width: 15px;\n  height: 29px;\n  background: #149b9e;\n  border: 1.8px solid #149b9e;\n  border-radius: 10px;\n  cursor: pointer;\n  -webkit-appearance: none;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-moz-range-track {\n  background: rgba(221, 221, 221, 0.78);\n  border: 0.2px solid #dddddd;\n  border-radius: 1.3px;\n  width: 100%;\n  height: 29px;\n  cursor: pointer;\n  -moz-margin-start: fill;\n  margin-right: fill;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-moz-range-thumb {\n  width: 15px;\n  height: 27px;\n  background: #149b9e;\n  border: 1.8px solid #149b9e;\n  border-radius: 10px;\n  cursor: pointer;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-ms-track {\n  background: transparent;\n  border-color: transparent;\n  border-width: 7.4px 0;\n  color: transparent;\n  width: 100%;\n  height: 31px;\n  cursor: pointer;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-ms-fill-lower {\n  background: rgba(221, 221, 221, 0.78);\n  border: 0.2px solid #dddddd;\n  border-radius: 2.6px;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-ms-fill-upper {\n  background: rgba(221, 221, 221, 0.78);\n  border: 0.2px solid #dddddd;\n  border-radius: 2.6px;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-ms-thumb {\n  width: 15px;\n  height: 29px;\n  background: #149b9e;\n  border: 1.8px solid #149b9e;\n  border-radius: 10px;\n  cursor: pointer;\n  margin-top: 0px;\n  /*Needed to keep the Edge thumb centred*/\n}',""]),d.exports=c.toString()},6116:(d,v,i)=>{var l=i(4420),c=i(964)(l);c.push([d.id,"",""]),d.exports=c.toString()},1472:(d,v,i)=>{var l=i(4420),c=i(964)(l);c.push([d.id,"/*\nsee also https://stackoverflow.com/questions/114543/how-to-horizontally-center-a-div-in-another-div\n */\n.svgGrid {\n  margin-bottom: 2em;\n}\n\n.svgRow {\n  padding-top: 1em;\n  width: inherit;\n  text-align: center;\n  box-shadow: 5px 5px 6px #cccccc;\n  border: 1px solid #eeeeee;\n}\n\n.svgCol {\n  display: inline-block;\n}",""]),d.exports=c.toString()},4392:(d,v,i)=>{var l=i(4420),c=i(964)(l);c.push([d.id,"",""]),d.exports=c.toString()}}]);