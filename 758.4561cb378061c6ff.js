(self.webpackChunkawg_app=self.webpackChunkawg_app||[]).push([[758],{2758:(i,a,e)=>{"use strict";e.r(a),e.d(a,{EditionReportModule:()=>R});var s=e(7582),t=e(5678),o=e(7410),_=e(1980);var D=e(7183),w=e.n(D),l=e(3539),r=e(7461);let m=class{constructor(n){this.utils=n,this.openModalRequest=new t.vpe,this.selectSvgSheetRequest=new t.vpe,this.FIRM_SIGNS={OP12:{A:[r.ss.FIRM_JE_NO_9_LIN_28],B:[r.ss.FIRM_JE_NO_2_LIN_12_B]},OP25:{A:[r.ss.FIRM_JE_NO_15_LIN_16],B:[r.ss.FIRM_JE_NO_2_LIN_12],C:[r.ss.FIRM_JE_NO_3_LIN_14]},OP27:{B:[r.ss.FIRM_JE_NO_6_LIN_20]}},this.ref=this}openModal(n){n&&this.openModalRequest.emit(n)}selectSvgSheet(n){n&&this.selectSvgSheetRequest.emit(n)}static#n=this.ctorParameters=()=>[{type:l.tI}];static#t=this.propDecorators={sourceDescriptionListData:[{type:t.IIB}],openModalRequest:[{type:t.r_U}],selectSvgSheetRequest:[{type:t.r_U}]}};m=(0,s.gn)([(0,t.wA2)({selector:"awg-source-description",template:'@if (sourceDescriptionListData) {\n    <div class="awg-source-description-list">\n        @for (sourceDescription of sourceDescriptionListData.sources; track sourceDescription) {\n            <div class="awg-source-description card mb-2" [id]="sourceDescription.id">\n                <div class="card-body">\n                    <div class="awg-source-description-head">\n                        @if (sourceDescription.siglum) {\n                            <p class="awg-source-description-siglum-container bold">\n                                <span class="awg-source-description-siglum">{{ sourceDescription.siglum }}</span>\n                                @if (sourceDescription.siglumAddendum) {\n                                    <span class="awg-source-description-siglum-addendum"\n                                        ><sup>{{ sourceDescription.siglumAddendum }}</sup></span\n                                    >\n                                }\n                            </p>\n                        }\n                        @if (sourceDescription.type) {\n                            <p\n                                class="awg-source-description-type"\n                                [compile-html]="sourceDescription.type"\n                                [compile-html-ref]="ref"></p>\n                        }\n                        @if (sourceDescription.location) {\n                            <p\n                                class="awg-source-description-location"\n                                [compile-html]="sourceDescription.location"\n                                [compile-html-ref]="ref"></p>\n                        }\n                    </div>\n                    @if (utils.isNotEmptyObject(sourceDescription.description)) {\n                        <div class="awg-source-description-body">\n                            \x3c!-- description --\x3e\n                            @if (utils.isNotEmptyArray(sourceDescription.description.desc)) {\n                                @for (description of sourceDescription.description.desc; track description) {\n                                    <p\n                                        class="awg-source-description-desc"\n                                        [compile-html]="description"\n                                        [compile-html-ref]="ref"></p>\n                                }\n                            }\n                            \x3c!-- writingMaterial --\x3e\n                            @if (sourceDescription.description.writingMaterial) {\n                                <p class="awg-source-description-writing-material">\n                                    <span class="caps">Beschreibstoff:&nbsp;</span>\n                                    <span\n                                        [compile-html]="sourceDescription.description.writingMaterial"\n                                        [compile-html-ref]="ref"></span>\n                                </p>\n                            }\n                            \x3c!-- writingInstruments --\x3e\n                            @if (utils.isNotEmptyObject(sourceDescription.description.writingInstruments)) {\n                                @if (sourceDescription.description.writingInstruments.main) {\n                                    <p class="awg-source-description-writing-instruments">\n                                        <span class="caps">Schreibstoff:&nbsp;</span>\n                                        <span\n                                            [compile-html]="sourceDescription.description.writingInstruments.main"\n                                            [compile-html-ref]="ref"></span>\n                                        @if (\n                                            utils.isNotEmptyArray(\n                                                sourceDescription.description.writingInstruments.secondary\n                                            )\n                                        ) {\n                                            <span>;&nbsp;</span>\n                                            @for (\n                                                secondary of sourceDescription?.description?.writingInstruments\n                                                    ?.secondary;\n                                                track secondary;\n                                                let last = $last\n                                            ) {\n                                                <span>\n                                                    <span [compile-html]="secondary" [compile-html-ref]="ref"></span>\n                                                    @if (!last) {\n                                                        <span>,&nbsp;</span>\n                                                    } @else {\n                                                        <span>.</span>\n                                                    }\n                                                </span>\n                                            }\n                                        } @else {\n                                            <span>.</span>\n                                        }\n                                    </p>\n                                }\n                            }\n                            \x3c!-- title --\x3e\n                            @if (sourceDescription.description.title) {\n                                <p class="awg-source-description-title">\n                                    <span class="caps">Titel:&nbsp;</span>\n                                    <span\n                                        [compile-html]="sourceDescription.description.title"\n                                        [compile-html-ref]="ref"></span>\n                                </p>\n                            }\n                            \x3c!-- date --\x3e\n                            @if (sourceDescription.description.date) {\n                                <p class="awg-source-description-date">\n                                    <span class="caps">Datierung:&nbsp;</span>\n                                    <span\n                                        [compile-html]="sourceDescription.description.date"\n                                        [compile-html-ref]="ref"></span>\n                                </p>\n                            }\n                            \x3c!-- pagination --\x3e\n                            @if (sourceDescription.description.pagination) {\n                                <p class="awg-source-description-pagination">\n                                    <span class="caps">Paginierung:&nbsp;</span>\n                                    <span\n                                        [compile-html]="sourceDescription.description.pagination"\n                                        [compile-html-ref]="ref"></span>\n                                </p>\n                            }\n                            \x3c!-- measureNumbers --\x3e\n                            @if (sourceDescription.description.measureNumbers) {\n                                <p class="awg-source-description-measure-numbers">\n                                    <span class="caps">Taktzahlen:&nbsp;</span>\n                                    <span\n                                        [compile-html]="sourceDescription.description.measureNumbers"\n                                        [compile-html-ref]="ref"></span>\n                                </p>\n                            }\n                            \x3c!-- instrumentation --\x3e\n                            @if (sourceDescription.description.instrumentation) {\n                                <p class="awg-source-description-instrumentation">\n                                    <span class="caps">Instrumentenvorsatz:&nbsp;</span>\n                                    <span\n                                        [compile-html]="sourceDescription.description.instrumentation"\n                                        [compile-html-ref]="ref"></span>\n                                </p>\n                            }\n                            \x3c!-- annotations --\x3e\n                            @if (sourceDescription.description.annotations) {\n                                <p class="awg-source-description-annotations">\n                                    <span class="caps">Eintragungen:&nbsp;</span>\n                                    <span\n                                        [compile-html]="sourceDescription.description.annotations"\n                                        [compile-html-ref]="ref"></span>\n                                </p>\n                            }\n                            \x3c!-- content --\x3e\n                            @if (utils.isNotEmptyArray(sourceDescription.description.content)) {\n                                <div class="awg-source-description-content">\n                                    <p class="no-para"><span class="caps">Inhalt:</span></p>\n                                    @for (content of sourceDescription.description.content; track content) {\n                                        <p class="half-para">\n                                            \x3c!-- content.itemDescription --\x3e\n                                            @if (content.item || content.itemDescription) {\n                                                <span class="awg-source-description-content-item">\n                                                    @if (content.itemLinkTo) {\n                                                        <a (click)="selectSvgSheet(content.itemLinkTo)"\n                                                            ><strong>{{ content.item }}</strong></a\n                                                        >\n                                                    }\n                                                    @if (!content.itemLinkTo) {\n                                                        <strong>{{ content.item }}</strong>\n                                                    }\n                                                    @if (content.itemDescription) {\n                                                        <span class="awg-source-description-content-item-description"\n                                                            >&nbsp;<span\n                                                                [compile-html]="content.itemDescription"\n                                                                [compile-html-ref]="ref"></span\n                                                        ></span>\n                                                    }\n                                                    <span>:</span><br />\n                                                </span>\n                                            }\n                                            \x3c!-- content.folios --\x3e\n                                            @if (utils.isNotEmptyArray(content.folios)) {\n                                                @for (folio of content.folios; track folio; let lastFolio = $last) {\n                                                    @if (folio.folio) {\n                                                        <span\n                                                            class="awg-source-description-content-item-folio"\n                                                            [ngClass]="{\n                                                                tab: content.item\n                                                            }">\n                                                            @if (folio.folioLinkTo) {\n                                                                <a (click)="selectSvgSheet(folio.folioLinkTo)"\n                                                                    ><ng-template\n                                                                        *ngTemplateOutlet="\n                                                                            folioTemplate;\n                                                                            context: { $implicit: folio }\n                                                                        "></ng-template\n                                                                ></a>\n                                                            }\n                                                            @if (!folio.folioLinkTo) {\n                                                                <ng-template\n                                                                    *ngTemplateOutlet="\n                                                                        folioTemplate;\n                                                                        context: { $implicit: folio }\n                                                                    "></ng-template>\n                                                            }\n                                                            @if (folio.folioDescription) {\n                                                                <span\n                                                                    class="awg-source-description-content-item-folio-description"\n                                                                    >&nbsp;&nbsp;<span\n                                                                        [compile-html]="folio.folioDescription"\n                                                                        [compile-html-ref]="ref"></span\n                                                                ></span>\n                                                            }\n                                                        </span>\n                                                    }\n                                                    <ng-template #folioTemplate let-folio>\n                                                        <span\n                                                            ><span>Bl.&nbsp;</span>\n                                                            @if (\n                                                                folio.folio.endsWith(\'v\') || folio.folio.endsWith(\'r\')\n                                                            ) {\n                                                                <span\n                                                                    class="awg-source-description-content-item-folio-number"\n                                                                    >{{ folio.folio.slice(0, -1)\n                                                                    }}<sup\n                                                                        class="awg-source-description-content-item-folio-side"\n                                                                        >{{ folio.folio.slice(-1) }}</sup\n                                                                    ></span\n                                                                >\n                                                            } @else {\n                                                                <span>{{ folio.folio }}</span>\n                                                            }\n                                                        </span>\n                                                    </ng-template>\n                                                    \x3c!-- content.folios.systemGroups --\x3e\n                                                    @if (utils.isNotEmptyArray(folio.systemGroups)) {\n                                                        @for (\n                                                            systemGroup of folio.systemGroups;\n                                                            track systemGroup;\n                                                            let firstSystemGroup = $first;\n                                                            let lastSystemGroup = $last\n                                                        ) {\n                                                            @for (\n                                                                system of systemGroup;\n                                                                track system;\n                                                                let i = $index;\n                                                                let firstSystem = $first;\n                                                                let lastSystem = $last\n                                                            ) {\n                                                                @if (system.system) {\n                                                                    <span\n                                                                        class="awg-source-description-content-item-system"\n                                                                        [ngClass]="{\n                                                                            tab: system.row && !firstSystem,\n                                                                            doubletab:\n                                                                                (system.row &&\n                                                                                    !firstSystemGroup &&\n                                                                                    firstSystem &&\n                                                                                    folio.folio.length === 2) ||\n                                                                                (system.measure &&\n                                                                                    !firstSystemGroup &&\n                                                                                    folio.folio.length === 2),\n                                                                            doubletab_two:\n                                                                                (system.row &&\n                                                                                    !firstSystemGroup &&\n                                                                                    firstSystem &&\n                                                                                    folio.folio.length > 2) ||\n                                                                                (system.measure &&\n                                                                                    !firstSystemGroup &&\n                                                                                    folio.folio.length > 2)\n                                                                        }"\n                                                                        ><ng-template\n                                                                            *ngTemplateOutlet="\n                                                                                systemTemplate;\n                                                                                context: { $implicit: system.system }\n                                                                            "></ng-template\n                                                                    ></span>\n                                                                }\n                                                                <ng-template #systemTemplate let-system\n                                                                    >&nbsp;&nbsp;System&nbsp;{{\n                                                                        system\n                                                                    }}:&nbsp;</ng-template\n                                                                >\n                                                                @if (system.systemDescription) {\n                                                                    <span\n                                                                        class="awg-source-description-content-item-system-description">\n                                                                        <span\n                                                                            [compile-html]="system.systemDescription"\n                                                                            [compile-html-ref]="ref"></span>\n                                                                        @if (system.measure) {\n                                                                            <span>&nbsp;</span>\n                                                                        }\n                                                                    </span>\n                                                                }\n                                                                @if (system.measure) {\n                                                                    <span\n                                                                        class="awg-source-description-content-item-measure">\n                                                                        @if (system.linkTo) {\n                                                                            <a (click)="selectSvgSheet(system.linkTo)"\n                                                                                ><ng-template\n                                                                                    *ngTemplateOutlet="\n                                                                                        measureTemplate;\n                                                                                        context: {\n                                                                                            $implicit: system.measure\n                                                                                        }\n                                                                                    "></ng-template\n                                                                            ></a>\n                                                                        }\n                                                                        @if (!system.linkTo) {\n                                                                            <ng-template\n                                                                                *ngTemplateOutlet="\n                                                                                    measureTemplate;\n                                                                                    context: {\n                                                                                        $implicit: system.measure\n                                                                                    }\n                                                                                "></ng-template>\n                                                                        }\n                                                                        <ng-template #measureTemplate let-measure\n                                                                            ><span\n                                                                                >T.&nbsp;{{ measure }}</span\n                                                                            ></ng-template\n                                                                        ></span\n                                                                    >\n                                                                }\n                                                                @if (utils.isNotEmptyObject(system.row)) {\n                                                                    <span\n                                                                        class="awg-source-description-content-item-row">\n                                                                        @if (system.linkTo) {\n                                                                            <a (click)="selectSvgSheet(system.linkTo)"\n                                                                                ><ng-template\n                                                                                    *ngTemplateOutlet="\n                                                                                        rowTemplate;\n                                                                                        context: {\n                                                                                            $implicit: system.row\n                                                                                        }\n                                                                                    "></ng-template>\n                                                                            </a>\n                                                                        }\n                                                                        @if (!system.linkTo) {\n                                                                            <ng-template\n                                                                                *ngTemplateOutlet="\n                                                                                    rowTemplate;\n                                                                                    context: { $implicit: system.row }\n                                                                                "></ng-template>\n                                                                        }\n                                                                        <ng-template #rowTemplate let-row>\n                                                                            <span\n                                                                                >{{ row.rowType\n                                                                                }}<sub>{{ row.rowBase }}</sub> ({{\n                                                                                    row.rowNumber\n                                                                                }})</span\n                                                                            ></ng-template\n                                                                        ></span\n                                                                    >\n                                                                }\n                                                                @if (lastFolio && lastSystemGroup && lastSystem) {\n                                                                    <span>.</span>\n                                                                } @else {\n                                                                    <span\n                                                                        >;\n                                                                        @if ((i + 1) % systemGroup.length === 0) {\n                                                                            <br />\n                                                                        }\n                                                                    </span>\n                                                                }\n                                                            }\n                                                        }\n                                                    } @else {\n                                                        @if (!lastFolio) {\n                                                            <br />\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        </p>\n                                    }\n                                </div>\n                            }\n                        </div>\n                    }\n                </div>\n            </div>\n        }\n    </div>\n}\n',changeDetection:t.n4l.OnPush,styles:[w()]})],m);var O=e(7976),A=e.n(O),y=e(8943);let d=class{constructor(n){this.utils=n,this.navigateToReportFragmentRequest=new t.vpe,this.openModalRequest=new t.vpe,this.selectSvgSheetRequest=new t.vpe,this.ref=this}get editionRouteConstants(){return y.LL}navigateToReportFragment(n){n&&this.navigateToReportFragmentRequest.emit(n)}openModal(n){n&&this.openModalRequest.emit(n)}selectSvgSheet(n){n&&this.selectSvgSheetRequest.emit(n)}static#n=this.ctorParameters=()=>[{type:l.tI}];static#t=this.propDecorators={editionComplex:[{type:t.IIB}],sourceEvaluationListData:[{type:t.IIB}],navigateToReportFragmentRequest:[{type:t.r_U}],openModalRequest:[{type:t.r_U}],selectSvgSheetRequest:[{type:t.r_U}]}};d=(0,s.gn)([(0,t.wA2)({selector:"awg-source-evaluation",template:'@if (sourceEvaluationListData) {\n    <div class="awg-source-evaluation-list card">\n        <div class="card-body">\n            @if (utils.isNotEmptyArray(sourceEvaluationListData.sources?.[0]?.content)) {\n                @for (evaluation of sourceEvaluationListData.sources?.[0]?.content; track evaluation) {\n                    <p class="awg-source-evaluation-entry" [compile-html]="evaluation" [compile-html-ref]="this"></p>\n                }\n            } @else {\n                <p class="awg-source-evaluation-empty p-5 border rounded-3">\n                    <small class="text-muted"\n                        >[Die Quellenbewertung zum Editionskomplex\n                        <span [innerHTML]="editionComplex.complexId.full"></span> erscheint im Zusammenhang der\n                        vollsta\u0308ndigen Edition von {{ editionComplex.complexId.short }} in\n                        {{ editionRouteConstants.EDITION.short }} {{ editionComplex.series.short }}/{{\n                            editionComplex.section.short\n                        }}.]\n                    </small>\n                </p>\n            }\n        </div>\n    </div>\n}\n',changeDetection:t.n4l.OnPush,styles:[A()]})],d);var E=e(3779),I=e.n(E);let g=class{constructor(n){this.utils=n,this.openModalRequest=new t.vpe,this.ref=this}openModal(n){n&&this.openModalRequest.emit(n)}static#n=this.ctorParameters=()=>[{type:l.tI}];static#t=this.propDecorators={sourceListData:[{type:t.IIB}],openModalRequest:[{type:t.r_U}]}};g=(0,s.gn)([(0,t.wA2)({selector:"awg-source-list",template:'<div class="card">\n    <div class="card-body">\n        <table\n            aria-label="Table for list of sources"\n            class="table table-hover borderless awg-source-description-sources">\n            <tbody>\n                @for (source of sourceListData.sources; track source; let sourceIndex = $index) {\n                    <tr>\n                        <th scope="row">\n                            @if (source.hasDescription === true) {\n                                <a [routerLink]="[\'./\']" fragment="{{ source.linkTo }}"\n                                    ><span class="awg-source-list-siglum">{{ source.siglum }}</span>\n                                    @if (source.siglumAddendum) {\n                                        <span class="awg-source-list-siglum-addendum">\n                                            <sup>{{ source.siglumAddendum }}</sup>\n                                        </span>\n                                    }\n                                </a>\n                            } @else {\n                                <a (click)="openModal(source.linkTo)"\n                                    ><span class="awg-source-list-siglum">{{ source.siglum }}</span>\n                                    @if (source.siglumAddendum) {\n                                        <span class="awg-source-list-siglum-addendum">\n                                            <sup>{{ source.siglumAddendum }}</sup>\n                                        </span>\n                                    }\n                                </a>\n                            }\n                        </th>\n                        <td>\n                            <span [compile-html]="source.type" [compile-html-ref]="ref"></span> <br />\n                            <span class="text-muted" [innerHTML]="source.location"></span>\n                        </td>\n                    </tr>\n                }\n            </tbody>\n        </table>\n        @if (utils.isNotEmptyArray(sourceListData.textSources)) {\n            <table\n                aria-label="Table for list of text sources"\n                class="table table-hover borderless awg-source-description-text-sources">\n                <tbody>\n                    <tr>\n                        <td colspan="2">Zum vertonten Text:</td>\n                    </tr>\n                    @for (text of sourceListData.textSources; track text; let textIndex = $index) {\n                        <tr>\n                            <th scope="row" id="{{ text.id }}">\n                                <span class="awg-source-list-text-siglum-container"\n                                    ><span class="awg-source-list-text-siglum">{{ text.siglum }}</span>\n                                    @if (text.siglumAddendum) {\n                                        <span class="awg-source-list-text-siglum-addendum"\n                                            ><sup>{{ text.siglumAddendum }}</sup></span\n                                        >\n                                    }\n                                </span>\n                            </th>\n                            <td>\n                                <span [compile-html]="text.type" [compile-html-ref]="ref"></span> <br />\n                                <span class="text-muted" [innerHTML]="text.location"></span>\n                            </td>\n                        </tr>\n                    }\n                </tbody>\n            </table>\n        }\n    </div>\n</div>\n',changeDetection:t.n4l.OnPush,styles:[I()]})],g);var C=e(6241),L=e.n(C);let f=class{constructor(n){this.utils=n,this.navigateToReportFragmentRequest=new t.vpe,this.openModalRequest=new t.vpe,this.selectSvgSheetRequest=new t.vpe,this.ref=this}navigateToReportFragment(n){n&&this.navigateToReportFragmentRequest.emit(n)}openModal(n){n&&this.openModalRequest.emit(n)}selectSvgSheet(n){n&&this.selectSvgSheetRequest.emit(n)}static#n=this.ctorParameters=()=>[{type:l.tI}];static#t=this.propDecorators={textcriticsData:[{type:t.IIB}],navigateToReportFragmentRequest:[{type:t.r_U}],openModalRequest:[{type:t.r_U}],selectSvgSheetRequest:[{type:t.r_U}]}};f=(0,s.gn)([(0,t.wA2)({selector:"awg-textcritics-list",template:'@if (textcriticsData) {\n    <div ngbAccordion>\n        @for (textcritic of textcriticsData.textcritics; track textcritic) {\n            <div [ngbAccordionItem]="textcritic.id" [collapsed]="true">\n                <div\n                    ngbAccordionHeader\n                    class="accordion-button awg-accordion-button-custom-header justify-content-between">\n                    <button ngbAccordionToggle class="btn btn-link text-start p-0">{{ textcritic.label }}</button>\n                    <button type="button" class="btn btn-sm btn-outline-info" (click)="selectSvgSheet(textcritic.id)">\n                        Zum edierten Notentext\n                    </button>\n                </div>\n                <div ngbAccordionCollapse>\n                    <div ngbAccordionBody>\n                        <ng-template>\n                            @if (utils.isNotEmptyArray(textcritic.description)) {\n                                <div>\n                                    <p class="caps">Skizzenkommentar:</p>\n                                    @for (description of textcritic.description; track description) {\n                                        <p [compile-html]="description" [compile-html-ref]="ref"></p>\n                                    }\n                                </div>\n                            }\n                            @if (utils.isNotEmptyArray(textcritic.comments)) {\n                                <div>\n                                    <p class="caps">Textkritischer Kommentar:</p>\n                                    <awg-edition-tka-table\n                                        [textcriticalComments]="textcritic.comments"\n                                        [isRowTable]="textcritic.rowtable"\n                                        (navigateToReportFragmentRequest)="navigateToReportFragment($event)"\n                                        (openModalRequest)="openModal($event)"\n                                        (selectSvgSheetRequest)="selectSvgSheet($event)">\n                                    </awg-edition-tka-table>\n                                </div>\n                            }\n                        </ng-template>\n                    </div>\n                </div>\n            </div>\n        }\n    </div>\n}\n',changeDetection:t.n4l.OnPush,styles:[L()]})],f);var v=e(6158);var N=e(8845),$=e.n(N),k=e(6232),F=e(4664),B=e(6306),S=e(7559);let u=class{constructor(n,p,q){this.editionDataService=n,this.editionService=p,this.router=q,this.errorObject=null,this.titles={sourceList:"1. Quellen\xfcbersicht",sourceDescription:"2. Quellenbeschreibung",sourceEvaluation:"3. Quellenbewertung",tka:"4. Textkritische Anmerkungen"}}get editionRouteConstants(){return y.LL}ngOnInit(){this.getEditionReportData()}getEditionReportData(){this.editionReportData$=this.editionService.getEditionComplex().pipe((0,F.w)(n=>(this.editionComplex=n,this.editionDataService.getEditionReportData(this.editionComplex))),(0,B.K)(n=>(this.errorObject=n,k.E)))}onModalOpen(n){n&&this.modal.open(n)}onReportFragmentNavigate(n){n||(n="");const p={fragment:n};this.router.navigate([this.editionComplex.baseRoute,this.editionRouteConstants.EDITION_REPORT.route],p)}onSvgSheetSelect(n){n||(n="");const p={queryParams:{id:n}};this.router.navigate([this.editionComplex.baseRoute,this.editionRouteConstants.EDITION_SHEETS.route],p)}static#n=this.ctorParameters=()=>[{type:S.Ko},{type:S.OE},{type:v.F0}];static#t=this.propDecorators={modal:[{type:t.i9L,args:["modal",{static:!0}]}]}};u=(0,s.gn)([(0,t.wA2)({selector:"awg-edition-report",template:'\x3c!-- content: edition report --\x3e\n<div>\n    \x3c!-- modal --\x3e\n    <awg-modal #modal></awg-modal>\n\n    @if (editionReportData$ | async; as editionReportData) {\n        <div ngbAccordion>\n            \x3c!-- source list --\x3e\n            <div ngbAccordionItem="awg-source-list" [collapsed]="false">\n                <div ngbAccordionHeader>\n                    <button ngbAccordionButton>{{ titles.sourceList }}</button>\n                </div>\n                <div ngbAccordionCollapse>\n                    <div ngbAccordionBody>\n                        <ng-template>\n                            @if (editionReportData[0]) {\n                                <awg-source-list\n                                    [sourceListData]="editionReportData[0]"\n                                    (openModalRequest)="onModalOpen($event)">\n                                </awg-source-list>\n                            }\n                        </ng-template>\n                    </div>\n                </div>\n            </div>\n            \x3c!-- source description --\x3e\n            <div ngbAccordionItem="awg-source-desc" [collapsed]="false">\n                <div ngbAccordionHeader>\n                    <button ngbAccordionButton>{{ titles.sourceDescription }}</button>\n                </div>\n                <div ngbAccordionCollapse>\n                    <div ngbAccordionBody>\n                        <ng-template>\n                            @if (editionReportData[1]) {\n                                <awg-source-description\n                                    [sourceDescriptionListData]="editionReportData[1]"\n                                    (openModalRequest)="onModalOpen($event)"\n                                    (selectSvgSheetRequest)="onSvgSheetSelect($event)">\n                                </awg-source-description>\n                            }\n                        </ng-template>\n                    </div>\n                </div>\n            </div>\n            \x3c!-- source evaluation --\x3e\n            <div ngbAccordionItem="awg-source-evaluation" [collapsed]="false">\n                <div ngbAccordionHeader>\n                    <button ngbAccordionButton>{{ titles.sourceEvaluation }}</button>\n                </div>\n                <div ngbAccordionCollapse>\n                    <div ngbAccordionBody>\n                        <ng-template>\n                            @if (editionReportData[2]) {\n                                <awg-source-evaluation\n                                    [editionComplex]="editionComplex"\n                                    [sourceEvaluationListData]="editionReportData[2]"\n                                    (navigateToReportFragmentRequest)="onReportFragmentNavigate($event)"\n                                    (openModalRequest)="onModalOpen($event)"\n                                    (selectSvgSheetRequest)="onSvgSheetSelect($event)">\n                                </awg-source-evaluation>\n                            }\n                        </ng-template>\n                    </div>\n                </div>\n            </div>\n            \x3c!-- text critics --\x3e\n            <div ngbAccordionItem="awg-tka-panel" [collapsed]="false">\n                <div ngbAccordionHeader>\n                    <button ngbAccordionButton>{{ titles.tka }}</button>\n                </div>\n                <div ngbAccordionCollapse>\n                    <div ngbAccordionBody>\n                        <ng-template>\n                            @if (editionReportData[3]) {\n                                <awg-textcritics-list\n                                    [textcriticsData]="editionReportData[3]"\n                                    (navigateToReportFragmentRequest)="onReportFragmentNavigate($event)"\n                                    (openModalRequest)="onModalOpen($event)"\n                                    (selectSvgSheetRequest)="onSvgSheetSelect($event)">\n                                </awg-textcritics-list>\n                            }\n                        </ng-template>\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n</div>\n',changeDetection:t.n4l.OnPush,styles:[$()]})],u);const G=[{path:"",component:u,data:{title:"AWG Online Edition \u2013 Report"}}],U=[u];let h=class{};h=(0,s.gn)([(0,t.LVF)({imports:[v.Bz.forChild(G)],exports:[v.Bz]})],h);let R=class{};R=(0,s.gn)([(0,t.LVF)({imports:[o.m,_.K,h],declarations:[f,m,d,g,U]})],R)},8845:(i,a,e)=>{var s=e(4969),o=e(1451)(s);o.push([i.id,"",""]),i.exports=o.toString()},7183:(i,a,e)=>{var s=e(4969),o=e(1451)(s);o.push([i.id,"",""]),i.exports=o.toString()},7976:(i,a,e)=>{var s=e(4969),o=e(1451)(s);o.push([i.id,"",""]),i.exports=o.toString()},3779:(i,a,e)=>{var s=e(4969),o=e(1451)(s);o.push([i.id,"",""]),i.exports=o.toString()},6241:(i,a,e)=>{var s=e(4969),o=e(1451)(s);o.push([i.id,"",""]),i.exports=o.toString()}}]);