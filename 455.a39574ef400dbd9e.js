(self.webpackChunkawg_app=self.webpackChunkawg_app||[]).push([[455],{7455:(c,u,o)=>{"use strict";o.r(u),o.d(u,{EditionSheetsModule:()=>H});var r=o(655),t=o(4650),d=o(5921),Y=o(2268);var T,J=o(8475),Q=o.n(J);let C=((T=class{constructor(){this.openModalRequest=new t.vpe,this.selectOverlaysRequest=new t.vpe,this.selectSvgSheetRequest=new t.vpe}openModal(e){!e||this.openModalRequest.emit(e)}selectOverlays(e){this.selectOverlaysRequest.emit(e)}selectSvgSheet(e){!e||this.selectSvgSheetRequest.emit(e)}}).propDecorators={svgSheetsData:[{type:t.IIB}],selectedSvgSheet:[{type:t.IIB}],selectedTextcriticalComments:[{type:t.IIB}],showTkA:[{type:t.IIB}],openModalRequest:[{type:t.r_U}],selectOverlaysRequest:[{type:t.r_U}],selectSvgSheetRequest:[{type:t.r_U}]},T);C=(0,r.gn)([(0,t.wA2)({selector:"awg-edition-accolade",template:'<ngb-accordion #accoladeAcc="ngbAccordion" id="accoladeAcc" activeIds="awg-accolade-view">\n    <ngb-panel id="awg-accolade-view">\n        <ng-template ngbPanelHeader>\n            <div class="accordion-button awg-accordion-button-custom-header justify-content-between">\n                <button ngbPanelToggle class="p-0 btn btn-link text-start">Edierte Notentexte</button>\n                <button type="button" class="btn btn-sm btn-outline-info" (click)="openModal(\'HINT_EDITION_SHEETS\')">\n                    Hinweise zur Nutzung\n                </button>\n            </div>\n        </ng-template>\n        <ng-template ngbPanelContent>\n            \x3c!-- svg sheet navigation --\x3e\n            <awg-edition-svg-sheet-nav\n                *ngIf="svgSheetsData && selectedSvgSheet"\n                [svgSheetsData]="svgSheetsData"\n                [selectedSvgSheet]="selectedSvgSheet"\n                (selectSvgSheetRequest)="selectSvgSheet($event)">\n            </awg-edition-svg-sheet-nav>\n\n            \x3c!-- svg sheet --\x3e\n            <awg-edition-svg-sheet\n                *ngIf="selectedSvgSheet"\n                [selectedSvgSheet]="selectedSvgSheet"\n                (openModalRequest)="openModal($event)"\n                (selectOverlaysRequest)="selectOverlays($event)"\n                (selectSvgSheetRequest)="selectSvgSheet($event)">\n            </awg-edition-svg-sheet>\n\n            \x3c!-- table for TkA --\x3e\n            <div class="panel-footer" *ngIf="showTkA">\n                <h5 class="mt-4">Textkritischer Kommentar:</h5>\n                <awg-edition-tka-table\n                    [textcriticalComments]="selectedTextcriticalComments"\n                    (openModalRequest)="openModal($event)"\n                    (selectSvgSheetRequest)="selectSvgSheet($event)">\n                </awg-edition-tka-table>\n            </div>\n        </ng-template>\n    </ngb-panel>\n</ngb-accordion>\n',changeDetection:t.n4l.OnPush,styles:[Q()]})],C);var M,te=o(7229),ne=o.n(te);let P=((M=class{constructor(){this.selectSvgSheetRequest=new t.vpe}isSelectedSvgSheet(e){let n=this.selectedSvgSheet.id;return this.selectedSvgSheet.content&&this.selectedSvgSheet.content[0].partial&&(n+=this.selectedSvgSheet.content[0].partial),e===n}selectSvgSheet(e){!e||this.selectSvgSheetRequest.emit(e)}}).propDecorators={svgSheetsData:[{type:t.IIB}],selectedSvgSheet:[{type:t.IIB}],selectSvgSheetRequest:[{type:t.r_U}]},M);P=(0,r.gn)([(0,t.wA2)({selector:"awg-edition-svg-sheet-nav",template:'<div *ngIf="svgSheetsData" class="btn-group awg-btn-group d-flex" role="group">\n    <ng-container *ngFor="let svgSheet of svgSheetsData.sheets">\n        <a\n            *ngIf="svgSheet.content.length === 1"\n            class="btn btn-default w-100 awg-svg-sheet-nav-link"\n            [ngClass]="{ active: isSelectedSvgSheet(svgSheet.id), \'text-muted\': !isSelectedSvgSheet(svgSheet.id) }"\n            (click)="selectSvgSheet(svgSheet.id)">\n            {{ svgSheet.label }}\n        </a>\n        <div *ngIf="svgSheet.content.length > 1" class="awg-svg-sheet-nav-link-dropdown" ngbDropdown>\n            <a class="btn text-muted" id="dropDownSheetNav" ngbDropdownToggle>\n                <span>{{ svgSheet.label }}</span>\n            </a>\n            <div ngbDropdownMenu aria-labelledby="dropdownSheetNav">\n                <div *ngFor="let svgSheetContent of svgSheet.content">\n                    <a\n                        class="dropdown-item"\n                        [ngClass]="{\n                            active: isSelectedSvgSheet(svgSheet.id + svgSheetContent.partial),\n                            \'text-muted\': !isSelectedSvgSheet(svgSheet.id + svgSheetContent.partial)\n                        }"\n                        (click)="selectSvgSheet(svgSheet.id + svgSheetContent.partial)"\n                        >{{ svgSheet.label + svgSheetContent.partial }}</a\n                    >\n                </div>\n            </div>\n        </div>\n    </ng-container>\n</div>\n',changeDetection:t.n4l.OnPush,styles:[ne()]})],P);var oe=o(5861);var R,ie=o(2730),ae=o.n(ie),V=o(2687),le=o(8372),j=o(2722),L=o(7579),re=o(22),y=o(2539),k=o(3212),de=o(4967);let z=((R=class{constructor(e){this.svgDrawingService=e,this.openModalRequest=new t.vpe,this.selectSvgSheetRequest=new t.vpe,this.selectOverlaysRequest=new t.vpe,this.faCompressArrowsAlt=V.udn,this.sliderConfig=new re.w(1,.1,10,.01,1),this.svgSheetFilePath="",this._availableOverlays=[],this._selectedOverlays=[],this._isRendered=!1,this._resize$=new L.x,this._destroyed$=new L.x,this.ref=this}onResize(){!this.svgSheetSelection||!this.svgSheetRootGroupSelection||(this._getContainerDimensions(this.svgSheetContainerRef),this._resize$.next(!0))}ngOnChanges(){this._isRendered&&this.renderSheet()}ngAfterViewInit(){this._resize$.pipe((0,le.b)(150),(0,j.R)(this._destroyed$)).subscribe(e=>{this.renderSheet()}),this.renderSheet(),this._isRendered=!0}renderSheet(){this._clearSVG(),this._availableOverlays=[],this._selectedOverlays=[],this.svgSheetFilePath=this.selectedSvgSheet?.content[0].svg,this._createSvg().then(()=>{this.resetZoom(),this._createSvgOverlays()})}resetZoom(){!this.svgSheetSelection||!this.sliderConfig||(this.onZoomChange(this.sliderConfig.initial),this._reTranslateZoom())}onZoomChange(e){this.sliderConfig.value=e,this._reScaleZoom()}openModal(e){!e||this.openModalRequest.emit(e)}selectSvgSheet(e){!e||this.selectSvgSheetRequest.emit(e)}ngOnDestroy(){this._destroyed$.next(!0),this._destroyed$.complete()}_clearSVG(){this.svgSheetRootGroupSelection?.selectAll("*").remove(),this.svgSheetSelection?.selectAll("*").remove()}_createSvg(){var e=this;return(0,oe.Z)(function*(){e.svgSheetContainerRef?(e.svgSheetSelection=yield e.svgDrawingService.createSvg(e.svgSheetFilePath,e.svgSheetElementRef?.nativeElement,e.svgSheetRootGroupRef?.nativeElement),e.svgSheetRootGroupSelection=e.svgSheetSelection.select("#awg-edition-svg-sheet-root-group"),e._getContainerDimensions(e.svgSheetContainerRef),e._zoomHandler(e.svgSheetRootGroupSelection,e.svgSheetSelection)):console.warn("No svg sheet container ref")})()}_createSvgOverlays(){if(!this.svgSheetRootGroupSelection)return;const e=this.svgDrawingService.getTkkGroups(this.svgSheetRootGroupSelection);e&&e.nodes().forEach(n=>{const s=n.id;this._availableOverlays.push(new y.OZ(y.wN.item,s,!1));const i=n.getBBox(),l=this.svgDrawingService.createOverlayGroup(this.svgSheetRootGroupSelection,s,i,"tkk"),h=this.svgDrawingService.getOverlayGroupRectSelection(this.svgSheetRootGroupSelection,s,"tkk"),g=this._getOverlayById(this._availableOverlays,s);l.on("mouseover",()=>{if(g&&!g.isSelected){const v=this.svgDrawingService.selectionFillColor;this.svgDrawingService.fillD3SelectionWithColor(h,v)}}).on("mouseout",()=>{const v=g&&g.isSelected?this.svgDrawingService.selectionFillColor:this.svgDrawingService.deselectionFillColor;this.svgDrawingService.fillD3SelectionWithColor(h,v)}).on("click",()=>{g&&(g.isSelected=!g.isSelected),this._selectedOverlays=this._getSelectedOverlays(this._availableOverlays),this._onOverlaySelect(this._selectedOverlays)})}),this.svgDrawingService.getLinkBoxes(this.svgSheetRootGroupSelection)}_getContainerDimensions(e){const n=this.svgDrawingService.getContainerDimensions(e);this._divWidth=this._divWidth?this._divWidth:n.width,this._divHeight=this._divHeight?this._divHeight:n.height}_getSelectedOverlays(e){return e.filter(n=>n.isSelected)}_getOverlayById(e,n){return e.find(s=>s.id===n)}_onOverlaySelect(e){this.selectOverlaysRequest.emit(e)}_reScaleZoom(){!this.svgSheetSelection||!this.sliderConfig.value||this._zoomBehaviour.scaleTo(this.svgSheetSelection,this.sliderConfig.value)}_reTranslateZoom(){!this.svgSheetSelection||this.svgSheetRootGroupSelection.attr("transform","translate(0,0)")}_roundToNearestScaleStep(e){const n=this.sliderConfig.stepSize;return((i,l)=>Number(Math.round(Number(i+"e"+l))+"e-"+l))(e,(i=n,Math.floor(i)===i?0:i.toString().split(".")[1].length||0));var i}_zoomHandler(e,n){this._zoomBehaviour=de.sP().scaleExtent([this.sliderConfig.min,this.sliderConfig.max]).on("zoom",a=>{const i=a.transform,l=this._roundToNearestScaleStep(i.k);e.attr("transform",i),this.sliderInput&&this.sliderInput.nativeElement&&(this.sliderInput.nativeElement.value=l,this.sliderConfig.value=l),this.sliderInputLabel&&this.sliderInputLabel.nativeElement&&(this.sliderInputLabel.nativeElement.innerText=l+"x")}),n.call(this._zoomBehaviour)}}).ctorParameters=()=>[{type:k.Rt}],R.propDecorators={svgSheetContainerRef:[{type:t.i9L,args:["svgSheetContainer"]}],svgSheetElementRef:[{type:t.i9L,args:["svgSheetElement"]}],svgSheetRootGroupRef:[{type:t.i9L,args:["svgSheetRootGroup"]}],sliderInput:[{type:t.i9L,args:["sliderInput"]}],sliderInputLabel:[{type:t.i9L,args:["sliderInputLabel"]}],selectedSvgSheet:[{type:t.IIB}],openModalRequest:[{type:t.r_U}],selectSvgSheetRequest:[{type:t.r_U}],selectOverlaysRequest:[{type:t.r_U}],onResize:[{type:t.L6J,args:["window:resize"]}]},R);z=(0,r.gn)([(0,t.wA2)({selector:"awg-edition-svg-sheet",template:'<div id="awg-edition-svg-container" *ngIf="selectedSvgSheet">\n    <div class="awg-edition-svg-icon-bar">\n        \x3c!-- Slider --\x3e\n        <div class="input-group input-group-sm awg-edition-svg-zoom-slider-container float-start mb-3">\n            <span #sliderInputLabel class="input-group-text" id="slider-label">{{ sliderConfig.value }}x</span>\n            <input\n                type="range"\n                #sliderInput\n                class="awg-edition-svg-zoom-slider"\n                id="awg-edition-svg-zoom-slider"\n                name="zoomSlider"\n                aria-label="Zoom slider"\n                aria-describedby="slider-label"\n                [min]="sliderConfig.min"\n                [max]="sliderConfig.max"\n                [step]="sliderConfig.stepSize"\n                [(ngModel)]="sliderConfig.value"\n                (ngModelChange)="onZoomChange($event)" />\n            <button class="btn btn-sm btn-outline-info" type="submit" title="Reset zoom" (click)="resetZoom()">\n                <fa-icon [icon]="faCompressArrowsAlt"></fa-icon>\n            </button>\n        </div>\n    </div>\n\n    <div #svgSheetContainer class="awg-edition-svg-sheet-container">\n        <svg #svgSheetElement id="awg-edition-svg-sheet">\n            <g #svgSheetRootGroup id="awg-edition-svg-sheet-root-group"></g>\n        </svg>\n    </div>\n</div>\n',styles:[ae()]})],z);let F=class{};F=(0,r.gn)([(0,t.LVF)({imports:[d.m,Y.K],declarations:[C,P,z],exports:[C]})],F);var ge=o(2312),he=o.n(ge);let G=class{constructor(){this._itemsOffsetCorrection=4}getFolioSvgData(e,n){const s=new y.jD(e,n,this._itemsOffsetCorrection);return new y.Hb(s)}addViewBoxToSnapSvgCanvas(e,n){e.attr({viewBox:n.viewBox,width:n.svgWidth,height:n.svgHeight,version:"1.1",xmlns:"https://www.w3.org/2000/svg",xlink:"https://www.w3.org/1999/xlink",preserveAspectRatio:"xMinYMin meet"})}addFolioToSnapSvgCanvas(e,n,s,a,i){this.ref=i;const l=e.group();this._addFolioSheetToSnapSvgCanvas(e,l,n,s),this._addFolioSystemsToSnapSvgCanvas(e,l,n,s),this._addFolioItemsToSnapSvgCanvas(e,l,n,a)}_addFolioSheetToSnapSvgCanvas(e,n,s,a){const i=s.sheet.folioId,l=s.sheet.upperLeftCorner.x,h=s.sheet.upperLeftCorner.y,g=s.sheet.lowerRightCorner.x,v=s.sheet.lowerRightCorner.y;n.attr({sheetGroupId:i,class:"sheet-group"});const f=e.rect(l,h,g,v);f.attr({fill:"white",stroke:a,strokeWidth:1});const m=Snap.parse("<title>Bl. "+i+"</title>");n.append(m),n.add(f)}_addFolioSystemsToSnapSvgCanvas(e,n,s,a){s.systems.lineArrays.forEach((i,l)=>{const h=e.group();h.attr({systemLineGroupId:l+1,class:"system-line-group"}),i.forEach(S=>{const X=S.startPoint.x,w=S.startPoint.y,Z=S.endPoint.x,W=S.endPoint.y,E=e.line(X,w,Z,W);E.attr({class:"system-line",stroke:a,strokeWidth:.7}),h.add(E)});const g=s.systems.lineLabelArray[l].x,v=s.systems.lineLabelArray[l].y,f=l+1,m=e.text(g,v,f);m.attr({class:"system-label",dominantBaseline:"hanging",fill:a});const _=e.group(h,m);_.attr({systemsGroupId:l+1,class:"systems-group"}),n.add(_)})}_addFolioItemsToSnapSvgCanvas(e,n,s,a){s.contentItemsArray.forEach(i=>{if(!i)return;const l=i.upperLeftCorner.x+i.width/2,h=i.upperLeftCorner.y+i.height/2,g=i.sigleAddendum?[i.sigle," "+i.sigleAddendum]:[i.sigle],v=e.text(0,0,g);v.attr({class:"item-label",style:"font: 12px Source Sans Pro, source-sans-pro, sans-serif",dominantBaseline:"middle"});const f="middle";v.select("tspan:first-of-type").attr({x:l,y:h,textAnchor:f}),g.length>1&&v.select("tspan:last-of-type").attr({x:l,y:h,textAnchor:f,dy:"1.2em"});const m=e.group();i.lineArray.forEach(w=>{const Z=w.startPoint.x,W=w.startPoint.y,E=w.endPoint.x,Ce=w.endPoint.y,Re=e.line(Z,W,E,Ce);m.add(Re)}),m.attr({class:"item-shape",strokeWidth:2,fill:"white"});const _=e.el("a");_.attr({class:"item-link"}),_.add(m),_.add(v);const S=e.group(_);S.attr({itemGroupId:g,itemId:i.id,class:"item-group"});const X=Snap.parse("<title>"+g+"</title>");S.append(X),!1===i.selectable?(S.click(()=>this.ref.openModal(i.linkTo)),S.attr({stroke:"grey",fill:"grey"})):(S.click(()=>this.ref.selectSvgSheet(i.id)),S.attr({stroke:a,fill:a})),n.add(S)})}};var b;G=(0,r.gn)([(0,t.GSi)({providedIn:"root"})],G);let x=((b=class{constructor(e){this.folioService=e,this.openModalRequest=new t.vpe,this.selectSvgSheetRequest=new t.vpe,this.canvasArray=[],this.folioSvgDataArray=[],this.vbArray=[],this.bgColor="#a3a3a3",this.fgColor="orange",this._folioSettings={factor:1.5,formatX:175,formatY:270,initialOffsetX:5,initialOffsetY:5,numberOfFolios:0},this.ref=this}get folioSettings(){return this._folioSettings}set folioSettings(e){this._folioSettings=e}ngOnChanges(){this.prepareFolioSvgOutput()}ngAfterViewChecked(){this.renderSnapSvg(),this.toggleActiveClass()}toggleActiveClass(){!this.canvasArray||this.canvasArray.forEach(e=>{e.selectAll(".item-group").forEach(n=>{const s=n.node.attributes.itemId.value;n.toggleClass("active",this.isSelectedSvgSheet(s))})})}prepareFolioSvgOutput(){this.folioSvgDataArray=[],this.selectedConvolute.folios.forEach((e,n)=>{this.folioSettings={factor:this.folioSettings.factor,formatX:+e.format.width,formatY:+e.format.height,initialOffsetX:this.folioSettings.initialOffsetX,initialOffsetY:this.folioSettings.initialOffsetY,numberOfFolios:+this.selectedConvolute.folios.length};const s=(this.folioSettings.formatX+2*this.folioSettings.initialOffsetX)*this.folioSettings.factor,a=(this.folioSettings.formatY+2*this.folioSettings.initialOffsetY)*this.folioSettings.factor;this.vbArray[n]=new y.HA(s,a),this.folioSvgDataArray[n]=this.folioService.getFolioSvgData(this.folioSettings,e)})}renderSnapSvg(){this.canvasArray=[],this.folioSvgDataArray.forEach((e,n)=>{const s="#folio-"+e.sheet.folioId,a=Snap(s);!a||(this.folioService.addViewBoxToSnapSvgCanvas(a,this.vbArray[n]),this.folioService.addFolioToSnapSvgCanvas(a,e,this.bgColor,this.fgColor,this.ref),this.canvasArray.push(a))})}isSelectedSvgSheet(e){return e===this.selectedSvgSheet.id}openModal(e){this.openModalRequest.emit(e)}selectSvgSheet(e){this.selectSvgSheetRequest.emit(e)}}).ctorParameters=()=>[{type:G}],b.propDecorators={selectedConvolute:[{type:t.IIB}],selectedSvgSheet:[{type:t.IIB}],openModalRequest:[{type:t.r_U}],selectSvgSheetRequest:[{type:t.r_U}]},b);x=(0,r.gn)([(0,t.wA2)({selector:"awg-edition-folio",template:'\x3c!-- embedded svg: EditionSvgSheet Overview --\x3e\n<div class="container-fluid svgGrid" *ngIf="folioSvgDataArray">\n    <div class="row svgRow">\n        <div\n            class="col-sm-6 col-lg-{{ 12 / folioSvgDataArray?.length }} svgCol"\n            *ngFor="let folioSvg of folioSvgDataArray">\n            <svg id="folio-{{ folioSvg.sheet.folioId }}"></svg>\n        </div>\n    </div>\n</div>\n',changeDetection:t.n4l.OnPush,styles:[he()]})],x);let B=class{};B=(0,r.gn)([(0,t.LVF)({imports:[d.m],declarations:[x],exports:[x]})],B);var $,Se=o(1333),pe=o.n(Se);let O=(($=class{constructor(){this.openModalRequest=new t.vpe,this.selectConvoluteRequest=new t.vpe,this.selectSvgSheetRequest=new t.vpe,this.faSquare=V.pL1,this.folioLegends=[{color:"olivedrab",label:"aktuell ausgew\xe4hlt"},{color:"orange",label:"ausw\xe4hlbar"},{color:"grey",label:"(momentan noch) nicht ausw\xe4hlbar"}]}openModal(e){!e||this.openModalRequest.emit(e)}selectConvolute(e){!e||this.selectConvoluteRequest.emit(e)}selectSvgSheet(e){!e||this.selectSvgSheetRequest.emit(e)}}).propDecorators={folioConvoluteData:[{type:t.IIB}],selectedConvolute:[{type:t.IIB}],selectedSvgSheet:[{type:t.IIB}],openModalRequest:[{type:t.r_U}],selectConvoluteRequest:[{type:t.r_U}],selectSvgSheetRequest:[{type:t.r_U}]},$);O=(0,r.gn)([(0,t.wA2)({selector:"awg-edition-convolute",template:'<ngb-accordion activeIds="awg-convolute-view">\n    <ngb-panel id="awg-convolute-view" title="Konvolut\xfcbersicht">\n        <ng-template ngbPanelContent>\n            \x3c!-- convolute dropDown --\x3e\n            <div class="awg-convolute-dropdown d-inline-block" ngbDropdown>\n                <a class="btn" id="dropDownConvolutes" ngbDropdownToggle>\n                    <span>{{ selectedConvolute.convoluteLabel }}</span>\n                </a>\n                <div ngbDropdownMenu aria-labelledby="dropDownConvolutes">\n                    <a\n                        class="dropdown-item awg-convolute-dropdown-item"\n                        *ngFor="let convolute of folioConvoluteData.convolutes"\n                        (click)="selectConvolute(convolute.convoluteId)"\n                        >{{ convolute.convoluteLabel }}</a\n                    >\n                </div>\n            </div>\n\n            \x3c!-- folio overview --\x3e\n            <awg-edition-folio\n                *ngIf="selectedConvolute && selectedSvgSheet"\n                [selectedConvolute]="selectedConvolute"\n                [selectedSvgSheet]="selectedSvgSheet"\n                (openModalRequest)="openModal($event)"\n                (selectSvgSheetRequest)="selectSvgSheet($event)">\n            </awg-edition-folio>\n\n            \x3c!-- folio legend --\x3e\n            <div class="awg-folio-legend col-12">\n                Legende:&nbsp;\n                <ng-container *ngFor="let legend of folioLegends">\n                    <span class="{{ legend.color }}">\n                        <fa-icon [icon]="faSquare"></fa-icon>\n                        {{ legend.label }}\n                    </span>\n                </ng-container>\n            </div>\n        </ng-template>\n    </ngb-panel>\n</ngb-accordion>\n',changeDetection:t.n4l.OnPush,styles:[pe()]})],O);let N=class{};N=(0,r.gn)([(0,t.LVF)({imports:[d.m,B],declarations:[O],exports:[O]})],N);var D=o(5867);var I,me=o(7572),fe=o.n(me),U=o(3900),_e=o(67);let A=((I=class{constructor(e,n,s,a,i){this.editionDataService=e,this.editionService=n,this.utils=s,this.route=a,this.router=i,this.errorMessage=void 0,this.showTkA=!1,this._destroyed$=new L.x}ngOnInit(){this.getEditionSheetsData()}getEditionSheetsData(){this.route.paramMap.pipe((0,U.w)(()=>this.editionService.getEditionComplex()),(0,U.w)(e=>(this.editionComplex=e,this.editionDataService.getEditionSheetsData(this.editionComplex))),(0,U.w)(e=>(this.folioConvoluteData=e[0],this.svgSheetsData=e[1],this.textcriticsData=e[2],this.route.queryParamMap)),(0,j.R)(this._destroyed$)).subscribe({next:e=>{this._selectConvolute(e),this._filterSvgSheets(),this._selectSvgSheet(e)},error:e=>{this.errorMessage=e}})}onConvoluteSelect(e){e||(e=this.folioConvoluteData.convolutes[0].convoluteId||"");const n=this._findConvolute(e);if(!this.utils.isNotEmptyArray(n.folios)&&n.linkTo)return void this.modal.open(n.linkTo);this.selectedConvolute=n,this._filterSvgSheets();const s={queryParams:{convolute:n.convoluteId,sketch:this.filteredSvgSheetsData.sheets[0].id}};this.router.navigate([this.editionComplex.baseRoute,this.editionComplex.sheetsRoute.route],s)}onOverlaySelect(e){if(!this.textcriticsData&&!this.selectedSvgSheet)return;const n=this._findTextcriticalComments();this.selectedTextcriticalComments=this.editionService.getTextcriticalCommentsForOverlays(n,e),this.showTkA=this.utils.isNotEmptyArray(this.selectedTextcriticalComments)}onSvgSheetSelect(e){this.selectedConvolute||this.onConvoluteSelect(""),this.onOverlaySelect([]),e||(e=this.filteredSvgSheetsData.sheets[0].id),this.selectedSvgSheet=this._findSvgSheet(e);const n={queryParams:{convolute:this.selectedConvolute.convoluteId,sketch:e},queryParamsHandling:"merge"};this.router.navigate([this.editionComplex.baseRoute,this.editionComplex.sheetsRoute.route],n)}ngOnDestroy(){this._destroyed$.next(!0),this._destroyed$.complete()}_findConvolute(e){let n=0;const s=this.folioConvoluteData.convolutes.findIndex(a=>a.convoluteId===e);return s>=0&&(n=s),this.folioConvoluteData.convolutes[n]}_findSvgSheet(e){let s,n=0;const a=this.filteredSvgSheetsData.sheets.findIndex(l=>{let h=l.id;return l.content.length>1&&(s=l.content.findIndex(g=>h+g.partial===e),s>=0&&(h+=l.content[s].partial)),h===e});a>=0&&(n=a);const i={...this.filteredSvgSheetsData.sheets[n]};return s>=0&&(i.content=[this.filteredSvgSheetsData.sheets[n].content[s]]),i}_findTextcriticalComments(){if(!this.textcriticsData&&!this.selectedSvgSheet)return;const e=this.textcriticsData.textcritics.findIndex(n=>n.id===this.selectedSvgSheet.id);return e>-1&&this.textcriticsData.textcritics[e]&&this.textcriticsData.textcritics[e].comments?this.textcriticsData.textcritics[e].comments:[]}_filterSvgSheets(){this.filteredSvgSheetsData=new y.vU,this.filteredSvgSheetsData.sheets=this.svgSheetsData.sheets.filter(e=>e.convolute===this.selectedConvolute.convoluteId)}_getSketchParams(e){return e.get("sketch")?e.get("sketch"):this.filteredSvgSheetsData.sheets[0].id}_getConvoluteParams(e){return e.get("convolute")?e.get("convolute"):this.folioConvoluteData.convolutes[0].convoluteId}_selectConvolute(e){const n=this._getConvoluteParams(e);this.selectedConvolute=this._findConvolute(n)}_selectSvgSheet(e){const n=this._getSketchParams(e);this.selectedSvgSheet=this._findSvgSheet(n),this.selectedTextcriticalComments=this._findTextcriticalComments()}}).ctorParameters=()=>[{type:k.Ko},{type:k.OE},{type:_e.tI},{type:D.gz},{type:D.F0}],I.propDecorators={modal:[{type:t.i9L,args:["modal",{static:!0}]}]},I);A=(0,r.gn)([(0,t.wA2)({selector:"awg-edition-sheets",template:'\x3c!-- content: edition detail --\x3e\n<div>\n    \x3c!-- modal --\x3e\n    <awg-modal #modal></awg-modal>\n\n    \x3c!-- body with embedded svg\'s --\x3e\n    \x3c!-- accolade view --\x3e\n    <awg-edition-accolade\n        *ngIf="svgSheetsData && selectedSvgSheet"\n        [svgSheetsData]="filteredSvgSheetsData"\n        [selectedSvgSheet]="selectedSvgSheet"\n        [selectedTextcriticalComments]="selectedTextcriticalComments"\n        [showTkA]="showTkA"\n        (openModalRequest)="modal.open($event)"\n        (selectSvgSheetRequest)="onSvgSheetSelect($event)"\n        (selectOverlaysRequest)="onOverlaySelect($event)">\n    </awg-edition-accolade>\n\n    \x3c!-- convolute view --\x3e\n    <awg-edition-convolute\n        *ngIf="folioConvoluteData && selectedConvolute && selectedSvgSheet"\n        [folioConvoluteData]="folioConvoluteData"\n        [selectedConvolute]="selectedConvolute"\n        [selectedSvgSheet]="selectedSvgSheet"\n        (openModalRequest)="modal.open($event)"\n        (selectConvoluteRequest)="onConvoluteSelect($event)"\n        (selectSvgSheetRequest)="onSvgSheetSelect($event)">\n    </awg-edition-convolute>\n</div>\n',styles:[fe()]})],A);const ye=[{path:"",component:A,data:{title:"AWG Online Edition \u2013 Sheets"}}],we=[A];let q=class{};q=(0,r.gn)([(0,t.LVF)({imports:[D.Bz.forChild(ye)],exports:[D.Bz]})],q);let H=class{};H=(0,r.gn)([(0,t.LVF)({imports:[d.m,F,N,q],declarations:[we]})],H)},8475:(c,u,o)=>{var r=o(135),d=o(479)(r);d.push([c.id,"",""]),c.exports=d.toString()},7229:(c,u,o)=>{var r=o(135),d=o(479)(r);d.push([c.id,"",""]),c.exports=d.toString()},2730:(c,u,o)=>{var r=o(135),d=o(479)(r);d.push([c.id,"#awg-edition-svg-container {\n  position: relative;\n  width: 100%;\n}\n#awg-edition-svg-container > .awg-edition-svg-icon-bar {\n  position: relative;\n  width: 100%;\n}\n\n.awg-edition-svg-panel-container {\n  position: inherit;\n  height: 100%;\n}\n\n/* slider */\n.input-group.awg-edition-svg-zoom-slider-container {\n  flex-wrap: nowrap;\n  width: auto;\n}\n.input-group.awg-edition-svg-zoom-slider-container > :not(:first-child) {\n  margin-left: 0px !important;\n}\n\n#slider-label.input-group-text {\n  min-width: 50px;\n  color: #149b9e;\n}\n\n/* slider input */\ninput[type=range].awg-edition-svg-zoom-slider {\n  width: 100%;\n  background-color: transparent;\n  -webkit-appearance: none;\n}\ninput[type=range].awg-edition-svg-zoom-slider:focus {\n  outline: none;\n}\ninput[type=range].awg-edition-svg-zoom-slider:focus::-ms-fill-lower {\n  background: rgba(221, 221, 221, 0.78);\n}\ninput[type=range].awg-edition-svg-zoom-slider:focus::-ms-fill-upper {\n  background: #e5e5e5;\n}\ninput[type=range].awg-edition-svg-zoom-slider:focus::-webkit-slider-runnable-track {\n  background: #e5e5e5;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-webkit-slider-runnable-track {\n  background: rgba(221, 221, 221, 0.78);\n  border: 0.2px solid #dddddd;\n  border-radius: 1.3px;\n  width: 100%;\n  height: 31px;\n  cursor: pointer;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-webkit-slider-thumb {\n  width: 15px;\n  height: 29px;\n  background: #149b9e;\n  border: 1.8px solid #149b9e;\n  border-radius: 10px;\n  cursor: pointer;\n  -webkit-appearance: none;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-moz-range-track {\n  background: rgba(221, 221, 221, 0.78);\n  border: 0.2px solid #dddddd;\n  border-radius: 1.3px;\n  width: 100%;\n  height: 29px;\n  cursor: pointer;\n  -moz-margin-start: fill;\n  margin-right: fill;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-moz-range-thumb {\n  width: 15px;\n  height: 27px;\n  background: #149b9e;\n  border: 1.8px solid #149b9e;\n  border-radius: 10px;\n  cursor: pointer;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-ms-track {\n  background: transparent;\n  border-color: transparent;\n  border-width: 7.4px 0;\n  color: transparent;\n  width: 100%;\n  height: 31px;\n  cursor: pointer;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-ms-fill-lower {\n  background: rgba(221, 221, 221, 0.78);\n  border: 0.2px solid #dddddd;\n  border-radius: 2.6px;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-ms-fill-upper {\n  background: rgba(221, 221, 221, 0.78);\n  border: 0.2px solid #dddddd;\n  border-radius: 2.6px;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-ms-thumb {\n  width: 15px;\n  height: 29px;\n  background: #149b9e;\n  border: 1.8px solid #149b9e;\n  border-radius: 10px;\n  cursor: pointer;\n  margin-top: 0px;\n  /*Needed to keep the Edge thumb centred*/\n}",""]),c.exports=d.toString()},1333:(c,u,o)=>{var r=o(135),d=o(479)(r);d.push([c.id,"",""]),c.exports=d.toString()},2312:(c,u,o)=>{var r=o(135),d=o(479)(r);d.push([c.id,"/*\nsee also https://stackoverflow.com/questions/114543/how-to-horizontally-center-a-div-in-another-div\n */\n.svgGrid {\n  margin-bottom: 2em;\n}\n\n.svgRow {\n  padding-top: 1em;\n  width: inherit;\n  text-align: center;\n  box-shadow: 5px 5px 6px #cccccc;\n  border: 1px solid #eeeeee;\n}\n\n.svgCol {\n  display: inline-block;\n}",""]),c.exports=d.toString()},7572:(c,u,o)=>{var r=o(135),d=o(479)(r);d.push([c.id,"",""]),c.exports=d.toString()}}]);