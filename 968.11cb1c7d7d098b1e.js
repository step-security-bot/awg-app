(self.webpackChunkawg_app=self.webpackChunkawg_app||[]).push([[968],{8968:(d,h,i)=>{"use strict";i.r(h),i.d(h,{EditionSheetsModule:()=>X});var a=i(7582),t=i(9212),l=i(7410),Y=i(3318);var Q=i(6248),J=i.n(Q),x=i(590),M=i(3539);let C=class{constructor(e){this.utils=e,this.navigateToReportFragmentRequest=new t.vpe,this.openModalRequest=new t.vpe,this.selectSvgSheetRequest=new t.vpe,this.faChevronRight=x._tD,this.faChevronUp=x.mTx,this.showTextcritics=!1,this.ref=this}navigateToReportFragment(e){e&&this.navigateToReportFragmentRequest.emit(e)}openModal(e){e&&this.openModalRequest.emit(e)}selectSvgSheet(e){e?.sheetId&&this.selectSvgSheetRequest.emit(e)}toggleTextcritics(){this.showTextcritics=!this.showTextcritics}static#e=this.ctorParameters=()=>[{type:M.tI}];static#t=this.propDecorators={selectedTextcriticalComments:[{type:t.IIB}],selectedTextcritics:[{type:t.IIB}],showTkA:[{type:t.IIB}],navigateToReportFragmentRequest:[{type:t.r_U}],openModalRequest:[{type:t.r_U}],selectSvgSheetRequest:[{type:t.r_U}]}};C=(0,a.gn)([(0,t.wA2)({selector:"awg-edition-svg-sheet-footer",template:'<div class="awg-edition-svg-sheet-footer mt-4">\n    <div class="awg-edition-svg-sheet-footer-evaluation">\n        <p (click)="toggleTextcritics()" style="cursor: pointer">\n            @if (selectedTextcritics.description && utils.isNotEmptyArray(selectedTextcritics.description)) {\n                <span>\n                    <fa-icon [icon]="showTextcritics ? faChevronUp : faChevronRight"></fa-icon>\n                    &nbsp;\n                </span>\n            }\n            <span class="caps">Skizzenkommentar:</span>\n            @if (selectedTextcritics.description && !utils.isNotEmptyArray(selectedTextcritics.description)) {\n                <span>&nbsp;---</span>\n            }\n        </p>\n        @if (\n            showTextcritics && selectedTextcritics.description && utils.isNotEmptyArray(selectedTextcritics.description)\n        ) {\n            <awg-edition-tka-description\n                [textcriticalDescriptions]="selectedTextcritics.description"\n                (navigateToReportFragmentRequest)="navigateToReportFragment($event)"\n                (openModalRequest)="openModal($event)"\n                (selectSvgSheetRequest)="selectSvgSheet($event)">\n            </awg-edition-tka-description>\n        }\n    </div>\n    @if (showTkA) {\n        <div class="awg-edition-svg-sheet-footer-textcritics">\n            <p class="caps">Textkritischer Kommentar:</p>\n            <awg-edition-tka-table\n                [textcriticalComments]="selectedTextcriticalComments"\n                [isRowTable]="selectedTextcritics.rowtable"\n                (navigateToReportFragmentRequest)="navigateToReportFragment($event)"\n                (openModalRequest)="openModal($event)"\n                (selectSvgSheetRequest)="selectSvgSheet($event)">\n            </awg-edition-tka-table>\n        </div>\n    }\n</div>\n',changeDetection:t.n4l.OnPush,styles:[J()]})],C);let B=class{};B=(0,a.gn)([(0,t.LVF)({imports:[l.m,Y.g],declarations:[C],exports:[C]})],B);var te=i(55),se=i.n(te);let b=class{constructor(e){this.utils=e,this.selectSvgSheetRequest=new t.vpe}isSelectedSvgSheet(e,s){let n=e,r=this.selectedSvgSheet.id;return s&&this.selectedSvgSheet.content?.[0]?.partial&&(n+=s,r+=this.selectedSvgSheet.content[0].partial),n===r}selectSvgSheet(e,s){s&&this.selectSvgSheetRequest.emit({complexId:e,sheetId:s})}static#e=this.ctorParameters=()=>[{type:M.tI}];static#t=this.propDecorators={navItemLabel:[{type:t.IIB}],svgSheets:[{type:t.IIB}],selectedSvgSheet:[{type:t.IIB}],selectSvgSheetRequest:[{type:t.r_U}]}};b=(0,a.gn)([(0,t.wA2)({selector:"awg-edition-svg-sheet-nav-item",template:'<h6 class="card-title">\n    {{ navItemLabel }}:\n    @if (!utils.isNotEmptyArray(svgSheets)) {\n        <span>---</span>\n    }\n</h6>\n@for (svgSheet of svgSheets; track svgSheet) {\n    @if (svgSheet.content.length === 1) {\n        <a\n            class="btn btn-default w-100 awg-svg-sheet-nav-link card-text text-start"\n            [ngClass]="{ active: isSelectedSvgSheet(svgSheet.id), \'text-muted\': !isSelectedSvgSheet(svgSheet.id) }"\n            (click)="selectSvgSheet(\'\', svgSheet.id)">\n            {{ svgSheet.label }}\n        </a>\n    }\n    @if (svgSheet.content.length > 1) {\n        <div class="awg-svg-sheet-nav-link-dropdown" ngbDropdown>\n            <a\n                class="btn card-text"\n                id="dropDownSheetNav"\n                ngbDropdownToggle\n                [ngClass]="{ active: isSelectedSvgSheet(svgSheet.id), \'text-muted\': !isSelectedSvgSheet(svgSheet.id) }">\n                <span\n                    >{{ svgSheet.label }} <span class="badge bg-secondary">{{ svgSheet.content.length }}</span></span\n                >\n            </a>\n            <div ngbDropdownMenu aria-labelledby="dropdownSheetNav">\n                @for (svgSheetContent of svgSheet.content; track svgSheetContent; let i = $index) {\n                    <div>\n                        <a\n                            class="dropdown-item"\n                            [ngClass]="{\n                                active: isSelectedSvgSheet(svgSheet.id, svgSheetContent.partial),\n                                \'text-muted\': !isSelectedSvgSheet(svgSheet.id, svgSheetContent.partial)\n                            }"\n                            (click)="selectSvgSheet(\'\', svgSheet.id + svgSheetContent.partial)"\n                            >{{ svgSheet.label }}\n                            <span class="text-muted">[{{ i + 1 }}/{{ svgSheet.content.length }}]</span></a\n                        >\n                    </div>\n                }\n            </div>\n        </div>\n    }\n}\n',styles:[se()]})],b);var ne=i(9253),oe=i.n(ne);let O=class{constructor(){this.selectSvgSheetRequest=new t.vpe}selectSvgSheet(e){e?.sheetId&&this.selectSvgSheetRequest.emit(e)}static#e=this.propDecorators={svgSheetsData:[{type:t.IIB}],selectedSvgSheet:[{type:t.IIB}],selectSvgSheetRequest:[{type:t.r_U}]}};O=(0,a.gn)([(0,t.wA2)({selector:"awg-edition-svg-sheet-nav",template:'@if (svgSheetsData) {\n    <div class="awg-svg-sheet-nav card">\n        <div class="card-body">\n            <awg-edition-svg-sheet-nav-item\n                [navItemLabel]="\'Werkeditionen\'"\n                [svgSheets]="svgSheetsData.sheets.workEditions"\n                [selectedSvgSheet]="selectedSvgSheet"\n                (selectSvgSheetRequest)="selectSvgSheet($event)"></awg-edition-svg-sheet-nav-item>\n            <hr />\n            <awg-edition-svg-sheet-nav-item\n                [navItemLabel]="\'Texteditionen\'"\n                [svgSheets]="svgSheetsData.sheets.textEditions"\n                [selectedSvgSheet]="selectedSvgSheet"\n                (selectSvgSheetRequest)="selectSvgSheet($event)"></awg-edition-svg-sheet-nav-item>\n            <hr />\n            <awg-edition-svg-sheet-nav-item\n                [navItemLabel]="\'Skizzeneditionen\'"\n                [svgSheets]="svgSheetsData.sheets.sketchEditions"\n                [selectedSvgSheet]="selectedSvgSheet"\n                (selectSvgSheetRequest)="selectSvgSheet($event)"></awg-edition-svg-sheet-nav-item>\n        </div>\n    </div>\n}\n',changeDetection:t.n4l.OnPush,styles:[oe()]})],O);let F=class{};F=(0,a.gn)([(0,t.LVF)({imports:[l.m],declarations:[O,b],exports:[O,b]})],F);var ae=i(2750),le=i.n(ae);let T=class{constructor(){this.toggleSuppliedClassesOpacityRequest=new t.vpe,this.allSuppliedClassesVisible=!0}toggleSingleSuppliedClassOpacity(e){const s=this.suppliedClasses.get(e)||!1;this.suppliedClasses.set(e,!s),this._onSuppliedClassesOpacityToggle(e,s);const n=Array.from(this.suppliedClasses.values());n.every(r=>r===n[0])&&(this.allSuppliedClassesVisible=n[0])}toggleAllSuppliedClassesOpacity(){this._onSuppliedClassesOpacityToggle(void 0,this.allSuppliedClassesVisible),this.allSuppliedClassesVisible=!this.allSuppliedClassesVisible,this.suppliedClasses.forEach((e,s)=>{this.suppliedClasses.set(s,this.allSuppliedClassesVisible)})}_onSuppliedClassesOpacityToggle(e,s){this.toggleSuppliedClassesOpacityRequest.emit({className:e,isCurrentlyVisible:s})}static#e=this.propDecorators={suppliedClasses:[{type:t.IIB}],toggleSuppliedClassesOpacityRequest:[{type:t.r_U}]}};T=(0,a.gn)([(0,t.wA2)({selector:"awg-edition-svg-sheet-viewer-settings",template:'<div class="card awg-edition-svg-sheet-viewer-settings float-none my-2">\n    <div class="card-header">\n        <span class="mx-2">Editorische Erg\xe4nzungen</span>\n    </div>\n    <div class="card-body">\n        <div class="row">\n            <div class="col-4">\n                <div class="form-check form-switch">\n                    <input\n                        class="form-check-input"\n                        type="checkbox"\n                        [checked]="allSuppliedClassesVisible"\n                        value=""\n                        id="all-supplied-classes"\n                        (click)="toggleAllSuppliedClassesOpacity()" />\n                    <label class="form-check-label" for="all-supplied-classes">\n                        Alle {{ allSuppliedClassesVisible ? \'aus\' : \'ein\' }}blenden\n                    </label>\n                </div>\n            </div>\n            @for (suppliedClass of suppliedClasses | keyvalue; track suppliedClass; let i = $index) {\n                <div class="col-4">\n                    <div class="form-check form-switch">\n                        <input\n                            class="form-check-input"\n                            type="checkbox"\n                            [checked]="suppliedClass.value"\n                            value=""\n                            [id]="suppliedClass.key"\n                            (click)="toggleSingleSuppliedClassOpacity(suppliedClass.key)" />\n                        <label class="form-check-label" [for]="suppliedClass.key">{{ suppliedClass.key }}</label>\n                    </div>\n                </div>\n                \x3c!-- Add a new row after every third item --\x3e\n                @if ((i + 2) % 3 === 0) {\n                    <div class="w-100"></div>\n                }\n            }\n        </div>\n    </div>\n</div>\n',changeDetection:t.n4l.OnPush,styles:[le()]})],T);var ce=i(5861);var ge=i(7167),ve=i.n(ge),z=i(8645),he=i(3620),Z=i(9773),pe=i(2413),R=i(1166),E=i(7559),Se=i(1313);let A=class{constructor(e,s){this.cdr=e,this.svgDrawingService=s,this.browseSvgSheetRequest=new t.vpe,this.selectLinkBoxRequest=new t.vpe,this.selectOverlaysRequest=new t.vpe,this.faCompressArrowsAlt=x.udn,this.sliderConfig=new pe.w(1,.1,10,.01,1),this.suppliedClasses=new Map,this.svgSheetFilePath="",this._availableOverlays=[],this._selectedOverlays=[],this._isRendered=!1,this._resize$=new z.x,this._destroyed$=new z.x,this.ref=this}onResize(){!this.svgSheetSelection||!this.svgSheetRootGroupSelection||(this._getContainerDimensions(this.svgSheetContainerRef),this._resize$.next(!0))}ngOnChanges(){this._isRendered&&this.renderSheet()}ngAfterViewInit(){this._resize$.pipe((0,he.b)(150),(0,Z.R)(this._destroyed$)).subscribe(e=>{this.renderSheet()}),this.renderSheet(),this._isRendered=!0}ngOnDestroy(){this._destroyed$.next(!0),this._destroyed$.complete()}browseSvgSheet(e){e&&this.browseSvgSheetRequest.emit(e)}onSuppliedClassesOpacityToggle(e){const{className:s,isCurrentlyVisible:n}=e;this.svgDrawingService.toggleSuppliedClassOpacity(this.svgSheetRootGroupSelection,s,n)}onZoomChange(e){this.sliderConfig.value=e,this._rescaleZoom()}renderSheet(){this._clearSVG(),this._availableOverlays=[],this._selectedOverlays=[],this.svgSheetFilePath=this.selectedSvgSheet?.content[0].svg,this._createSvg().then(()=>{this.resetZoom(),this._createSvgOverlays(),this.cdr.detectChanges()})}resetZoom(){!this.svgSheetSelection||!this.sliderConfig||(this.onZoomChange(this.sliderConfig.initial),this._resetZoomTranslation())}_clearSVG(){this.svgSheetRootGroupSelection?.selectAll("*").remove(),this.svgSheetSelection?.selectAll("*").remove()}_createSvg(){var e=this;return(0,ce.Z)(function*(){e.svgSheetContainerRef?(e.svgSheetSelection=yield e.svgDrawingService.createSvg(e.svgSheetFilePath,e.svgSheetElementRef?.nativeElement,e.svgSheetRootGroupRef?.nativeElement),e.svgSheetRootGroupSelection=e.svgSheetSelection.select("#awg-edition-svg-sheet-root-group"),e._getContainerDimensions(e.svgSheetContainerRef),e._zoomHandler(e.svgSheetRootGroupSelection,e.svgSheetSelection)):console.warn("No svg sheet container ref")})()}_createSvgOverlays(){this.svgSheetRootGroupSelection&&(this._createOverlays("link-box",this._createLinkBoxOverlay.bind(this)),this._createOverlays("tkk",this._createTkkOverlay.bind(this)),this._getSuppliedClasses())}_createOverlays(e,s){const n=this.svgDrawingService.getGroupsBySelector(this.svgSheetRootGroupSelection,e);n&&n.nodes().forEach(r=>{s(r,e)})}_createLinkBoxOverlay(e,s){const n=e.id,r=this.svgDrawingService.getD3SelectionById(this.svgSheetRootGroupSelection,n),o=r.select("path");o.style("fill",this.svgDrawingService.linkBoxFillColor),r.on("mouseover",()=>{const c=this.svgDrawingService.linkBoxHoverFillColor;this.svgDrawingService.fillD3SelectionWithColor(o,c),r.style("cursor","pointer")}).on("mouseout",()=>{const c=this.svgDrawingService.linkBoxFillColor;this.svgDrawingService.fillD3SelectionWithColor(o,c)}).on("click",()=>{this._onLinkBoxSelect(n)})}_createTkkOverlay(e,s){const n=e.id,r=e.getBBox();this._availableOverlays.push(new R.OZ(R.wN.item,n,!1));const o=this._getOverlayById(this._availableOverlays,n),c=this.svgDrawingService.createOverlayGroup(this.svgSheetRootGroupSelection,n,r,s),v=this.svgDrawingService.getOverlayGroupRectSelection(this.svgSheetRootGroupSelection,n,s);c.on("mouseover",()=>{this.svgDrawingService.updateTkkOverlayColor(o,v,"hover"),v.style("cursor","pointer")}).on("mouseout",()=>{this.svgDrawingService.updateTkkOverlayColor(o,v,"fill")}).on("click",()=>{o&&(o.isSelected=!o.isSelected),this.svgDrawingService.updateTkkOverlayColor(o,v,"hover"),this._selectedOverlays=this._getSelectedOverlays(this._availableOverlays),this._onOverlaySelect(this._selectedOverlays)})}_getContainerDimensions(e){const s=this.svgDrawingService.getContainerDimensions(e);this._divWidth=this._divWidth?this._divWidth:s.width,this._divHeight=this._divHeight?this._divHeight:s.height}_getOverlayById(e,s){return e.find(n=>n.id===s)}_getSelectedOverlays(e){return e.filter(s=>s.isSelected)}_getSuppliedClasses(){this.suppliedClasses=this.svgDrawingService.getSuppliedClasses(this.svgSheetRootGroupSelection)}_onLinkBoxSelect(e){e&&this.selectLinkBoxRequest.emit(e)}_onOverlaySelect(e){this.selectOverlaysRequest.emit(e)}_rescaleZoom(){!this.svgSheetSelection||!this.sliderConfig.value||this._zoomBehaviour.scaleTo(this.svgSheetSelection,this.sliderConfig.value)}_resetZoomTranslation(){!this.svgSheetSelection||!this.svgSheetRootGroupSelection||this.svgSheetRootGroupSelection.attr("transform","translate(0,0)")}_roundToScaleStepDecimalPrecision(e){const s=this.sliderConfig.stepSize;return((o,c)=>+(Math.round(+(o+"e"+c))+"e-"+c))(e,(o=s,Math.floor(o)===o?0:o.toString().split(".")[1].length));var o}_zoomHandler(e,s){this._zoomBehaviour=Se.sP().scaleExtent([this.sliderConfig.min,this.sliderConfig.max]).on("zoom",r=>{const o=r.transform,c=this._roundToScaleStepDecimalPrecision(o.k);e.attr("transform",o),this.sliderInput?.nativeElement&&(this.sliderInput.nativeElement.value=c,this.sliderConfig.value=c),this.sliderInputLabel?.nativeElement&&(this.sliderInputLabel.nativeElement.innerText=c+"x")}),s.call(this._zoomBehaviour)}static#e=this.ctorParameters=()=>[{type:t.sBO},{type:E.Rt}];static#t=this.propDecorators={svgSheetContainerRef:[{type:t.i9L,args:["svgSheetContainer"]}],svgSheetElementRef:[{type:t.i9L,args:["svgSheetElement"]}],svgSheetRootGroupRef:[{type:t.i9L,args:["svgSheetRootGroup"]}],sliderInput:[{type:t.i9L,args:["sliderInput"]}],sliderInputLabel:[{type:t.i9L,args:["sliderInputLabel"]}],selectedSvgSheet:[{type:t.IIB}],browseSvgSheetRequest:[{type:t.r_U}],selectLinkBoxRequest:[{type:t.r_U}],selectOverlaysRequest:[{type:t.r_U}],onResize:[{type:t.L6J,args:["window:resize"]}]}};A=(0,a.gn)([(0,t.wA2)({selector:"awg-edition-svg-sheet-viewer",template:'@if (selectedSvgSheet) {\n    <div id="awg-edition-svg-container">\n        <div class="awg-edition-svg-sheet-viewer">\n            <div class="awg-edition-svg-icon-bar">\n                \x3c!-- Slider --\x3e\n                <div class="input-group input-group-sm awg-edition-svg-zoom-slider-container float-start mx-2r my-2">\n                    <span #sliderInputLabel class="input-group-text" id="slider-label">{{ sliderConfig.value }}x</span>\n                    <input\n                        type="range"\n                        #sliderInput\n                        class="awg-edition-svg-zoom-slider"\n                        id="awg-edition-svg-zoom-slider"\n                        name="zoomSlider"\n                        aria-label="Zoom slider"\n                        aria-describedby="slider-label"\n                        [min]="sliderConfig.min"\n                        [max]="sliderConfig.max"\n                        [step]="sliderConfig.stepSize"\n                        [(ngModel)]="sliderConfig.value"\n                        (ngModelChange)="onZoomChange($event)" />\n                    <button class="btn btn-sm btn-outline-info" type="submit" title="Reset zoom" (click)="resetZoom()">\n                        <fa-icon [icon]="faCompressArrowsAlt"></fa-icon>\n                    </button>\n                </div>\n            </div>\n            <div #svgSheetContainer class="awg-edition-svg-sheet-container px-2r">\n                <svg #svgSheetElement id="awg-edition-svg-sheet">\n                    <g #svgSheetRootGroup id="awg-edition-svg-sheet-root-group"></g>\n                </svg>\n                <awg-license class="d-flex mt-3 text-center small"></awg-license>\n                @if (suppliedClasses.size > 0) {\n                    <awg-edition-svg-sheet-viewer-settings\n                        [suppliedClasses]="suppliedClasses"\n                        (toggleSuppliedClassesOpacityRequest)="\n                            onSuppliedClassesOpacityToggle($event)\n                        "></awg-edition-svg-sheet-viewer-settings>\n                }\n            </div>\n            \x3c!-- Next and previous buttons --\x3e\n            <div class="awg-edition-svg-sheet-viewer-nav">\n                <div class="prev" (click)="browseSvgSheet(-1)">\n                    <span>&#10094;</span>\n                </div>\n                <div class="next" (click)="browseSvgSheet(1)">\n                    <span>&#10095;</span>\n                </div>\n            </div>\n        </div>\n    </div>\n}\n',styles:[ve()]})],A);let N=class{};N=(0,a.gn)([(0,t.LVF)({imports:[l.m],declarations:[A,T],exports:[A,T]})],N);var me=i(2611),_e=i.n(me);let D=class{constructor(){this.browseSvgSheetRequest=new t.vpe,this.navigateToReportFragmentRequest=new t.vpe,this.openModalRequest=new t.vpe,this.selectLinkBoxRequest=new t.vpe,this.selectOverlaysRequest=new t.vpe,this.selectSvgSheetRequest=new t.vpe}browseSvgSheet(e){e&&this.browseSvgSheetRequest.emit(e)}navigateToReportFragment(e){e&&this.navigateToReportFragmentRequest.emit(e)}openModal(e){e&&this.openModalRequest.emit(e)}selectLinkBox(e){this.selectLinkBoxRequest.emit(e)}selectOverlays(e){this.selectOverlaysRequest.emit(e)}selectSvgSheet(e){e?.sheetId&&this.selectSvgSheetRequest.emit(e)}static#e=this.propDecorators={svgSheetsData:[{type:t.IIB}],selectedSvgSheet:[{type:t.IIB}],selectedTextcriticalComments:[{type:t.IIB}],selectedTextcritics:[{type:t.IIB}],showTkA:[{type:t.IIB}],browseSvgSheetRequest:[{type:t.r_U}],navigateToReportFragmentRequest:[{type:t.r_U}],openModalRequest:[{type:t.r_U}],selectLinkBoxRequest:[{type:t.r_U}],selectOverlaysRequest:[{type:t.r_U}],selectSvgSheetRequest:[{type:t.r_U}]}};D=(0,a.gn)([(0,t.wA2)({selector:"awg-edition-accolade",template:'<div ngbAccordion>\n    <div ngbAccordionItem="awg-accolade-view" [collapsed]="false">\n        <div ngbAccordionHeader class="accordion-button awg-accordion-button-custom-header justify-content-between">\n            <button ngbAccordionToggle class="btn btn-link text-start p-0">Edierte Notentexte</button>\n            <button type="button" class="btn btn-sm btn-outline-info" (click)="openModal(\'HINT_EDITION_SHEETS\')">\n                Hinweise zur Nutzung\n            </button>\n        </div>\n        <div ngbAccordionCollapse>\n            <div ngbAccordionBody>\n                <ng-template>\n                    <div class="row">\n                        <div class="order-2 order-lg-1 col-12 col-lg-4 col-xl-3">\n                            \x3c!-- svg sheet navigation --\x3e\n                            @if (svgSheetsData && selectedSvgSheet) {\n                                <awg-edition-svg-sheet-nav\n                                    [svgSheetsData]="svgSheetsData"\n                                    [selectedSvgSheet]="selectedSvgSheet"\n                                    (selectSvgSheetRequest)="selectSvgSheet($event)">\n                                </awg-edition-svg-sheet-nav>\n                            }\n                        </div>\n                        <div class="order-1 order-lg-2 col-12 col-lg-8 col-xl-9">\n                            \x3c!-- svg sheet --\x3e\n                            @if (selectedSvgSheet) {\n                                <awg-edition-svg-sheet-viewer\n                                    [selectedSvgSheet]="selectedSvgSheet"\n                                    (browseSvgSheetRequest)="browseSvgSheet($event)"\n                                    (selectLinkBoxRequest)="selectLinkBox($event)"\n                                    (selectOverlaysRequest)="selectOverlays($event)">\n                                </awg-edition-svg-sheet-viewer>\n                            }\n\n                            \x3c!-- table for TkA --\x3e\n                            @if (selectedSvgSheet && selectedTextcritics) {\n                                <awg-edition-svg-sheet-footer\n                                    [selectedTextcritics]="selectedTextcritics"\n                                    [selectedTextcriticalComments]="selectedTextcriticalComments"\n                                    [showTkA]="showTkA"\n                                    (navigateToReportFragmentRequest)="navigateToReportFragment($event)"\n                                    (openModalRequest)="openModal($event)"\n                                    (selectSvgSheetRequest)="selectSvgSheet($event)"></awg-edition-svg-sheet-footer>\n                            }\n                        </div>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</div>\n',changeDetection:t.n4l.OnPush,styles:[_e()]})],D);let q=class{};q=(0,a.gn)([(0,t.LVF)({imports:[l.m,B,F,N],declarations:[D],exports:[D]})],q);var we=i(9335),ye=i.n(we);let I=class{constructor(){this.openModalRequest=new t.vpe,this.selectSvgSheetRequest=new t.vpe,this.faSquare=x.pL1,this.folioLegends=[{color:"olivedrab",label:"aktuell ausgew\xe4hlt"},{color:"orange",label:"ausw\xe4hlbar"},{color:"grey",label:"(momentan noch) nicht ausw\xe4hlbar"}]}openModal(e){e&&this.openModalRequest.emit(e)}selectSvgSheet(e){e?.sheetId&&this.selectSvgSheetRequest.emit(e)}static#e=this.propDecorators={selectedConvolute:[{type:t.IIB}],selectedSvgSheet:[{type:t.IIB}],openModalRequest:[{type:t.r_U}],selectSvgSheetRequest:[{type:t.r_U}]}};I=(0,a.gn)([(0,t.wA2)({selector:"awg-edition-convolute",template:'<div ngbAccordion>\n    <div ngbAccordionItem="awg-convolute-view" [collapsed]="false">\n        <div ngbAccordionHeader>\n            <button ngbAccordionButton>Konvolut\xfcbersicht</button>\n        </div>\n        <div ngbAccordionCollapse>\n            <div ngbAccordionBody>\n                <ng-template>\n                    \x3c!-- convolute label --\x3e\n                    <div class="awg-convolute-label">\n                        <p>\n                            <a [routerLink]="[\'../report\']" fragment="source{{ selectedConvolute.convoluteId }}">{{\n                                selectedConvolute.convoluteLabel\n                            }}</a>\n                        </p>\n                    </div>\n\n                    \x3c!-- viewer for convolute folios --\x3e\n                    <awg-edition-folio-viewer\n                        [selectedConvolute]="selectedConvolute"\n                        [selectedSvgSheet]="selectedSvgSheet"\n                        (openModalRequest)="openModal($event)"\n                        (selectSvgSheetRequest)="selectSvgSheet($event)">\n                    </awg-edition-folio-viewer>\n\n                    \x3c!-- convolute legend --\x3e\n                    <div class="awg-convolute-legend col-12">\n                        Legende:&nbsp;\n                        @for (legend of folioLegends; track legend) {\n                            <span class="{{ legend.color }}">\n                                <fa-icon [icon]="faSquare"></fa-icon>\n                                {{ legend.label }}\n                            </span>\n                        }\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</div>\n',changeDetection:t.n4l.OnPush,styles:[ye()]})],I);var xe=i(4756),Ce=i.n(xe);let G=class{constructor(){this._itemsOffsetCorrection=4}getFolioSvgData(e,s){const n=new R.jD(e,s,this._itemsOffsetCorrection);return new R.Hb(n)}addViewBoxToSnapSvgCanvas(e,s){e.attr({viewBox:s.viewBox,width:s.svgWidth,height:s.svgHeight,version:"1.1",xmlns:"https://www.w3.org/2000/svg",xlink:"https://www.w3.org/1999/xlink",preserveAspectRatio:"xMinYMin meet"})}addFolioToSnapSvgCanvas(e,s,n,r,o){this.ref=o;const c=e.group();this._addFolioSheetToSnapSvgCanvas(e,c,s,n),this._addFolioSystemsToSnapSvgCanvas(e,c,s,n),this._addFolioItemsToSnapSvgCanvas(e,c,s,r)}_addFolioSheetToSnapSvgCanvas(e,s,n,r){const o=n.sheet.folioId,c=n.sheet.upperLeftCorner.x,v=n.sheet.upperLeftCorner.y,u=n.sheet.lowerRightCorner.x,m=n.sheet.lowerRightCorner.y;s.attr({sheetGroupId:o,class:"sheet-group"});const f=e.rect(c,v,u,m);f.attr({fill:"white",stroke:r,strokeWidth:1});const _=Snap.parse("<title>Bl. "+o+"</title>");s.append(_),s.add(f)}_addFolioSystemsToSnapSvgCanvas(e,s,n,r){n.systems.lineArrays.forEach((o,c)=>{const v=e.group();v.attr({systemLineGroupId:c+1,class:"system-line-group"}),o.forEach(w=>{const y=w.startPoint.x,S=w.startPoint.y,j=w.endPoint.x,Ie=w.endPoint.y,W=e.line(y,S,j,Ie);W.attr({class:"system-line",stroke:r,strokeWidth:.7}),v.add(W)});const u=n.systems.lineLabelArray[c].x,m=n.systems.lineLabelArray[c].y,f=c+1,_=e.text(u,m,f);_.attr({class:"system-label",dominantBaseline:"hanging",fill:r});const p=e.group(v,_);p.attr({systemsGroupId:c+1,class:"systems-group"}),s.add(p)})}_addFolioItemsToSnapSvgCanvas(e,s,n,r){n.contentItemsArray.forEach(o=>{if(!o)return;const c=o.upperLeftCorner.x+o.width/2,v=o.upperLeftCorner.y+o.height/2,u=o.sigleAddendum?[o.sigle," "+o.sigleAddendum]:[o.sigle],m=e.text(0,0,u);m.attr({class:"item-label",style:"font: 12px Source Sans Pro, source-sans-pro, sans-serif",dominantBaseline:"middle"});const f="middle";m.select("tspan:first-of-type").attr({x:c,y:v,textAnchor:f}),u.length>1&&m.select("tspan:last-of-type").attr({x:c,y:v,textAnchor:f,dy:"1.2em"});const _=e.group(),p=[];p.push(o.cornerPoints.upperLeftCorner.x,o.cornerPoints.upperLeftCorner.y),p.push(o.cornerPoints.upperRightCorner.x,o.cornerPoints.upperRightCorner.y),p.push(o.cornerPoints.lowerRightCorner.x,o.cornerPoints.lowerRightCorner.y),p.push(o.cornerPoints.lowerLeftCorner.x,o.cornerPoints.lowerLeftCorner.y),p.push(o.cornerPoints.upperLeftCorner.x,o.cornerPoints.upperLeftCorner.y);const w=e.polyline(p);_.add(w),_.attr({class:"item-shape",strokeWidth:2,fill:"#eeeeee"});const y=e.el("a");y.attr({class:"item-link"}),y.add(_),y.add(m);const S=e.group(y);S.attr({itemGroupId:u,itemId:o.sheetId,class:"item-group"});const j=Snap.parse("<title>"+u+"</title>");S.append(j),!1===o.selectable?(S.click(()=>this.ref.openModal(o.linkTo)),S.attr({stroke:"grey",fill:"grey"})):(S.click(()=>this.ref.selectSvgSheet(o.complexId,o.sheetId)),S.attr({stroke:r,fill:r})),s.add(S)})}};G=(0,a.gn)([(0,t.GSi)({providedIn:"root"})],G);let k=class{constructor(e){this.folioService=e,this.openModalRequest=new t.vpe,this.selectSvgSheetRequest=new t.vpe,this.canvasArray=[],this.folioSvgData=[],this.vbArray=[],this.bgColor="#a3a3a3",this.fgColor="orange",this._folioSettings={factor:1.5,formatX:175,formatY:270,initialOffsetX:5,initialOffsetY:5,numberOfFolios:0},this.ref=this}get folioSettings(){return this._folioSettings}set folioSettings(e){this._folioSettings=e}ngOnChanges(e){e.selectedConvolute&&this.prepareFolioSvgOutput()}ngAfterViewChecked(){this.createSVGCanvas()}isSelectedSvgSheet(e){let s="";return this.selectedSvgSheet.content[0].partial&&(s=this.selectedSvgSheet.content[0].partial),e===this.selectedSvgSheet.id+s}prepareFolioSvgOutput(){this.folioSvgData=[],this.selectedConvolute.folios.forEach((e,s)=>{this.folioSettings={factor:this.folioSettings.factor,formatX:+e.format.width,formatY:+e.format.height,initialOffsetX:this.folioSettings.initialOffsetX,initialOffsetY:this.folioSettings.initialOffsetY,numberOfFolios:+this.selectedConvolute.folios.length};const n=(this.folioSettings.formatX+2*this.folioSettings.initialOffsetX)*this.folioSettings.factor,r=(this.folioSettings.formatY+2*this.folioSettings.initialOffsetY)*this.folioSettings.factor;this.vbArray[s]=new R.HA(n,r),this.folioSvgData[s]=this.folioService.getFolioSvgData(this.folioSettings,e)})}createSVGCanvas(){this.canvasArray=[],this.folioSvgData.forEach((e,s)=>{const n="#folio-"+this.selectedSvgSheet.id+"-"+e.sheet.folioId,r=Snap(n);r&&(this.folioService.addViewBoxToSnapSvgCanvas(r,this.vbArray[s]),this.folioService.addFolioToSnapSvgCanvas(r,e,this.bgColor,this.fgColor,this.ref),this.canvasArray.push(r))}),this.toggleActiveClass()}toggleActiveClass(){this.canvasArray&&this.canvasArray.forEach(e=>{e.selectAll(".item-group").forEach(s=>{const n=s.node.attributes.itemId.value;s.toggleClass("active",this.isSelectedSvgSheet(n))})})}openModal(e){this.openModalRequest.emit(e)}selectSvgSheet(e,s){s&&this.selectSvgSheetRequest.emit({complexId:e,sheetId:s})}static#e=this.ctorParameters=()=>[{type:G}];static#t=this.propDecorators={selectedConvolute:[{type:t.IIB}],selectedSvgSheet:[{type:t.IIB}],openModalRequest:[{type:t.r_U}],selectSvgSheetRequest:[{type:t.r_U}]}};k=(0,a.gn)([(0,t.wA2)({selector:"awg-edition-folio-viewer",template:'\x3c!-- embedded svg: EditionSvgSheet Overview --\x3e\n@if (folioSvgData) {\n    <div class="container-fluid svgGrid">\n        <div class="row svgRow">\n            @for (folio of folioSvgData; track folio) {\n                <div class="col-sm-6 col-lg-{{ 12 / folioSvgData?.length }} svgCol">\n                    <span class="text-muted">[{{ folio.sheet.folioId }}]</span>\n                    <svg id="folio-{{ selectedSvgSheet.id }}-{{ folio.sheet.folioId }}"></svg>\n                </div>\n            }\n        </div>\n    </div>\n}\n',changeDetection:t.n4l.OnPush,styles:[Ce()]})],k);let $=class{};$=(0,a.gn)([(0,t.LVF)({imports:[l.m],declarations:[k],exports:[k]})],$);let V=class{};V=(0,a.gn)([(0,t.LVF)({imports:[l.m,$],declarations:[I],exports:[I]})],V);var L=i(6158);var Oe=i(5262),Te=i.n(Oe),U=i(4664),Ee=i(8943);let P=class{constructor(e,s,n,r,o,c){this.editionDataService=e,this.editionSheetsService=s,this.editionService=n,this.utils=r,this.route=o,this.router=c,this.errorMessage=void 0,this.showTkA=!1,this._destroyed$=new z.x}get editionRouteConstants(){return Ee.LL}ngOnInit(){this.getEditionSheetsData()}getEditionSheetsData(){this.route.paramMap.pipe((0,U.w)(()=>this.editionService.getEditionComplex()),(0,U.w)(e=>(this.editionComplex=e,this.editionDataService.getEditionSheetsData(this.editionComplex))),(0,U.w)(e=>(this.folioConvoluteData=e[0],this.svgSheetsData=e[1],this.textcriticsData=e[2],this.route.queryParamMap)),(0,Z.R)(this._destroyed$)).subscribe({next:e=>{this._selectSvgSheet(e)},error:e=>{this.errorMessage=e}})}onLinkBoxSelect(e){if(!this.selectedSvgSheet||!this.selectedTextcritics?.linkBoxes)return;const s=this.selectedTextcritics.linkBoxes.find(n=>n.svgGroupId===e);if(s){const n=s.linkTo;this.onSvgSheetSelect(n)}}onNavigateToReportFragment(e){e||(e="");const s={fragment:e};this.router.navigate([this.editionComplex.baseRoute,this.editionRouteConstants.EDITION_REPORT.route],s)}onOverlaySelect(e){this.selectedTextcriticalComments=this.editionSheetsService.getTextcriticalCommentsForOverlays(this.selectedTextcritics.comments,e),this.showTkA=this.utils.isNotEmptyArray(this.selectedTextcriticalComments)}onBrowseSvgSheet(e){const s=this.editionSheetsService.getCurrentEditionType(this.selectedSvgSheet,this.svgSheetsData.sheets);if(!s)return;const n=this.svgSheetsData.sheets[s],r=this.editionSheetsService.getNextSheetId(e,this.selectedSvgSheet,n);this.onSvgSheetSelect({complexId:"",sheetId:r})}onSvgSheetSelect(e){const s=e.complexId?`/edition/complex/${e.complexId}`:this.editionComplex.baseRoute,r={queryParams:{id:e.sheetId?e.sheetId:this.svgSheetsData.sheets.sketchEditions[0].id},queryParamsHandling:"merge"};this.router.navigate([s,this.editionRouteConstants.EDITION_SHEETS.route],r)}ngOnDestroy(){this._destroyed$.next(!0),this._destroyed$.complete()}_getIdFromQueryParams(e){return e.get("id")?e.get("id"):this.svgSheetsData.sheets.sketchEditions[0].id}_selectSvgSheet(e){const s=this._getIdFromQueryParams(e);this.selectedSvgSheet=this.editionSheetsService.selectSvgSheetById(this.svgSheetsData.sheets,s),this.selectedConvolute=this.editionSheetsService.selectConvolute(this.folioConvoluteData.convolutes,this.svgSheetsData.sheets,this.selectedSvgSheet),this.selectedTextcritics=this.editionSheetsService.findTextcritics(this.textcriticsData.textcritics,this.selectedSvgSheet),this.onOverlaySelect([]),this.utils.isNotEmptyObject(this.selectedTextcritics)&&this.utils.isNotEmptyArray(this.selectedTextcritics.comments)&&(this.selectedTextcriticalComments=this.selectedTextcritics.comments)}static#e=this.ctorParameters=()=>[{type:E.Ko},{type:E.rH},{type:E.OE},{type:M.tI},{type:L.gz},{type:L.F0}];static#t=this.propDecorators={modal:[{type:t.i9L,args:["modal",{static:!0}]}]}};P=(0,a.gn)([(0,t.wA2)({selector:"awg-edition-sheets",template:'\x3c!-- content: edition detail --\x3e\n<div>\n    \x3c!-- modal --\x3e\n    <awg-modal #modal></awg-modal>\n\n    \x3c!-- body with embedded svg\'s --\x3e\n    \x3c!-- accolade view --\x3e\n    @if (svgSheetsData && selectedSvgSheet) {\n        <awg-edition-accolade\n            [svgSheetsData]="svgSheetsData"\n            [selectedSvgSheet]="selectedSvgSheet"\n            [selectedTextcritics]="selectedTextcritics"\n            [selectedTextcriticalComments]="selectedTextcriticalComments"\n            [showTkA]="showTkA"\n            (browseSvgSheetRequest)="onBrowseSvgSheet($event)"\n            (navigateToReportFragmentRequest)="onNavigateToReportFragment($event)"\n            (openModalRequest)="modal.open($event)"\n            (selectLinkBoxRequest)="onLinkBoxSelect($event)"\n            (selectOverlaysRequest)="onOverlaySelect($event)"\n            (selectSvgSheetRequest)="onSvgSheetSelect($event)">\n        </awg-edition-accolade>\n    }\n\n    \x3c!-- convolute view --\x3e\n    @if (selectedConvolute && selectedSvgSheet) {\n        <awg-edition-convolute\n            [selectedConvolute]="selectedConvolute"\n            [selectedSvgSheet]="selectedSvgSheet"\n            (openModalRequest)="modal.open($event)"\n            (selectSvgSheetRequest)="onSvgSheetSelect($event)">\n        </awg-edition-convolute>\n    }\n</div>\n',styles:[Te()]})],P);const Ae=[{path:"",component:P,data:{title:"AWG Online Edition \u2013 Sheets"}}],De=[P];let H=class{};H=(0,a.gn)([(0,t.LVF)({imports:[L.Bz.forChild(Ae)],exports:[L.Bz]})],H);let X=class{};X=(0,a.gn)([(0,t.LVF)({imports:[l.m,q,V,H],declarations:[De]})],X)},2611:(d,h,i)=>{var a=i(4969),l=i(1451)(a);l.push([d.id,"",""]),d.exports=l.toString()},6248:(d,h,i)=>{var a=i(4969),l=i(1451)(a);l.push([d.id,"",""]),d.exports=l.toString()},55:(d,h,i)=>{var a=i(4969),l=i(1451)(a);l.push([d.id,"a#dropDownSheetNav.btn {\n  border: none !important;\n}\na#dropDownSheetNav.active, a#dropDownSheetNav:active {\n  color: #149b9e !important;\n}\na#dropDownSheetNav:hover {\n  color: rgb(51, 51, 51) !important;\n}\na#dropDownSheetNav > span {\n  display: inline-block;\n  white-space: break-spaces;\n  text-align: start;\n}",""]),d.exports=l.toString()},9253:(d,h,i)=>{var a=i(4969),l=i(1451)(a);l.push([d.id,"",""]),d.exports=l.toString()},2750:(d,h,i)=>{var a=i(4969),l=i(1451)(a);l.push([d.id,"",""]),d.exports=l.toString()},7167:(d,h,i)=>{var a=i(4969),l=i(1451)(a);l.push([d.id,'#awg-edition-svg-container {\n  position: relative;\n  width: 100%;\n  /* Next & previous buttons */\n}\n#awg-edition-svg-container .awg-edition-svg-icon-bar {\n  position: relative;\n  width: 100%;\n}\n#awg-edition-svg-container .awg-edition-svg-sheet-container {\n  position: inherit;\n  height: 100%;\n  box-shadow: 5px 5px 6px rgb(204, 204, 204); /* rgba converted HEX #cccccc */\n  border: 1px solid #e7e7e7;\n}\n#awg-edition-svg-container .awg-edition-svg-sheet-viewer-nav {\n  /* Position the "next button" to the right */\n}\n#awg-edition-svg-container .awg-edition-svg-sheet-viewer-nav > .prev,\n#awg-edition-svg-container .awg-edition-svg-sheet-viewer-nav .next {\n  cursor: pointer;\n  position: absolute;\n  height: 100%;\n  top: 0;\n  width: auto;\n  padding: 8px;\n  -webkit-user-select: none;\n          user-select: none;\n  /* On hover, add a black background color with a little bit see-through */\n}\n#awg-edition-svg-container .awg-edition-svg-sheet-viewer-nav > .prev:hover,\n#awg-edition-svg-container .awg-edition-svg-sheet-viewer-nav .next:hover {\n  background-color: #dddddd;\n}\n#awg-edition-svg-container .awg-edition-svg-sheet-viewer-nav > .prev span,\n#awg-edition-svg-container .awg-edition-svg-sheet-viewer-nav .next span {\n  position: relative;\n  top: 45%;\n  font-weight: bold;\n  font-size: 18px;\n  transition: 0.6s ease;\n  color: #149b9e;\n}\n#awg-edition-svg-container .awg-edition-svg-sheet-viewer-nav > .prev {\n  border-right: 1px solid #dddddd;\n}\n#awg-edition-svg-container .awg-edition-svg-sheet-viewer-nav > .next {\n  right: 0;\n  border-left: 1px solid #dddddd;\n}\n\n/* slider */\n.input-group.awg-edition-svg-zoom-slider-container {\n  flex-wrap: nowrap;\n  width: auto;\n  margin-left: 2rem !important;\n}\n.input-group.awg-edition-svg-zoom-slider-container > :not(:first-child) {\n  margin-left: 0px !important;\n}\n\n#slider-label.input-group-text {\n  min-width: 50px;\n  color: #149b9e;\n}\n\n/* slider input */\ninput[type=range].awg-edition-svg-zoom-slider {\n  width: 100%;\n  background-color: transparent;\n  -webkit-appearance: none;\n}\ninput[type=range].awg-edition-svg-zoom-slider:focus {\n  outline: none;\n}\ninput[type=range].awg-edition-svg-zoom-slider:focus::-ms-fill-lower {\n  background: rgba(221, 221, 221, 0.78);\n}\ninput[type=range].awg-edition-svg-zoom-slider:focus::-ms-fill-upper {\n  background: #e5e5e5;\n}\ninput[type=range].awg-edition-svg-zoom-slider:focus::-webkit-slider-runnable-track {\n  background: #e5e5e5;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-webkit-slider-runnable-track {\n  background: rgba(221, 221, 221, 0.78);\n  border: 0.2px solid #dddddd;\n  border-radius: 1.3px;\n  width: 100%;\n  height: 31px;\n  cursor: pointer;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-webkit-slider-thumb {\n  width: 15px;\n  height: 29px;\n  background: #149b9e;\n  border: 1.8px solid #149b9e;\n  border-radius: 10px;\n  cursor: pointer;\n  -webkit-appearance: none;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-moz-range-track {\n  background: rgba(221, 221, 221, 0.78);\n  border: 0.2px solid #dddddd;\n  border-radius: 1.3px;\n  width: 100%;\n  height: 29px;\n  cursor: pointer;\n  -moz-margin-start: fill;\n  margin-right: fill;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-moz-range-thumb {\n  width: 15px;\n  height: 27px;\n  background: #149b9e;\n  border: 1.8px solid #149b9e;\n  border-radius: 10px;\n  cursor: pointer;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-ms-track {\n  background: transparent;\n  border-color: transparent;\n  border-width: 7.4px 0;\n  color: transparent;\n  width: 100%;\n  height: 31px;\n  cursor: pointer;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-ms-fill-lower {\n  background: rgba(221, 221, 221, 0.78);\n  border: 0.2px solid #dddddd;\n  border-radius: 2.6px;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-ms-fill-upper {\n  background: rgba(221, 221, 221, 0.78);\n  border: 0.2px solid #dddddd;\n  border-radius: 2.6px;\n}\ninput[type=range].awg-edition-svg-zoom-slider::-ms-thumb {\n  width: 15px;\n  height: 29px;\n  background: #149b9e;\n  border: 1.8px solid #149b9e;\n  border-radius: 10px;\n  cursor: pointer;\n  margin-top: 0px;\n  /*Needed to keep the Edge thumb centred*/\n}',""]),d.exports=l.toString()},9335:(d,h,i)=>{var a=i(4969),l=i(1451)(a);l.push([d.id,"",""]),d.exports=l.toString()},4756:(d,h,i)=>{var a=i(4969),l=i(1451)(a);l.push([d.id,"/*\nsee also https://stackoverflow.com/questions/114543/how-to-horizontally-center-a-div-in-another-div\n */\n.svgGrid {\n  margin-bottom: 2em;\n}\n\n.svgRow {\n  padding-top: 1em;\n  width: inherit;\n  text-align: center;\n  box-shadow: 5px 5px 6px #cccccc;\n  border: 1px solid #eeeeee;\n}\n\n.svgCol {\n  display: inline-block;\n}",""]),d.exports=l.toString()},5262:(d,h,i)=>{var a=i(4969),l=i(1451)(a);l.push([d.id,"",""]),d.exports=l.toString()}}]);