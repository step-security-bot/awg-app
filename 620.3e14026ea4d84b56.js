"use strict";(self.webpackChunkawg_app=self.webpackChunkawg_app||[]).push([[620],{8620:(se,V,s)=>{s.r(V),s.d(V,{DataViewModule:()=>te});var i=s(655),r=s(4650),M=s(8453);let m=class{constructor(){this.resourceRequest=new r.vpe}navigateToResource(e){!e||(e=e.toString(),this.resourceRequest.emit(e))}};m.propDecorators={header:[{type:r.IIB}],resourceUrl:[{type:r.IIB}],resourceRequest:[{type:r.r_U}]},m=(0,i.gn)([(0,r.wA2)({selector:"awg-resource-detail-header",template:'\x3c!-- resource detail header --\x3e\n<div class="resource-header">\n    <div class="row">\n        <div class="col-lg-8">\n            <h2 class="resource-title">\n                <div class="title">\n                    <span [compile-html]="header?.title" [compile-html-ref]="this"></span>\n                </div>\n                <div class="subtitle">\n                    <small></small>\n                </div>\n            </h2>\n            <div class="resource-link">\n                <small>\n                    API-Request:\n                    <a href="{{ resourceUrl }}">{{ resourceUrl }}</a>\n                    \x3c!-- TODO: (resource-detail-html-header): change then to stable URL for resource --\x3e\n                </small>\n            </div>\n        </div>\n        <div class="col-lg-4">\n            <table aria-label="Table with resource detail metadata" class="table table-sm resource-header-table">\n                <tbody>\n                    <tr>\n                        <th scope="row">Salsah-ID:</th>\n                        <td id="header?.objID">{{ header?.objID }}</td>\n                    </tr>\n                    <tr>\n                        <th scope="row">Kategorie</th>\n                        <td>\n                            <span class="resource-type">{{ header?.type }}</span\n                            >&nbsp;<span class="resource-icon"><img [src]="header?.icon" alt="icon" /></span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th scope="row">Zuletzt bearbeitet:</th>\n                        <td>\n                            <span class="resource-lastmod">{{ header?.lastmod }}</span> (UTC)\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n',changeDetection:r.n4l.OnPush,styles:['@charset "UTF-8";\n/************************************************\n *\n *               CREDITS\n *\n * This code is inspired, adapted or taken from:\n *\n * ARACHNE \u2013 Objektdatenbank des Deutschen Arch\xe4ologischen Instituts (DAI)\n * https://arachne.dainst.org/entity/1121229**]\n * 20.11.2017\n *\n *\n *\n************************************************/\n/* resource header */\n.resource-header {\n  margin: 1rem 0 0 0;\n  border-bottom: 1px solid #ddd;\n}\n/* resource header title */\n.resource-title .title {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.resource-title .title:hover {\n  white-space: normal;\n  width: inherit;\n  height: auto;\n}\n/* resource header link */\n.resource-link {\n  margin: 2rem 0;\n}\n/* resource header table */\n/* remove top border from table */\n.resource-header table.resource-header-table tr:first-of-type th,\n.resource-header table.resource-header-table tr:first-of-type td {\n  border-top: none;\n}']})],m);let d=class{constructor(){this.gndRequest=new r.vpe,this.resourceRequest=new r.vpe}exposeGnd(e){!e||!e.type||this.gndRequest.emit(e)}navigateToResource(e){!e||(e=e.toString(),this.resourceRequest.emit(e))}};d.propDecorators={resourceDetailData:[{type:r.IIB}],gndRequest:[{type:r.r_U}],resourceRequest:[{type:r.r_U}]},d=(0,i.gn)([(0,r.wA2)({selector:"awg-resource-detail-html",template:'\x3c!-- resourceDetailData content --\x3e\n<awg-resource-detail-html-content\n    *ngIf="resourceDetailData?.content"\n    [content]="resourceDetailData?.content"\n    (gndRequest)="exposeGnd($event)"\n    (resourceRequest)="navigateToResource($event)">\n</awg-resource-detail-html-content>\n',changeDetection:r.n4l.OnPush,styles:[""]})],d);let y=class{constructor(){this.gndRequest=new r.vpe,this.resourceRequest=new r.vpe}exposeGnd(e){!e||!e.type||this.gndRequest.emit(e)}navigateToResource(e){!e||(e=e.toString(),this.resourceRequest.emit(e))}};y.propDecorators={content:[{type:r.IIB}],gndRequest:[{type:r.r_U}],resourceRequest:[{type:r.r_U}]},y=(0,i.gn)([(0,r.wA2)({selector:"awg-resource-detail-html-content",template:'\x3c!--\n/************************************************\n*\n*               CREDITS\n*\n* This code is inspired, adapted or taken from:\n*\n* ARACHNE \u2013 Objektdatenbank des Deutschen Arch\xe4ologischen Instituts (DAI)\n* https://arachne.dainst.org/entity/1121229**]\n* 20.11.2017\n*\n*\n*\n************************************************/ --\x3e\n\x3c!-- resourceDetailData content --\x3e\n<div class="awg-resource-content">\n    <div class="row">\n        \x3c!-- object properties --\x3e\n        <div class="col-lg-8">\n            <awg-resource-detail-html-content-props\n                [props]="content?.props"\n                (gndRequest)="exposeGnd($event)"\n                (resourceRequest)="navigateToResource($event)">\n            </awg-resource-detail-html-content-props>\n        </div>\n\n        \x3c!-- right side nav objects --\x3e\n        <div class="col-lg-4 mt-3 mt-lg-0 mb-3">\n            <div class="sidenav-right">\n                \x3c!-- image objects --\x3e\n                <awg-resource-detail-html-content-imageobjects [images]="content?.images">\n                </awg-resource-detail-html-content-imageobjects>\n\n                \x3c!-- connected objects --\x3e\n                <awg-resource-detail-html-content-linkedobjects\n                    [incomingGroups]="content?.incoming"\n                    (resourceRequest)="navigateToResource($event)">\n                </awg-resource-detail-html-content-linkedobjects>\n            </div>\n        </div>\n    </div>\n</div>\n',changeDetection:r.n4l.OnPush,styles:[""]})],y);var $=s(9105);let T=class{constructor(){this.galleryOptions=[new $.WB({width:"100%",imageSize:"contain",thumbnailSize:"contain",thumbnailMargin:5,thumbnailsMargin:0,previewCloseOnClick:!0,previewCloseOnEsc:!0,previewZoom:!0,previewRotate:!0,linkTarget:"_blank"})]}};T.propDecorators={images:[{type:r.IIB}]},T=(0,i.gn)([(0,r.wA2)({selector:"awg-resource-detail-html-content-imageobjects",template:'\x3c!--\n/************************************************\n*\n*               CREDITS\n*\n* This code is inspired, adapted or taken from:\n*\n* ARACHNE \u2013 Objektdatenbank des Deutschen Arch\xe4ologischen Instituts (DAI)\n* https://arachne.dainst.org/entity/1121229**]\n* 20.11.2017\n*\n*\n*\n************************************************/ --\x3e\n\x3c!-- resourceDetailData content: image objects --\x3e\n<div class="awg-image-obj mb-3" *ngIf="images?.length > 0">\n    \x3c!-- header --\x3e\n    <h5>\n        Abbildungen (<span id="awg-image-number">{{ images?.length }}</span\n        >)\n    </h5>\n\n    \x3c!-- image slider --\x3e\n    <div class="card awg-image-slider">\n        <ngx-gallery class="ngx-gallery" [options]="galleryOptions" [images]="images"></ngx-gallery>\n    </div>\n    \x3c!-- end DIV image-slider --\x3e\n</div>\n\x3c!-- end DIV image-obj --\x3e\n',changeDetection:r.n4l.OnPush,styles:["/* slider container */\n.awg-image-slider {\n  height: 300px;\n}\n.awg-image-slider .ngx-gallery {\n  display: inline-block;\n}\n:host::ng-deep ngx-gallery {\n  /* image preview */\n  /* arrows */\n  /* thumbnails */\n}\n:host::ng-deep ngx-gallery .ngx-gallery-image-wrapper {\n  background-color: #e7e7e7;\n}\n:host::ng-deep ngx-gallery .ngx-gallery-arrow {\n  color: #676767;\n}\n:host::ng-deep ngx-gallery .ngx-gallery-arrow .ngx-gallery-disabled {\n  opacity: 0.3;\n}\n:host::ng-deep ngx-gallery .ngx-gallery-thumbnail {\n  opacity: 0.5;\n}\n:host::ng-deep ngx-gallery .ngx-gallery-thumbnail:hover {\n  opacity: 1;\n}"]})],T);let P=class{constructor(){this.resourceRequest=new r.vpe}get totalNumber(){return this._getNestedArraysTotalItems(this.incomingGroups)||0}navigateToResource(e){!e||(e=e.toString(),this.resourceRequest.emit(e))}_getNestedArraysTotalItems(e){if(!e)return;return e.map(n=>n.links.length).reduce((n,a)=>n+a,0)}};P.propDecorators={incomingGroups:[{type:r.IIB}],resourceRequest:[{type:r.r_U}]},P=(0,i.gn)([(0,r.wA2)({selector:"awg-resource-detail-html-content-linkedobjects",template:'\x3c!--\n/************************************************\n*\n*               CREDITS\n*\n* This code is inspired, adapted or taken from:\n*\n* ARACHNE \u2013 Objektdatenbank des Deutschen Arch\xe4ologischen Instituts (DAI)\n* https://arachne.dainst.org/entity/1121229**]\n* 20.11.2017\n*\n*\n*\n************************************************/ --\x3e\n\x3c!-- resourceDetailData content: linked objects --\x3e\n<div class="awg-linked-obj">\n    <h5>\n        \x3c!-- TODO: link to linked objects overview\n        <a (click)="navigateToSearchResults()">\n        --\x3e\n        Verkn\xfcpfte Objekte (<span id="awg-incoming-size" *ngIf="incomingGroups">{{ totalNumber }}</span\n        >)\n        \x3c!--\n        </a>\n        --\x3e\n    </h5>\n\n    <ngb-accordion [closeOthers]="true">\n        <ngb-panel\n            id="incoming-linkgroup-{{ i }}"\n            class="awg-linked-obj-incoming-linkgroup"\n            *ngFor="let restypeGroup of incomingGroups; let i = index">\n            <ng-template ngbPanelTitle>\n                <span class="awg-linked-obj-title-group single-line">\n                    <span class="badge badge-info me-2">{{ restypeGroup?.links?.length }}</span>\n                    <span class="awg-linked-obj-title">{{ restypeGroup?.restypeLabel }}</span>\n                </span>\n            </ng-template>\n            <ng-template ngbPanelContent>\n                <ul class="awg-linked-obj-list nobullets mb-0">\n                    <li *ngFor="let link of restypeGroup.links; last as isLast">\n                        <a class="awg-linked-obj-link" (click)="navigateToResource(link?.id)">\n                            <img [src]="link?.restype?.icon" alt="icon" />\n                            &nbsp;[<span class="awg-linked-obj-link-id">{{ link?.id }}</span\n                            >]&nbsp;\n                            <span class="awg-linked-obj-link-value">{{ link?.value }}</span>\n                        </a>\n                        <hr *ngIf="!isLast" />\n                    </li>\n                </ul>\n            </ng-template>\n        </ngb-panel>\n    </ngb-accordion>\n</div>\n\x3c!-- end DIV linkedObj --\x3e\n',changeDetection:r.n4l.OnPush,styles:['@charset "UTF-8";\n/************************************************\n *\n *               CREDITS\n *\n * This code is inspired, adapted or taken from:\n *\n * ARACHNE \u2013 Objektdatenbank des Deutschen Arch\xe4ologischen Instituts (DAI)\n * https://arachne.dainst.org/entity/1121229**]\n * 20.11.2017\n *\n *\n *\n ************************************************/\nul.awg-linked-obj-list {\n  padding-left: 0;\n}\nul.awg-linked-obj-list li:hover {\n  background-color: #e7e7e7;\n}\nul.awg-linked-obj-list li a {\n  width: inherit;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n}\nul.awg-linked-obj-list li hr {\n  margin-top: 0.75rem;\n  margin-bottom: 0.75rem;\n}\n/* link objects */\n.awg-linked-obj-link {\n  cursor: pointer;\n  color: #333 !important;\n}\n.awg-linked-obj-link:hover {\n  border-bottom: none !important;\n}']})],P);var U=s(2834);let j=class{constructor(){this.gndRequest=new r.vpe,this.resourceRequest=new r.vpe,this.metaBreakLine="Versionsdatum"}ngOnChanges(e){e.props&&this._checkForGND(e.props)}exposeGnd(e){!e||!e.type||this.gndRequest.emit(e)}navigateToResource(e){!e||(e=e.toString(),this.resourceRequest.emit(e))}ngOnDestroy(){this._removeGnd()}_checkForGND(e){const t=e.currentValue.filter(n=>"856"===n.pid&&n.values&&n.values.length>0);this._removeGnd(),t.length>0&&t.forEach(n=>{n.values.forEach(a=>{this._setGnd(a)})})}_setGnd(e){const t=new U.zI(U.G0.SET,e);this.exposeGnd(t)}_removeGnd(){const e=new U.zI(U.G0.REMOVE,null);this.exposeGnd(e)}};j.propDecorators={props:[{type:r.IIB}],gndRequest:[{type:r.r_U}],resourceRequest:[{type:r.r_U}]},j=(0,i.gn)([(0,r.wA2)({selector:"awg-resource-detail-html-content-props",template:'\x3c!-- resource detail data content: props --\x3e\n<section class="awg-props">\n    <h4 class="awg-props-title ms-0">Objektdaten</h4>\n    <ul *ngFor="let prop of props">\n        <li id="breakLine" *ngIf="prop.label === metaBreakLine">\n            <hr />\n        </li>\n        <li class="awg-prop" *ngIf="prop!.values[0]">\n            \x3c!-- value label --\x3e\n            <strong class="awg-prop-label" *ngIf="prop.label">\n                {{ prop.label }}\n            </strong>\n            \x3c!-- value content --\x3e\n            <ul *ngFor="let value of prop.values">\n                <li class="awg-prop-value" *ngIf="value">\n                    <span [compile-html]="value" [compile-html-ref]="this"></span>\n                </li>\n            </ul>\n        </li>\n    </ul>\n</section>\n',changeDetection:r.n4l.OnPush,styles:['@charset "UTF-8";\n/************************************************\n*\n*               CREDITS\n*\n* This code is inspired, adapted or taken from:\n*\n* ARACHNE \u2013 Objektdatenbank des Deutschen Arch\xe4ologischen Instituts (DAI)\n* https://arachne.dainst.org/entity/1121229**]\n* 20.11.2017\n*\n*\n*\n************************************************/\n/* props */\n.awg-props ul {\n  padding-left: 0;\n  margin-top: 0.5rem;\n  margin-bottom: 0.25rem;\n}\n.awg-props li {\n  list-style: none;\n  padding: 0.25rem 0;\n}\n.awg-props .awg-prop .awg-prop-label {\n  margin-top: 8px;\n  margin-bottom: -4px;\n  display: block;\n  font-size: 21px;\n  font-weight: 400;\n}\n.awg-props .awg-prop .awg-prop-value {\n  padding: 3px 0;\n  margin-left: 1rem;\n}']})],j);let A=class{};A.propDecorators={resourceJsonConvertedData:[{type:r.IIB}]},A=(0,i.gn)([(0,r.wA2)({selector:"awg-resource-detail-json-converted",template:'<awg-json-viewer\n    jsonViewerHeader="Converted JSON response from Salsah-API"\n    [jsonViewerData]="resourceJsonConvertedData">\n</awg-json-viewer>\n',changeDetection:r.n4l.OnPush,styles:[""]})],A);let k=class{};k.propDecorators={resourceJsonRawData:[{type:r.IIB}]},k=(0,i.gn)([(0,r.wA2)({selector:"awg-resource-detail-json-raw",template:'<awg-json-viewer jsonViewerHeader="Raw JSON response from Salsah-API" [jsonViewerData]="resourceJsonRawData">\n</awg-json-viewer>\n',changeDetection:r.n4l.OnPush,styles:[""]})],k);let X=class{};X=(0,i.gn)([(0,r.LVF)({imports:[M.m],declarations:[m,d,y,T,P,j,A,k],exports:[m,d,y,T,P,j,A,k]})],X);var w=s(4006),O=s(7579),v=s(2722),R=s(2687),c=s(9952),b=s(529),p=s(67),l=s(8490);let K=class extends p.sM{constructor(e){super(e),this.projectId="6",this.resTypeId="126",this.bibShortTitlePropertyId="614",this.resourcesRoute="resources/",this.searchRoute="search/",this.serviceName="BibliographyService"}getBibliographyList(){const e=this.searchRoute,t=(new b.LE).set("searchtype","extended").set("property_id",this.bibShortTitlePropertyId).set("compop","EXISTS").set("filter_by_project",this.projectId).set("filter_by_restype",this.resTypeId);return this.getApiResponse(l.vX,e,t)}getBibliographyItemDetail(e){const t=this.resourcesRoute+e,n=new b.LE;return this.getApiResponse(l.wB,t,n)}};K.ctorParameters=()=>[{type:b.eN}],K=(0,i.gn)([(0,r.GSi)({providedIn:"root"})],K);var Z=s(9646),me=s(4128),W=s(6590),I=s(4004),u=s(2838);let _=class extends p.sM{constructor(e,t){super(e),this.conversionService=t,this.projectId="6",this.vocabularyId="4",this.defaultLanguage="de",this.resourceSuffix="_-_local",this.routes={propertylists:"propertylists/",resources:"resources/",resourcetypes:"resourcetypes/",search:"search/"},this.serviceName="DataApiService"}getPropertyListsByResourceType(e){return e?this._getResourceDataResponseFromApi(l.wU,e).pipe((0,W.d)(new l.wU),(0,I.U)(n=>n)):(0,Z.of)(new l.wU)}getResourceData(e){if(!e)return;const t=this._getResourceDataResponseFromApi(l.wB,e),n=this._getResourceDataResponseFromApi(l.QX,e);return(0,me.D)([t,n]).pipe((0,W.d)([new l.wB,new l.QX]),(0,I.U)(a=>this._prepareResourceData(a,e)))}getResourceTypes(){return this._getResourceDataResponseFromApi(l.k1,"").pipe((0,W.d)(new l.k1),(0,I.U)(t=>t))}getSearchData(e){if(!e||!e.query)return(0,Z.of)(new l.vX);if("object"==typeof e.query&&!e.query.filterByRestype)return(0,Z.of)(new l.vX);const t=new c.bc(e.query,e.nRows||"-1",e.startAt||"0",e.viewType||u.d.TABLE);return this._getResourceDataResponseFromApi(l.vX,"",t).pipe((0,W.d)(new l.vX),(0,I.U)(a=>this.conversionService.convertFullTextSearchResults(a)))}_createSearchQueryParamsForApi(e){let t=(new b.LE).set("filter_by_project",this.projectId).set("lang",this.defaultLanguage).set("show_nrows",e.nRows).set("start_at",e.startAt);return"string"==typeof e.query?t=t.append("searchtype","fulltext"):"object"==typeof e.query&&(t=t.append("searchtype","extended"),t=t.append("filter_by_restype",e.query.filterByRestype),e.query.propertyId&&e.query.propertyId.length>0&&e.query.compop&&e.query.compop.length>0&&(e.query.propertyId.forEach(n=>{t=t.append("property_id",n)}),e.query.compop.forEach(n=>{t=t.append("compop",n)}),e.query.searchval&&e.query.searchval.length>0&&e.query.searchval.forEach(n=>{t=t.append("searchval",n)}))),t}_prepareResourceData(e,t){const n=this.conversionService.convertResourceData(e,t);return new c.Li(e[0],n)}_getResourceDataResponseFromApi(e,t,n){let a,o;switch(e){case l.wU:a=this.routes.propertylists,o=(new b.LE).set("restype",t);break;case l.QX:a=this.routes.resources+t+this.resourceSuffix,o=(new b.LE).set("reqtype","context");break;case l.wB:a=this.routes.resources+t+this.resourceSuffix,o=new b.LE;break;case l.k1:a=this.routes.resourcetypes,o=(new b.LE).set("vocabulary",this.vocabularyId).set("lang",this.defaultLanguage);break;case l.vX:a=this.routes.search,"string"==typeof n.query&&(a+=n.query),o=this._createSearchQueryParamsForApi(n)}return this.getApiResponse(e,a,o)}};_.ctorParameters=()=>[{type:b.eN},{type:p.re}],_=(0,i.gn)([(0,r.GSi)({providedIn:"root"})],_);let F=class{constructor(e,t){this.dataApiService=e,this.formBuilder=t,this.searchRequest=new r.vpe,this.faPlus=R.r8p,this.faSearch=R.wn1,this.faTrash=R.$aW,this.extendedSearchParams=new c.Rs,this.selectedCompopSets=[[]],this.defaultFormString="---",this.searchFormStrings={label:"Search Input",placeholder:"Volltextsuche in der Webern-Datenbank \u2026",errorMessage:"Es wird ein Suchbegriff mit mindestens 3 Zeichen ben\xf6tigt!"},this._destroyed$=new O.x}get restypeControl(){return this.extendedSearchForm.get("restypeControl")}get propertiesControls(){return this.extendedSearchForm.get("propertiesControls")}ngOnInit(){this.createExtendedSearchForm(),this.getResourcetypes()}createExtendedSearchForm(){this.extendedSearchForm=this.formBuilder.group({restypeControl:["",w.kI.required],propertiesControls:this.formBuilder.array([])}),this.addPropertiesControl()}addPropertiesControl(){const e=this.formBuilder.group({propertyIdControl:["",[w.kI.required]],compopControl:["",[w.kI.required]],searchvalControl:[""]});this.propertiesControls.push(e)}removePropertiesControl(e){e>-1&&this.propertiesControls.removeAt(e)}getCompopoControlAtIndex(e){return this._getFormArrayControlAtIndex("compopControl",e)}getCompopSetByValueType(e,t){let n=[];const a=c.rA.typeList.filter(o=>o.id===e);if(!a||1!==a.length||!a[0].id)return[];{const o=a[0].id;n="1"===o||"6"===o&&"14"===t||"14"===o?c.G9.compopList[5].compopSet:"2"===o||"3"===o?c.G9.compopList[4].compopSet:"4"===o||"5"===o?c.G9.compopList[3].compopSet:"13"===o?c.G9.compopList[2].compopSet:"6"===o&&("3"===t||"6"===t)||"7"===o||"11"===o||"12"===o||"15"===o?c.G9.compopList[1].compopSet:c.G9.compopList[0].compopSet}return n}getPopertyListEntryById(e){return this.propertyListsResponse.properties.filter(t=>t.id===e)}getPropertyIdControlAtIndex(e){return this.listenToUserPropertyChange(e),this._getFormArrayControlAtIndex("propertyIdControl",e)}getPropertyLists(e){this.dataApiService.getPropertyListsByResourceType(e).pipe((0,v.R)(this._destroyed$)).subscribe({next:t=>{this.propertyListsResponse=t},error:t=>{console.error(t)}})}getResourcetypes(){this.dataApiService.getResourceTypes().pipe((0,v.R)(this._destroyed$)).subscribe({next:e=>{this.restypesResponse=e,this.listenToUserResourcetypeChange()},error:e=>{console.error(e)}})}getSearchvalControlAtIndex(e){return""===this.isSearchvalControlDisabled(e)&&this._getFormArrayControlAtIndex("searchvalControl",e).setValue(""),this._getFormArrayControlAtIndex("searchvalControl",e)}getSearchvalPlaceholder(e){let t="Suchbegriff";return this.isSearchvalControlDisabled(e)&&(t=this.defaultFormString),t}isAddButtonDisabled(e){const t=this.getCompopoControlAtIndex(e).value;return this._isPropertyIdOrCompopMissing(e)||"EXISTS"!==t&&this._isSearchvalMissing(e)||this.getSearchvalControlAtIndex(e).errors?.minlength||this._isNotLastProperty(e)?"":null}isCompopControlDisabled(e){return this.isPropertyIdControlDisabled()||this._isPropertyIdMissing(e)?"":null}isPropertyIdControlDisabled(){return this._isResourecetypeMissing()?"":null}isSearchvalControlDisabled(e){const t=this.getCompopoControlAtIndex(e).value;return this._isResourecetypeMissing()||this._isPropertyIdOrCompopMissing(e)||"EXISTS"===t?"":null}listenToUserResourcetypeChange(){this.restypeControl.valueChanges.pipe((0,v.R)(this._destroyed$)).subscribe({next:e=>{this.selectedResourcetype=this.restypesResponse.resourcetypes.find(t=>t.id===e),this._clearPropertiesControls(),this.selectedResourcetype&&this.getPropertyLists(this.selectedResourcetype.id)},error:e=>{console.error(e)}})}listenToUserPropertyChange(e){this._getFormArrayControlAtIndex("propertyIdControl",e).valueChanges.pipe((0,v.R)(this._destroyed$)).subscribe({next:t=>{const n=this.getPopertyListEntryById(t)[0],a=n.guielement_id,o=n.valuetype_id;this.getCompopoControlAtIndex(e).setValue(""),this.getSearchvalControlAtIndex(e).setValue(""),this.selectedCompopSets[e]=this.getCompopSetByValueType(o,a)},error:t=>{console.error(t)}})}onReset(){alert("Gesamte Suchmaske zur\xfccksetzen?"),this._resetForm()}onSearch(){this.extendedSearchForm.valid&&(this.extendedSearchParams={filterByRestype:this.extendedSearchForm.value.restypeControl,propertyId:[],compop:[],searchval:[]},this.extendedSearchForm.value.propertiesControls.forEach(e=>{this.extendedSearchParams.propertyId.push(e.propertyIdControl),this.extendedSearchParams.compop.push(e.compopControl),this.extendedSearchParams.searchval.push(e.searchvalControl)}),this.searchRequest.emit(this.extendedSearchParams))}ngOnDestroy(){this._destroyed$.next(!0),this._destroyed$.complete()}_clearPropertiesControls(){this.propertiesControls.clear(),this.addPropertiesControl()}_getFormArrayControlAtIndex(e,t){return this.propertiesControls.controls[t].get(e)}_isNotLastProperty(e){return this.propertiesControls.controls.length-1>e}_isResourecetypeMissing(){const e=this.restypeControl.value;return!e||e===this.defaultFormString}_isPropertyIdMissing(e){return this._isFormControlValueMissing("propertyIdControl",e)}_isCompopMissing(e){return this._isFormControlValueMissing("compopControl",e)}_isPropertyIdOrCompopMissing(e){return this._isPropertyIdMissing(e)||this._isCompopMissing(e)}_isSearchvalMissing(e){return this._isFormControlValueMissing("searchvalControl",e)}_isFormControlValueMissing(e,t){const n=this._getFormArrayControlAtIndex(e,t).value;return!n||n===this.defaultFormString}_resetForm(){return this.extendedSearchForm.reset()}};F.ctorParameters=()=>[{type:_},{type:w.QS}],F.propDecorators={searchRequest:[{type:r.r_U}]},F=(0,i.gn)([(0,r.wA2)({selector:"awg-extended-search-form",template:'<form [formGroup]="extendedSearchForm" (ngSubmit)="onSearch()" *ngIf="extendedSearchForm" class="p-3 border">\n    <div class="form-floating awg-form-floating-group flex-grow-1 mt-3 mb-3">\n        <select\n            class="form-select"\n            id="awg-extended-search-resourcetype-input"\n            aria-label="Extended search restype control"\n            formControlName="restypeControl"\n            required>\n            <option value="" disabled hidden>{{ defaultFormString }}</option>\n            <option *ngFor="let resourcetype of restypesResponse?.resourcetypes" [ngValue]="resourcetype.id">\n                {{ resourcetype.id }} | {{ resourcetype.label }}\n            </option>\n        </select>\n        <label for="awg-extended-search-resourcetype-input" class="text-muted">Resource type</label>\n    </div>\n\n    <ng-container formArrayName="propertiesControls">\n        <div *ngFor="let propCtrl of propertiesControls.controls; index as idx" class="row mb-4 ms-4 g-2">\n            <ng-container [formGroupName]="idx">\n                <div class="form-floating col-md-4">\n                    <select\n                        id="awg-extended-search-property-{{ idx }}"\n                        class="form-select"\n                        [formControl]="getPropertyIdControlAtIndex(idx)"\n                        [attr.disabled]="isPropertyIdControlDisabled()"\n                        required>\n                        <option value="" disabled hidden>{{ defaultFormString }}</option>\n                        <ng-container *ngIf="selectedResourcetype">\n                            <option\n                                *ngFor="let property of selectedResourcetype?.properties"\n                                [value]="property.id"\n                                [title]="property.label">\n                                {{ property.id }} | {{ property.label }}\n                            </option>\n                        </ng-container>\n                    </select>\n                    <label class="text-muted" for="awg-extended-search-property-{{ idx }}">Property</label>\n                </div>\n                <div class="form-floating col-md-2">\n                    <select\n                        id="awg-extended-search-compop"\n                        class="form-select"\n                        formControlName="compopControl"\n                        [attr.disabled]="isCompopControlDisabled(idx)"\n                        required>\n                        <option value="" disabled hidden>{{ defaultFormString }}</option>\n                        <ng-container>\n                            <option\n                                *ngFor="let compop of selectedCompopSets[idx]"\n                                [ngValue]="compop.value"\n                                [title]="compop.title"\n                                [innerHtml]="compop.label"></option>\n                        </ng-container>\n                    </select>\n                    <label class="text-muted" for="awg-extended-search-compop">Operator</label>\n                </div>\n                <div class="form-floating col-md-4">\n                    <input\n                        title="Extended Search - Search Value"\n                        type="search"\n                        id="awg-extended-search-searchValue"\n                        class="form-control"\n                        [formControl]="getSearchvalControlAtIndex(idx)"\n                        [attr.disabled]="isSearchvalControlDisabled(idx)"\n                        placeholder="{{ getSearchvalPlaceholder(idx) }}" />\n                    <label class="text-muted" for="awg-extended-search-searchValue">Search value</label>\n                </div>\n\n                <div class="btn-toolbar col-2" role="toolbar" aria-label="Toolbar for property inputs">\n                    <div class="btn-group" role="group" aria-label="Group of handle buttons">\n                        <button\n                            type="button"\n                            class="btn btn-outline-danger"\n                            *ngIf="propertiesControls.controls.length > 1"\n                            (click)="removePropertiesControl(idx)">\n                            <fa-icon [icon]="faTrash"></fa-icon>\n                        </button>\n                        <button\n                            type="button"\n                            class="btn btn-outline-info"\n                            (click)="addPropertiesControl()"\n                            [attr.disabled]="isAddButtonDisabled(idx)">\n                            <fa-icon [icon]="faPlus"></fa-icon>\n                        </button>\n                    </div>\n                </div>\n            </ng-container>\n            <div\n                *ngIf="getSearchvalControlAtIndex(idx).invalid && !getSearchvalControlAtIndex(idx).pristine"\n                class="alert alert-danger">\n                <p *ngIf="getSearchvalControlAtIndex(idx).errors"></p>\n                {{ searchFormStrings.errorMessage }}\n            </div>\n        </div>\n    </ng-container>\n    <div class="mb-4">\n        <button class="btn btn-outline-info" type="submit" [disabled]="!extendedSearchForm.valid">\n            <fa-icon [icon]="faSearch"></fa-icon>\n            Suche\n        </button>\n        <button class="btn btn-outline-danger" (click)="onReset()" [disabled]="!restypeControl.valid">Reset</button>\n    </div>\n</form>\n',styles:[""]})],F);var Y=s(9300),ye=s(8372),fe=s(1884);let q=class{constructor(e){this.formBuilder=e,this.searchRequest=new r.vpe,this.faSearch=R.wn1,this.searchFormStrings={label:"Input f\xfcr Volltextsuche",placeholder:"Volltextsuche in der Webern-Datenbank \u2026",errorMessage:"Es wird ein Suchbegriff mit mindestens 3 Zeichen ben\xf6tigt!"},this._destroyed$=new O.x}get searchvalControl(){return this.searchForm.get("searchvalControl")}ngOnInit(){this.createFulltextSearchForm(),this.listenToUserInputChange()}ngOnChanges(e){e.searchValue&&!e.searchValue.isFirstChange()&&"string"==typeof e.searchValue.currentValue&&this.setSearchvalFromInput()}createFulltextSearchForm(){this.searchForm=this.formBuilder.group({searchvalControl:["",w.kI.compose([w.kI.required,w.kI.minLength(3)])]})}isFulltextSearchInputInvalid(){return this.searchvalControl.hasError("required")||this.searchvalControl.errors&&this.searchvalControl.errors.minlength}listenToUserInputChange(){this.searchvalControl.valueChanges.pipe((0,Y.h)(e=>e.length>=3),(0,ye.b)(500),(0,fe.x)(),(0,v.R)(this._destroyed$)).subscribe({next:e=>this.onSearch(e)})}setSearchvalFromInput(){this.searchvalControl.setValue(this.searchValue)}onSearch(e){this.searchForm.valid&&this.searchRequest.emit(e)}ngOnDestroy(){this._destroyed$.next(!0),this._destroyed$.complete()}};q.ctorParameters=()=>[{type:w.QS}],q.propDecorators={searchValue:[{type:r.IIB}],searchRequest:[{type:r.r_U}]},q=(0,i.gn)([(0,r.wA2)({selector:"awg-fulltext-search-form",template:'<form [formGroup]="searchForm" novalidate class="p-3 border">\n    <div class="input-group mt-3 mb-3">\n        <div class="input-group-text" id="search-icon" style="max-height: 3.63rem">\n            <fa-icon [icon]="faSearch"></fa-icon>\n        </div>\n        <div class="form-floating awg-form-floating-group flex-grow-1">\n            <input\n                title="{{ searchFormStrings.label }}"\n                type="search"\n                id="awg-fulltext-search-searchValue"\n                class="form-control"\n                [ngClass]="{\n                    \'is-invalid\': isFulltextSearchInputInvalid()\n                }"\n                formControlName="searchvalControl"\n                [attr.aria-label]="searchFormStrings.label"\n                aria-describedby="search-icon"\n                placeholder="{{ searchFormStrings.placeholder }}"\n                required />\n            <label for="awg-fulltext-search-searchValue" class="text-muted">{{ searchFormStrings.placeholder }}</label>\n            <div *ngIf="searchvalControl.invalid && !searchvalControl.pristine" class="invalid-feedback">\n                <p *ngIf="isFulltextSearchInputInvalid()">\n                    {{ searchFormStrings.errorMessage }}\n                </p>\n            </div>\n        </div>\n    </div>\n</form>\n',changeDetection:r.n4l.OnPush,styles:[".awg-form-floating-group input {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n}"]})],q);var g=s(5867),Se=s(6203);let B=class{constructor(e,t,n,a){this.router=e,this.conversionService=t,this.dataStreamerService=n,this.sideInfoService=a,this.pageChangeRequest=new r.vpe,this.rowNumberChangeRequest=new r.vpe,this.viewChangeRequest=new r.vpe,this.errorMessage=void 0,this.rowNumbers=[5,10,25,50,100,200],this.faGripHorizontal=R.BUU,this.faTable=R.B3e,this.selectedViewType=u.d.TABLE,this.viewHandles=[new u.j("Table view",u.d.TABLE,R.B3e),new u.j("Grid view",u.d.GRID,R.BUU)],this._destroyed$=new O.x}ngOnInit(){this.getSearchResponseWithQueryData(),this.searchParams.viewType&&(this.searchParams.viewType===u.d.TABLE||this.searchParams.viewType===u.d.GRID)&&this.setViewType(this.searchParams.viewType)}setViewType(e){this.selectedViewType=e}isActiveResource(e){return this._selectedResourceId===e}isGridView(){return this.searchParams.viewType===u.d.GRID}isNoResults(){return 0==+this.searchResponseWithQuery.data.nhits}navigateToResource(e){this._selectedResourceId=e,this.router.navigate(["/data/resource",this._selectedResourceId])}onPageChange(e){const t=+this.searchParams.nRows,n=e*t-t;this.pageChangeRequest.emit(String(n))}onRowNumberChange(e){this.rowNumberChangeRequest.emit(String(e))}onViewChange(e){!e||this.viewChangeRequest.emit(e)}setPagination(){const e=+this.searchParams.nRows,t=+this.searchParams.startAt;this.pageSize=e,this.page=Math.floor(t/e)+1}getSearchResponseWithQueryData(){this.dataStreamerService.getSearchResponseWithQuery().pipe((0,v.R)(this._destroyed$)).subscribe({next:t=>{this.updateSearchParams(t),this.setPagination()},error:t=>{this.errorMessage=t,console.error("SearchResultList# searchResultData subscription error: ",this.errorMessage)}})}trackById(e){return e.obj_id}updateSearchParams(e){if(!e)return;this.searchResponseWithQuery={...e},this.searchResultText=this.conversionService.prepareFullTextSearchResultText(e,this.searchUrl);const t=new Se.W(this.searchResponseWithQuery.query,this.searchResultText);this.sideInfoService.updateSearchInfoData(t)}ngOnDestroy(){this.sideInfoService.clearSearchInfoData(),this._destroyed$.next(!0),this._destroyed$.complete()}};B.ctorParameters=()=>[{type:g.F0},{type:p.re},{type:p.k$},{type:p.Iu}],B.propDecorators={searchUrl:[{type:r.IIB}],searchParams:[{type:r.IIB}],pageChangeRequest:[{type:r.r_U}],rowNumberChangeRequest:[{type:r.r_U}],viewChangeRequest:[{type:r.r_U}]},B=(0,i.gn)([(0,r.wA2)({selector:"awg-search-result-list",template:'\x3c!-- content: search results --\x3e\n\n\x3c!-- TODO Use shared generic table component to display search results\n<awg-table\n    tableTitle="{{ searchResponseWithQuery?.query | json }}"\n    [headerInputData]="test.head.vars"\n    [rowInputData]="test.body.bindings"></awg-table>\n--\x3e\n\n<div class="awg-search-results p-3 border rounded-bottom" *ngIf="searchResponseWithQuery?.data">\n    \x3c!-- header --\x3e\n    <div class="row d-flex justify-content-between mb-4 awg-search-results-header">\n        <div class="col-6 me-auto awg-search-results-header-icons">\n            <div class="btn-group" role="group">\n                \x3c!-- View Handle --\x3e\n                <awg-view-handle-button-group\n                    [viewHandles]="viewHandles"\n                    [selectedViewType]="selectedViewType"\n                    (viewChangeRequest)="onViewChange($event)"></awg-view-handle-button-group>\n\n                <div class="btn-group" role="group">\n                    <button type="button" class="btn btn-sm btn-outline-info" disabled aria-disabled="true">\n                        <span class="d-none d-lg-inline">Hits per page: </span>{{ searchParams?.nRows }}\n                    </button>\n                    <div\n                        ngbDropdown\n                        class="btn-group"\n                        role="group"\n                        aria-label="Button group with nested dropdown for row number">\n                        <button\n                            class="btn btn-sm btn-info dropdown-toggle-split"\n                            ngbDropdownToggle\n                            [disabled]="isNoResults()"></button>\n                        <div class="dropdown-menu" ngbDropdownMenu>\n                            <button\n                                class="dropdown-item"\n                                *ngFor="let rowNumber of rowNumbers"\n                                (click)="onRowNumberChange(rowNumber)">\n                                {{ rowNumber }}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="col-6 my-auto text-center awg-search-results-header-text">\n            {{ searchResultText }}\n        </div>\n    </div>\n\n    <ng-container *ngIf="searchResponseWithQuery?.data?.subjects && !isNoResults()">\n        \x3c!-- top pagination --\x3e\n        <ngb-pagination\n            class="d-flex justify-content-center"\n            [(page)]="page"\n            [pageSize]="pageSize"\n            [collectionSize]="+searchResponseWithQuery?.data?.nhits"\n            [maxSize]="4"\n            [boundaryLinks]="true"\n            (pageChange)="onPageChange($event)">\n        </ngb-pagination>\n\n        \x3c!-- table with searchResults --\x3e\n        <div *ngIf="!isGridView()" class="table-responsive">\n            <table aria-label="Table with search results" class="table table-sm awg-search-result-table">\n                <thead>\n                    <tr class="d-flex">\n                        <th scope="col" class="col-6 col-sm-4 col-md-5 col-lg-4 col-xl-3">Typ</th>\n                        <th scope="col" class="col-6 col-sm-8 col-md-7 col-lg-8 col-xl-9">Ressource</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    \x3c!-- show searchResultDetail by clicking on single entry --\x3e\n                    <tr\n                        class="d-flex"\n                        *ngFor="let subject of searchResponseWithQuery?.data?.subjects; trackBy: trackById"\n                        (click)="navigateToResource(subject?.obj_id)"\n                        [class.active]="isActiveResource(subject?.obj_id)">\n                        <td class="col-6 col-sm-4 col-md-5 col-lg-4 col-xl-3">\n                            <span class="badge">\n                                <img [attr.src]="subject?.iconsrc" alt="iconsrc" />\n                                <small>&nbsp;{{ subject?.iconlabel }}</small>\n                            </span>\n                        </td>\n                        <td class="col-6 col-sm-8 col-md-7 col-lg-8 col-xl-9">\n                            <span\n                                ><em>{{ subject!.valuelabel[0] }}:&nbsp;</em></span\n                            ><span [compile-html]="subject!.value[0]" [compile-html-ref]="this"></span>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        \x3c!-- grid with searchResults --\x3e\n        <div *ngIf="isGridView()" class="row row-cols-1 row-cols-sm-3 row-cols-xl-5 g-4 mb-4">\n            <div class="col" *ngFor="let subject of searchResponseWithQuery?.data?.subjects; trackBy: trackById">\n                <div class="card h-100">\n                    <div class="card-header">\n                        <img [attr.src]="subject?.iconsrc" alt="iconsrc" />\n                        &nbsp;{{ subject?.iconlabel }}\n                    </div>\n                    <div class="card-body">\n                        <h5 class="card-title">\n                            <span [compile-html]="subject!.value[0]" [compile-html-ref]="this"></span>\n                        </h5>\n                    </div>\n                    <div class="card-footer text-end">\n                        <a (click)="navigateToResource(subject?.obj_id)" class="btn btn-outline-info">Mehr... </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        \x3c!-- bottom pagination --\x3e\n        <ngb-pagination\n            class="d-flex justify-content-center"\n            [(page)]="page"\n            [pageSize]="pageSize"\n            [collectionSize]="+searchResponseWithQuery?.data?.nhits"\n            [maxSize]="4"\n            [boundaryLinks]="true"\n            (pageChange)="onPageChange($event)">\n        </ngb-pagination>\n    </ng-container>\n</div>\n',changeDetection:r.n4l.Default,styles:[".awg-search-results .awg-search-result-table tbody tr {\n  cursor: pointer;\n}\n\n.awg-search-results .awg-search-result-table tbody tr:hover {\n  background-color: #e7e7e7;\n}\n\n.awg-search-results .awg-search-result-table tbody tr.active td {\n  background-color: #d7d7d7;\n}"]})],B);let L=class{constructor(e){this.router=e,this.searchTitle="Suche",this.searchId="search"}ngOnInit(){this.routeToSidenav()}routeToSidenav(){this.router.navigate([{outlets:{side:"searchInfo"}}],{preserveFragment:!0,queryParamsHandling:"preserve"})}};L.ctorParameters=()=>[{type:g.F0}],L=(0,i.gn)([(0,r.wA2)({selector:"awg-data",template:'\x3c!-- content: search --\x3e\n\n\x3c!-- heading --\x3e\n<awg-heading [title]="searchTitle" [id]="searchId"></awg-heading>\n\n\x3c!-- help-block --\x3e\n<div class="help-block">BETA: Suche momentan noch mit eingeschr\xe4nkter Funktionalit\xe4t</div>\n\n\x3c!-- data (search) routes --\x3e\n<router-outlet></router-outlet>\n',styles:[""]})],L);var re=s(3900);let S=class{constructor(e,t,n,a,o,ne){this.route=e,this.router=t,this.dataApiService=n,this.dataStreamerService=a,this.gndService=o,this.loadingService=ne,this.errorMessage=void 0,this.resourceDetailTabTitles={html:"Detail",raw:"JSON (raw)",converted:"JSON (converted)"},this._destroyed$=new O.x}get httpGetUrl(){return this.dataApiService.httpGetUrl}get isLoading$(){return this.loadingService.getLoadingStatus()}ngOnInit(){this.routeToSidenav(),this.getResourceData()}getResourceData(){this.router.events.pipe((0,Y.h)(e=>e instanceof g.m2),(0,I.U)(()=>this.route),(0,re.w)(e=>{const n=this.route.snapshot.paramMap.get("id");for(;e.firstChild;)e=e.firstChild;return this.selectedResourceDetailTabId=e.snapshot.url[0].path,this.updateResourceId(n),this.dataApiService.getResourceData(n)}),(0,v.R)(this._destroyed$)).subscribe({next:e=>{this.resourceData=e},error:e=>this.errorMessage=e})}onResourceDetailTabChange(e){const t=e.nextId;this.router.navigate([t],{relativeTo:this.route})}updateResourceId(e){this.resourceId=e,this.dataStreamerService.updateResourceId(e)}navigateToResource(e){const t=e||(this.oldId?this.oldId:this.resourceId);this.oldId=this.resourceId,this.router.navigate(["/data/resource",+t])}exposeGnd(e){!e||this.gndService.exposeGnd(e)}routeToSidenav(){this.router.navigate([{outlets:{side:"resourceInfo"}}],{preserveFragment:!0,queryParamsHandling:"preserve"})}ngOnDestroy(){this._destroyed$.next(!0),this._destroyed$.complete()}};S.ctorParameters=()=>[{type:g.gz},{type:g.F0},{type:_},{type:p.k$},{type:p.dW},{type:p.bz}],S=(0,i.gn)([(0,r.wA2)({selector:"awg-resource-detail",template:'\x3c!-- resource detail box --\x3e\n\n\x3c!-- loading spinner --\x3e\n<div *ngIf="isLoading$ | async; else notLoading">\n    <awg-twelve-tone-spinner></awg-twelve-tone-spinner>\n</div>\n\n<ng-template #notLoading>\n    \x3c!-- error message --\x3e\n    <div class="errorMessage" *ngIf="errorMessage">\n        <p>Die Anfrage "{{ errorMessage?.route }}" ist fehlgeschlagen.</p>\n        <p>Fehlermeldung: "{{ errorMessage?.statusText || errorMessage }}".</p>\n        <p>M\xf6glicherweise gab es ein Problem mit der Internetverbindung oder dem verwendeten Suchbegriff.</p>\n    </div>\n\n    \x3c!-- async data --\x3e\n    <div class="awg-resource-detail-tabs" *ngIf="resourceData">\n        \x3c!-- resourceDetailData header --\x3e\n        <awg-resource-detail-header\n            *ngIf="resourceData.detail.header"\n            [header]="resourceData.detail.header"\n            [resourceUrl]="httpGetUrl"\n            (resourceRequest)="navigateToResource($event)"></awg-resource-detail-header>\n\n        \x3c!-- resourceDetailData body --\x3e\n        <nav\n            ngbNav\n            #resourceDetailNav="ngbNav"\n            class="nav-tabs"\n            [activeId]="selectedResourceDetailTabId"\n            (navChange)="onResourceDetailTabChange($event)">\n            <ng-container ngbNavItem="html">\n                <a ngbNavLink class="awg-resource-detail-long-tab">{{ resourceDetailTabTitles?.html }}</a>\n                <ng-template ngbNavContent>\n                    \x3c!-- html visualisation --\x3e\n                    <awg-resource-detail-html\n                        [resourceDetailData]="resourceData.detail"\n                        (gndRequest)="exposeGnd($event)"\n                        (resourceRequest)="navigateToResource($event)">\n                    </awg-resource-detail-html>\n                </ng-template>\n            </ng-container>\n            <ng-container ngbNavItem="converted-json">\n                <a ngbNavLink class="ms-auto">{{ resourceDetailTabTitles?.converted }}</a>\n                <ng-template ngbNavContent>\n                    \x3c!-- converted json visualisation --\x3e\n                    <awg-resource-detail-json-converted [resourceJsonConvertedData]="resourceData.jsonConverted">\n                    </awg-resource-detail-json-converted>\n                </ng-template>\n            </ng-container>\n            <ng-container ngbNavItem="raw-json">\n                <a ngbNavLink>{{ resourceDetailTabTitles?.raw }}</a>\n                <ng-template ngbNavContent>\n                    \x3c!-- raw json visualisation --\x3e\n                    <awg-resource-detail-json-raw [resourceJsonRawData]="resourceData.jsonRaw">\n                    </awg-resource-detail-json-raw>\n                </ng-template>\n            </ng-container>\n        </nav>\n        <div [ngbNavOutlet]="resourceDetailNav"></div>\n    </div>\n\n    \x3c!--\n    TODO: remove\n    <ul class="nav nav-tabs nav-justified" role="tablist">\n        <li class="active awg-resource-detail-long-tab"><a data-toggle="tab" href="#html">{{ tabTitles?.html }}</a></li>\n        <li class="dropdown awg-resource-detail-short-tab">\n            <a href="#" data-toggle="dropdown" class="dropdown-toggle">\n                {{ \'{\' }} JSON {{ \'}\' }} <b class="caret"></b>\n            </a>\n            <ul class="dropdown-menu dropdown-menu-right">\n                <li><a data-toggle="tab" href="#converted">{{ tabTitles?.converted }}</a></li>\n                <li><a data-toggle="tab" href="#raw">{{ tabTitles?.raw }}</a></li>\n            </ul>\n        </li>\n    </ul>\n    --\x3e\n</ng-template>\n',changeDetection:r.n4l.Default,styles:["@charset \"UTF-8\";\n/************************************************\n*\n*               CREDITS\n*\n* This code is inspired, adapted or taken from:\n*\n* ARACHNE \u2013 Objektdatenbank des Deutschen Arch\xe4ologischen Instituts (DAI)\n* https://arachne.dainst.org/entity/1121229**]\n* 20.11.2017\n*\n*\n*\n************************************************/\n/* for resource-header see 'resource-detail-html-header.component.scss' */\n/* for resource-html-props see 'props.component.scss' */\n/* tabs */\n/* adjust tab size on larger screens */\n@media screen and (min-width: 768px) {\n  /* set auto width for long tab */\n  .awg-resource-detail-long-tab {\n    width: auto !important;\n  }\n  /* avoid line wrap in link text */\n  .awg-resource-detail-short-tab > a {\n    white-space: nowrap;\n  }\n}\n::ng-deep .tab-content .tab-pane.active {\n  margin: 2rem 0;\n}"]})],S);var H=s(849);let N=class{constructor(e,t){this.sideInfoService=e,this.route=t}ngOnInit(){this.setButtons(),this.updateSearchInfoTitleFromPath()}setButtons(){this.searchRouterLinkButtons=[new H.v("/data","search","Suche",!1),new H.v("/data","timeline","Timeline",!0),new H.v("/data","bibliography","Bibliographie",!0)]}updateSearchInfoTitleFromPath(){const e=this.route.snapshot.url[0].path,t=this.searchRouterLinkButtons.filter(n=>n.link===e);1===t.length&&this.sideInfoService.updateSearchInfoTitle(t[0].label)}onButtonSelect(e){const t=e instanceof H.v;!e||!t||!e.label||(this.sideInfoService.clearSearchInfoData(),this.sideInfoService.updateSearchInfoTitle(e.label))}};N.ctorParameters=()=>[{type:p.Iu},{type:g.gz}],N=(0,i.gn)([(0,r.wA2)({selector:"awg-search-overview",template:'<awg-router-link-button-group\n    *ngIf="searchRouterLinkButtons"\n    [routerLinkButtons]="searchRouterLinkButtons"\n    [queryParamsHandling]="\'preserve\'"\n    (selectButtonRequest)="onButtonSelect($event)">\n</awg-router-link-button-group>\n\n<router-outlet></router-outlet>\n',styles:[""]})],N);var Ae=s(515);let D=class{constructor(e,t,n,a,o,ne){this.route=e,this.router=t,this.conversionService=n,this.dataApiService=a,this.dataStreamerService=o,this.loadingService=ne,this.errorMessage=void 0,this.searchTabs={fulltext:{id:"fulltext",title:"Volltext-Suche"},extended:{id:"extended",title:"Erweiterte Suche"}},this.viewChanged=!1,this._destroyed$=new O.x}get httpGetUrl(){return this.dataApiService.httpGetUrl}get isLoading$(){return this.loadingService.getLoadingStatus()}ngOnInit(){this.resetSearchParams(),this.getSearchData()}getSearchData(){this.router.events.pipe((0,Y.h)(e=>e instanceof g.m2),(0,I.U)(()=>this.route),(0,I.U)(e=>{let t=e;for(;t.firstChild;)t=t.firstChild;return this._isValidTabIdInRoute(t)&&(this.selectedSearchTabId=t.snapshot.url[0].path),e}),(0,re.w)(e=>{const t=e.snapshot.queryParamMap;if(t!==this.currentQueryParams)if(this.currentQueryParams=t,t.keys.length<4)this.updateSearchParamsFromRoute(t,!0);else if(this.updateSearchParamsFromRoute(t,!1),!this.viewChanged){if(this.searchParams.query&&"string"==typeof this.searchParams.query)return this.dataApiService.getSearchData(this.searchParams);if("object"==typeof this.searchParams.query&&this.searchParams.query.filterByRestype)return this.dataApiService.getSearchData(this.searchParams)}return Ae.E}),(0,v.R)(this._destroyed$)).subscribe({next:e=>{this.searchResponseWithQuery=new c.PY(e,this.searchParams.query),this.dataStreamerService.updateSearchResponseWithQuery(this.searchResponseWithQuery)},error:e=>{this.errorMessage=e,console.error("SearchPanel# getSearchData subscription error: ",this.errorMessage)}})}onPageChange(e){e!==this.searchParams.startAt&&(this.viewChanged=!1,this.searchParams=new c.bc(this.searchParams.query,this.searchParams.nRows,e,this.searchParams.viewType),this._routeToSelf(this.searchParams))}onRowNumberChange(e){e!==this.searchParams.nRows&&(this.viewChanged=!1,this.searchParams=new c.bc(this.searchParams.query,e,"0",this.searchParams.viewType),this._routeToSelf(this.searchParams))}onSearch(e){e!==this.searchParams.query&&(this.viewChanged=!1,this.searchParams=new c.bc(e,this.searchParams.nRows,this.searchParams.startAt,this.searchParams.viewType),this._routeToSelf(this.searchParams))}onSearchTabChange(e){const t=e.nextId;this.resetSearchParams(t),this.resetSearchResponse(),this.errorMessage=void 0,this._routeToSelf(this.searchParams,t)}onViewChange(e){e!==this.searchParams.viewType&&(this.viewChanged=!0,this.searchParams=new c.bc(this.searchParams.query,this.searchParams.nRows,this.searchParams.startAt,e),this._routeToSelf(this.searchParams))}resetSearchParams(e){let t;e&&e!==this.searchTabs.fulltext.id?e===this.searchTabs.extended.id&&(t=new c.Rs,t.filterByRestype="",t.propertyId=[],t.compop=[],t.searchval=[]):t="",this.searchParams=new c.bc(t,"25","0",u.d.TABLE)}resetSearchResponse(){this.searchResponseWithQuery=new c.PY(new l.vX,""),this.dataStreamerService.updateSearchResponseWithQuery(this.searchResponseWithQuery)}updateSearchParamsFromRoute(e,t){if(!e)return;let n;this.selectedSearchTabId&&this.selectedSearchTabId!==this.searchTabs.fulltext.id&&"string"!=typeof this.searchParams.query?(this.selectedSearchTabId===this.searchTabs.extended.id||"object"==typeof this.searchParams.query)&&(n=new c.Rs,n.filterByRestype=e.get("filterByRestype")||this.searchParams.query.filterByRestype,n.propertyId=e.getAll("propertyId")||this.searchParams.query.propertyId,n.compop=e.getAll("compop")||this.searchParams.query.compop,n.searchval=e.getAll("searchval")||this.searchParams.query.searchval):n=e.get("query")||this.searchParams.query,this.searchParams=new c.bc(n,e.get("nrows")||this.searchParams.nRows,e.get("startAt")||this.searchParams.startAt,u.d[e.get("view")]||this.searchParams.viewType),t&&this._routeToSelf(this.searchParams)}getSearchQueryType(e){return"string"==typeof e||"object"==typeof e?e:void 0}isSearchResultListShown(){return this.dataStreamerService.getSearchResponseWithQuery().pipe((0,v.R)(this._destroyed$)).subscribe({next:e=>console.log(e)}),!0}ngOnDestroy(){this._destroyed$.next(!0),this._destroyed$.complete()}_routeToSelf(e,t){const n=t?[t]:[],a=this._createRouterQueryParams(e);this.router.navigate(n,{relativeTo:this.route,queryParams:a})}_createRouterQueryParams(e){const t={},n=this.getSearchQueryType(e.query);return"string"==typeof n?t.query=e.query:"object"==typeof n&&(t.filterByRestype=n.filterByRestype||"",n.propertyId&&(t.propertyId=n.propertyId||[],t.compop=n.compop||[],t.searchval=n.searchval||[])),t.nrows=e.nRows,t.startAt=e.startAt,t.view=e.viewType,t}_isValidTabIdInRoute(e){return e.snapshot.url&&e.snapshot.url.length>0&&Object.values(this.searchTabs).filter(t=>t.id===e.snapshot.url[0].path).length>0}};D.ctorParameters=()=>[{type:g.gz},{type:g.F0},{type:p.re},{type:_},{type:p.k$},{type:p.bz}],D=(0,i.gn)([(0,r.wA2)({selector:"awg-search-panel",template:'\x3c!-- content: search panel --\x3e\n<div class="awg-search-tabs">\n    <nav\n        ngbNav\n        #searchNav="ngbNav"\n        class="nav-tabs nav-fill"\n        [activeId]="selectedSearchTabId"\n        (navChange)="onSearchTabChange($event)">\n        \x3c!-- TODO: see https://github.com/ng-bootstrap/ng-bootstrap/issues/1632 --\x3e\n        <ng-container [ngbNavItem]="searchTabs?.fulltext.id">\n            <a ngbNavLink id="fulltext" class="awg-fulltext-search-tab">{{ searchTabs?.fulltext.title }}</a>\n            <ng-template ngbNavContent>\n                \x3c!-- full text search --\x3e\n                <awg-fulltext-search-form\n                    [searchValue]="getSearchQueryType(searchParams?.query)"\n                    (searchRequest)="onSearch($event)">\n                </awg-fulltext-search-form>\n            </ng-template>\n        </ng-container>\n        <ng-container [ngbNavItem]="searchTabs.extended.id">\n            <a ngbNavLink class="awg-extended-search-tab">{{ searchTabs?.extended.title }}</a>\n            <ng-template ngbNavContent>\n                \x3c!-- extended search --\x3e\n                <awg-extended-search-form (searchRequest)="onSearch($event)"></awg-extended-search-form>\n            </ng-template>\n        </ng-container>\n    </nav>\n    <div [ngbNavOutlet]="searchNav"></div>\n</div>\n\n\x3c!-- loading spinner --\x3e\n<div *ngIf="isLoading$ | async; else notLoading">\n    <awg-twelve-tone-spinner></awg-twelve-tone-spinner>\n</div>\n\n\x3c!-- search results --\x3e\n<ng-template #notLoading>\n    <div class="errorMessage" *ngIf="errorMessage">\n        <p>Die Anfrage "{{ errorMessage?.route }}" ist fehlgeschlagen.</p>\n        <p>Fehlermeldung: "{{ errorMessage?.statusText || errorMessage }}".</p>\n        <p>M\xf6glicherweise gab es ein Problem mit der Internetverbindung oder der Suchanfrage.</p>\n    </div>\n\n    <awg-search-result-list\n        *ngIf="searchResponseWithQuery?.query"\n        [searchParams]="searchParams"\n        [searchUrl]="httpGetUrl"\n        (pageChangeRequest)="onPageChange($event)"\n        (rowNumberChangeRequest)="onRowNumberChange($event)"\n        (viewChangeRequest)="onViewChange($event)">\n    </awg-search-result-list>\n</ng-template>\n',styles:[""]})],D);const ke=[{path:"",component:L,children:[{path:"",pathMatch:"full",redirectTo:"search"},{path:"search",component:N,children:[{path:"",component:D,children:[{path:"",pathMatch:"full",redirectTo:"fulltext"},{path:"fulltext",data:{title:"AWG Online Edition \u2013 Fulltext Search"},component:D},{path:"extended",data:{title:"AWG Online Edition \u2013 Extended Search"},component:D},{path:"detail/:id",redirectTo:"resource/:id"}]}]}]},{path:"resource/:id",component:S,data:{title:"AWG Online Edition \u2013 Resource Detail"},children:[{path:"",pathMatch:"full",redirectTo:"html"},{path:"html",data:{title:"AWG Online Edition \u2013 Resource Detail HTML"},component:S},{path:"converted-json",data:{title:"AWG Online Edition \u2013 Resource Detail JSON Converted"},component:S},{path:"raw-json",data:{title:"AWG Online Edition \u2013 Resource Detail JSON Raw"},component:S}]}],Oe=[L,N,D,S];let ee=class{};ee=(0,i.gn)([(0,r.LVF)({imports:[g.Bz.forChild(ke)],exports:[g.Bz]})],ee);let te=class{};te=(0,i.gn)([(0,r.LVF)({imports:[M.m,X,ee],declarations:[Oe,F,q,B]})],te)},8372:(se,V,s)=>{s.d(V,{b:()=>Q});var i=s(4049),r=s(4482),M=s(5403);function Q(E,m=i.z){return(0,r.e)((z,C)=>{let d=null,x=null,G=null;const y=()=>{if(d){d.unsubscribe(),d=null;const f=x;x=null,C.next(f)}};function J(){const f=G+E,$=m.now();if($<f)return d=this.schedule(void 0,f-$),void C.add(d);y()}z.subscribe((0,M.x)(C,f=>{x=f,G=m.now(),d||(d=m.schedule(J,E),C.add(d))},()=>{y(),C.complete()},void 0,()=>{x=d=null}))})}}}]);